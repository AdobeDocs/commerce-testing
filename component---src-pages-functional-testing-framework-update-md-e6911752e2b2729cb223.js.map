{"version":3,"file":"component---src-pages-functional-testing-framework-update-md-e6911752e2b2729cb223.js","mappings":"8MAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,2CADR,4CAGA,SAACT,EAAD,CAAaU,QAAQ,OAAOC,MAAM,OAAOF,QAAQ,iBACjD,mBAAG,cAAGG,WAAW,IACb,KAAQ,wCADT,qBAAH,gQAGA,2FACA,oBACE,eAAIA,WAAW,MAAf,4CACA,eAAIA,WAAW,MAAf,iGAEF,kFAAmE,cAAGA,WAAW,IAC7E,KAAQ,mCADuD,cAAnE,WAGA,eACE,GAAM,wBADR,yBAGA,uCAAwB,mBAAQA,WAAW,KAAnB,SAAxB,sCACA,oBACE,eAAIA,WAAW,MAAf,mBAAuC,cAAGA,WAAW,KACjD,KAAQ,wCAD2B,qBAAvC,4BAGA,eAAIA,WAAW,MAAf,sCAA0D,uBAAYA,WAAW,MAAvB,uFAC1D,eAAIA,WAAW,MAAf,gCAAoD,uBAAYA,WAAW,MAAvB,qCAEtD,eACE,GAAM,wBADR,yBAGA,uCAAwB,mBAAQA,WAAW,KAAnB,UAAxB,sCACA,oBACE,eAAIA,WAAW,MAAf,6DAAiF,cAAGA,WAAW,KAC3F,KAAQ,6FADqE,aAAjF,8CAGA,eAAIA,WAAW,MAAf,yCAA6D,cAAGA,WAAW,KACvE,KAAQ,yBADiD,0BAG7D,eAAIA,WAAW,MAAf,sCAA0D,uBAAYA,WAAW,MAAvB,SAA1D,aAAyH,cAAGA,WAAW,KACnI,KAAQ,uCAD6G,sBAGzH,eAAIA,WAAW,MAAf,4BAAgD,uBAAYA,WAAW,MAAvB,iBAAhD,WAAqH,uBAAYA,WAAW,MAAvB,oCAEvH,eACE,GAAM,wBADR,yBAGA,uCAAwB,mBAAQA,WAAW,KAAnB,SAAxB,sCACA,oBACE,eAAIA,WAAW,MAAf,4EAAgG,cAAGA,WAAW,KAC1G,KAAQ,oCADoF,iCAAhG,+CAGA,eAAIA,WAAW,MAAf,sEAEF,eACE,GAAM,kBADR,mBAGA,oBACE,eAAIA,WAAW,MAAf,4EAAgG,uBAAYA,WAAW,MAAvB,yDAChG,eAAIA,WAAW,MAAf,2IACA,eAAIA,WAAW,MAAf,6FAOL,CAEDL,EAAWM,gBAAiB,C","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/update.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"update-the-functional-testing-framework\"\n    }}>{`Update the Functional Testing Framework`}</h1>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p><a parentName=\"p\" {...{\n        \"href\": \"index.md#find-your-framework-version\"\n      }}>{`Find your version`}</a>{` of the Functional Testing Framework. The latest Adobe Commerce or Magento Open Source 2.4.x release supports Functional Testing Framework 3.x. The latest Adobe Commerce or Magento Open Source 2.3.x release supports Functional Testing Framework 2.6.x.`}</p>\n    <p>{`Tests and the framework itself are stored in different repositories.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Tests are stored in Module's directory.`}</li>\n      <li parentName=\"ul\">{`The Functional Testing Framework is installed separately (usually as a Composer dependency)`}</li>\n    </ul>\n    <p>{`To understand different types of update - please follow the `}<a parentName=\"p\" {...{\n        \"href\": \"versioning.md#versioning-policy\"\n      }}>{`Versioning`}</a>{` page.`}</p>\n    <h2 {...{\n      \"id\": \"patch-version-update\"\n    }}>{`Patch version update`}</h2>\n    <p>{`Takes place when `}<strong parentName=\"p\">{`third`}</strong>{` digit of version number changes.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Make sure that `}<a parentName=\"li\" {...{\n          \"href\": \"getting-started.md#security-settings\"\n        }}>{`Security settings`}</a>{` are set appropriately.`}</li>\n      <li parentName=\"ol\">{`Get latest Framework version with `}<inlineCode parentName=\"li\">{`composer update magento/magento2-functional-testing-framework --with-dependencies`}</inlineCode></li>\n      <li parentName=\"ol\">{`Generate updated tests with `}<inlineCode parentName=\"li\">{`vendor/bin/mftf generate:tests`}</inlineCode></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"minor-version-update\"\n    }}>{`Minor version update`}</h2>\n    <p>{`Takes place when `}<strong parentName=\"p\">{`second`}</strong>{` digit of version number changes.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Check details about backward incompatible changes in the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/magento/magento2-functional-testing-framework/blob/master/CHANGELOG.md\"\n        }}>{`Changelog`}</a>{` and update your new or customized tests.`}</li>\n      <li parentName=\"ol\">{`Perform all the actions provided for `}<a parentName=\"li\" {...{\n          \"href\": \"#patch-version-update\"\n        }}>{`Patch Version Update`}</a></li>\n      <li parentName=\"ol\">{`When updating from versions below `}<inlineCode parentName=\"li\">{`2.5.0`}</inlineCode>{`, verify `}<a parentName=\"li\" {...{\n          \"href\": \"getting-started.md#wysiwyg-settings\"\n        }}>{`WYSIWYG settings`}</a></li>\n      <li parentName=\"ol\">{`You may need to run the `}<inlineCode parentName=\"li\">{`upgrade:tests`}</inlineCode>{` using `}<inlineCode parentName=\"li\">{`vendor/bin/mftf upgrade:tests`}</inlineCode></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"major-version-update\"\n    }}>{`Major version update`}</h2>\n    <p>{`Takes place when `}<strong parentName=\"p\">{`first`}</strong>{` digit of version number changes.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Check detailed explanation and instructions on major version upgrade in `}<a parentName=\"li\" {...{\n          \"href\": \"backward-incompatible-changes.md\"\n        }}>{`Backward Incompatible Changes`}</a>{` and upgrade your new or customized tests.`}</li>\n      <li parentName=\"ol\">{`Perform all the actions provided for `}{`[Minor Version Update][]`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"after-updating\"\n    }}>{`After updating`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`It is a good idea to regenerate your IDE Schema Definition catalog with `}<inlineCode parentName=\"li\">{`vendor/bin/mftf generate:urn-catalog .idea/misc.xml`}</inlineCode></li>\n      <li parentName=\"ol\">{`Update your tests, including data, metadata and other resources. Check if they contain tags that are unsupported in the newer version.`}</li>\n      <li parentName=\"ol\">{`Remove the references to resources (ActionGroups, Sections, Tests) marked as deprecated.`}</li>\n    </ol>\n    {\n      /* Link Definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}