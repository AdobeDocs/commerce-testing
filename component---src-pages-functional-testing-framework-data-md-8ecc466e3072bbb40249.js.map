{"version":3,"file":"component---src-pages-functional-testing-framework-data-md-8ecc466e3072bbb40249.js","mappings":"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","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/data.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"input-testing-data\"\n    }}>{`Input testing data`}</h1>\n    <p>{`The Functional Testing Framework enables you to specify and use `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entities defined in XML. Default `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entities are provided for use and as templates for entity creation and manipulation.\nThe following diagram shows the XML structure of a data object:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/commerce-testing/assets/15879c742aceb4f63c9b1dc7f655b3d6/data-dia.svg\",\n        \"alt\": \"Data Object\"\n      }}></img></p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entities are stored in `}<inlineCode parentName=\"p\">{`<module_dir>/Test/Mftf/Data/`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"supply-data-to-test-by-reference-to-a-data-entity\"\n    }}>{`Supply data to test by reference to a data entity`}</h2>\n    <p>{`Test steps requiring `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` input in an action, like filling a field with a string, may reference an attribute from a data entity:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`userInput=\"{{SimpleSubCategory.name}}\"\n`}</code></pre>\n    <p>{`In this example:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SimpleSubCategory`}</inlineCode>{` is an entity name.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name`}</inlineCode>{` is a `}<inlineCode parentName=\"li\">{`<data>`}</inlineCode>{` key of the entity. The corresponding value will be assigned to `}<inlineCode parentName=\"li\">{`userInput`}</inlineCode>{` as a result.`}</li>\n    </ul>\n    <p>{`The following is an example of the usage of `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entity in the `}<inlineCode parentName=\"p\">{`Magento/Customer/Test/Mftf/Test/AdminCustomersAllCustomersNavigateMenuTest.xml`}</inlineCode>{` test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<actionGroup ref=\"AdminNavigateMenuActionGroup\" stepKey=\"navigateToAllCustomerPage\">\n    <argument name=\"menuUiId\" value=\"{{AdminMenuCustomers.dataUiId}}\"/>\n    <argument name=\"submenuUiId\" value=\"{{AdminMenuCustomersAllCustomers.dataUiId}}\"/>\n</actionGroup>\n`}</code></pre>\n    <p>{`In the above example:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`AdminMenuCustomers`}</inlineCode>{` is an entity name.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dataUiId`}</inlineCode>{` is a `}<inlineCode parentName=\"li\">{`<data>`}</inlineCode>{` key of the entity.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"environmental-data\"\n    }}>{`Environmental data`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`userInput=\"{{_ENV.MAGENTO_ADMIN_USERNAME}}\"\n`}</code></pre>\n    <p>{`In this example:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`_ENV`}</inlineCode>{` is a reference to the `}<inlineCode parentName=\"li\">{`dev/tests/acceptance/.env`}</inlineCode>{` file, where basic environment variables are set.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MAGENTO_ADMIN_USERNAME`}</inlineCode>{` is a name of an environment variable.\nThe corresponding value will be assigned to `}<inlineCode parentName=\"li\">{`userInput`}</inlineCode>{` as a result.`}</li>\n    </ul>\n    <p>{`The following is an example of the usage of `}<inlineCode parentName=\"p\">{`_ENV`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`Magento/Braintree/Test/Mftf/ActionGroup/AdminDeleteRoleActionGroup.xml`}</inlineCode>{` action group:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<fillField stepKey=\"TypeCurrentPassword\" selector=\"{{AdminDeleteRoleSection.current_pass}}\" userInput=\"{{_ENV.MAGENTO_ADMIN_PASSWORD}}\"/>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"sensitive-data\"\n    }}>{`Sensitive data`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`userInput=\"{{_CREDS.my_secret_token}}\"\n`}</code></pre>\n    <p>{`In this example:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`_CREDS`}</inlineCode>{` is a constant to reference to the `}<inlineCode parentName=\"li\">{`dev/tests/acceptance/.credentials`}</inlineCode>{` file, where sensitive data and secrets are stored for use in a test.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MY_SECRET_TOKEN`}</inlineCode>{` is the name of a key in the credentials variable.\nThe corresponding value of the credential will be assigned to `}<inlineCode parentName=\"li\">{`userInput`}</inlineCode>{` as a result.`}</li>\n      <li parentName=\"ul\">{`The decrypted values are only available in the `}<inlineCode parentName=\"li\">{`.credentials`}</inlineCode>{` file in which they are stored.`}</li>\n    </ul>\n    <p>{`Learn more in `}<a parentName=\"p\" {...{\n        \"href\": \"credentials.md\"\n      }}>{`Credentials`}</a>{`.`}</p>\n    <p>{`The following is an example of the usage of `}<inlineCode parentName=\"p\">{`_CREDS`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`Magento/Braintree/Test/Mftf/Data/BraintreeData.xml`}</inlineCode>{` data entity:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"MerchantId\" type=\"merchant_id\">\n    <data key=\"value\">{{_CREDS.magento/braintree_enabled_fraud_merchant_id}}</data>\n</entity>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"persist-a-data-entity-as-a-prerequisite-of-a-test\"\n    }}>{`Persist a data entity as a prerequisite of a test`}</h2>\n    <p>{`A test can specify an entity to be persisted (created in the database) so that the test actions could operate on the existing known data.`}</p>\n    <p>{`Example of referencing `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` in a test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`userInput=\"$createCustomer.email$\"\n`}</code></pre>\n    <p>{`In this example:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`createCustomer`}</inlineCode>{` is a step key of the corresponding test step that creates an entity.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`email`}</inlineCode>{` is a data key of the entity.\nThe corresponding value will be assigned to `}<inlineCode parentName=\"li\">{`userInput`}</inlineCode>{` as a result.`}</li>\n    </ul>\n    <p>{`The following is an example of the usage of the persistant data in `}<inlineCode parentName=\"p\">{`Magento/Customer/Test/Mftf/Test/AdminCreateCustomerWithCountryUSATest.xml`}</inlineCode>{` test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<actionGroup ref=\"AdminFilterCustomerByEmail\" stepKey=\"filterTheCustomerByEmail\">\n    <argument name=\"email\" value=\"$$createCustomer.email$$\"/>\n</actionGroup>\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`As of Functional Testing Framework 2.3.6, you no longer need to differentiate between scopes (a test, a hook, or a suite) for persisted data when referencing it in tests.`}</p>\n    <p>{`The Functional Testing Framework now stores the persisted data and attempts to retrieve it using the combination of `}<inlineCode parentName=\"p\">{`stepKey`}</inlineCode>{` and the scope of where it has been called.\nThe current scope is preferred, then widening to `}<em parentName=\"p\">{`test > hook > suite`}</em>{` or `}<em parentName=\"p\">{`hook > test > suite`}</em>{`.`}</p>\n    <p>{`This emphasizes the practice for the `}<inlineCode parentName=\"p\">{`stepKey`}</inlineCode>{` of `}<inlineCode parentName=\"p\">{`createData`}</inlineCode>{` to be descriptive and unique, as a duplicated `}<inlineCode parentName=\"p\">{`stepKey`}</inlineCode>{` in both a `}<inlineCode parentName=\"p\">{`<test>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<before>`}</inlineCode>{` prefers the `}<inlineCode parentName=\"p\">{`<test>`}</inlineCode>{` data.`}</p>\n    <h2 {...{\n      \"id\": \"use-data-returned-by-test-actions\"\n    }}>{`Use data returned by test actions`}</h2>\n    <p>{`A test can also reference data that was returned as a result of `}<a parentName=\"p\" {...{\n        \"href\": \"test/actions.md#actions-returning-a-variable\"\n      }}>{`test actions`}</a>{`, like the action `}<inlineCode parentName=\"p\">{`<grabValueFrom selector=\"someSelector\" stepKey=\"grabStepKey>`}</inlineCode>{`.`}</p>\n    <p>{`Further in the test, the data grabbed by the `}<inlineCode parentName=\"p\">{`someSelector`}</inlineCode>{` selector can be referenced using the `}<inlineCode parentName=\"p\">{`stepKey`}</inlineCode>{` value. In this case, it is `}<inlineCode parentName=\"p\">{`grabStepKey`}</inlineCode>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`stepKey`}</inlineCode>{` value can only be referenced within the test scope that it is defined in (`}<inlineCode parentName=\"p\">{`test`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`before/after`}</inlineCode>{`).`}</p>\n    <p>{`The following example shows the usage of `}<inlineCode parentName=\"p\">{`grabValueFrom`}</inlineCode>{` in testing, where the returned value is used by action's `}<inlineCode parentName=\"p\">{`stepKey`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<grabValueFrom selector=\"someSelector\" stepKey=\"grabStepKey\"/>\n<fillField selector=\".functionalTestSelector\" userInput=\"{$grabStepKey}\" stepKey=\"fillFieldKey1\"/>\n`}</code></pre>\n    <p>{`The following is an example of the `}<inlineCode parentName=\"p\">{`Magento/Catalog/Test/Mftf/ActionGroup/AssertDiscountsPercentageOfProductsActionGroup.xml`}</inlineCode>{` test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<grabValueFrom selector=\"{{AdminProductFormAdvancedPricingSection.productTierPricePercentageValuePriceInput('0')}}\" stepKey=\"grabProductTierPriceInput\"/>\n<assertEquals stepKey=\"assertProductTierPriceInput\">\n    <expectedResult type=\"string\">{{amount}}</expectedResult>\n    <actualResult type=\"string\">$grabProductTierPriceInput</actualResult>\n</assertEquals>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"hard-coded-data-input\"\n    }}>{`Hard-coded data input`}</h2>\n    <p>{`The data to operate against can be included as literals in a test. Hard-coded data input can be useful in assertions.`}</p>\n    <p>{`See also `}<a parentName=\"p\" {...{\n        \"href\": \"test/actions.md\"\n      }}>{`Actions`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`userInput=\"We'll email you an order confirmation with details and tracking info.\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"format\"\n    }}>{`Format`}</h2>\n    <p>{`The format of the `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entity is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<entities xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:DataGenerator/etc/dataProfileSchema.xsd\">\n    <entity name=\"\" type=\"\">\n        <data key=\"\"></data>\n    </entity>\n    <entity name=\"\" type=\"\">\n        <data key=\"\" unique=\"\"></data>\n        <var key=\"\" entityType=\"\" entityKey=\"\"/>\n    </entity>\n</entities>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <p>{`The following conventions apply to `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entities:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A `}<inlineCode parentName=\"li\">{`<data>`}</inlineCode>{` file may contain multiple data entities.`}</li>\n      <li parentName=\"ul\">{`Camel case is used for `}<inlineCode parentName=\"li\">{`<data>`}</inlineCode>{` elements. The name represents the `}<inlineCode parentName=\"li\">{`<data>`}</inlineCode>{` type. For example, a file with customer data is `}<inlineCode parentName=\"li\">{`CustomerData.xml`}</inlineCode>{`. A file for simple product would be `}<inlineCode parentName=\"li\">{`SimpleProductData.xml`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Camel case is used for the entity name.`}</li>\n      <li parentName=\"ul\">{`The file name must have the suffix `}<inlineCode parentName=\"li\">{`Data.xml`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Example (`}<inlineCode parentName=\"p\">{`Magento/Catalog/Test/Mftf/Data/CategoryData.xml`}</inlineCode>{` file):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<entities xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:DataGenerator/etc/dataProfileSchema.xsd\">\n    <entity name=\"_defaultCategory\" type=\"category\">\n        <data key=\"name\" unique=\"suffix\">simpleCategory</data>\n        <data key=\"name_lwr\" unique=\"suffix\">simplecategory</data>\n        <data key=\"is_active\">true</data>\n    </entity>\n    <entity name=\"SimpleSubCategory\" type=\"category\">\n        <data key=\"name\" unique=\"suffix\">SimpleSubCategory</data>\n        <data key=\"name_lwr\" unique=\"suffix\">simplesubcategory</data>\n        <data key=\"is_active\">true</data>\n        <data key=\"include_in_menu\">true</data>\n    </entity>\n</entities>\n`}</code></pre>\n    <p>{`This example declares two `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entities: `}<inlineCode parentName=\"p\">{`_defaultCategory`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`SimpleSubCategory`}</inlineCode>{`. They set the data required for `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.magento.com/user-guide/catalog/category-create.html\"\n      }}>{`category creation`}</a>{`.`}</p>\n    <p>{`All entities that have the same name will be merged during test generation. Both entities are of the `}<inlineCode parentName=\"p\">{`category`}</inlineCode>{` type.`}</p>\n    <p><inlineCode parentName=\"p\">{`_defaultCategory`}</inlineCode>{` sets three data fields:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name`}</inlineCode>{` defines the category name as `}<inlineCode parentName=\"li\">{`simpleCategory`}</inlineCode>{` with a unique suffix. Example: `}<inlineCode parentName=\"li\">{`simpleCategory598742365`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name_lwr`}</inlineCode>{` defines the category name in lowercase format with a unique suffix. Example: `}<inlineCode parentName=\"li\">{`simplecategory697543215`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`is_active`}</inlineCode>{` sets the enable category to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`.`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`SimpleSubCategory`}</inlineCode>{` sets four data fields:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name`}</inlineCode>{` that defines the category name with a unique suffix. Example: `}<inlineCode parentName=\"li\">{`SimpleSubCategory458712365`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name_lwr`}</inlineCode>{` that defines the category name in lowercase format with a unique suffix. Example: `}<inlineCode parentName=\"li\">{`simplesubcategory753698741`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`is_active`}</inlineCode>{` sets the enable category to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`include_in_menu`}</inlineCode>{` that sets the include in the menu to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`The following is an example of a call in test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<fillField selector=\"{{AdminCategoryBasicFieldSection.categoryNameInput}}\" userInput=\"{{_defaultCategory.name}}\" stepKey=\"enterCategoryName\"/>\n`}</code></pre>\n    <p>{`This action inputs data from the `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` of the `}<inlineCode parentName=\"p\">{`_defaultCategory`}</inlineCode>{` entity (for example, `}<inlineCode parentName=\"p\">{`simpleCategory598742365`}</inlineCode>{`) into the field with the locator defined in the selector of the `}<inlineCode parentName=\"p\">{`categoryNameInput`}</inlineCode>{` element of the `}<inlineCode parentName=\"p\">{`AdminCategoryBasicFieldSection`}</inlineCode>{`.`}</p>\n    <p>{`You can also call data from the xml definition of a `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` tag directly:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"NewAdminUser\" type=\"user\">\n    <data key=\"username\" unique=\"suffix\">admin</data>\n    <data key=\"current_password\">{{AnotherUser.current_password}}</data>  <!-- Data from another entity -->\n    <data key=\"current_password\">{{_ENV.MAGENTO_ADMIN_PASSWORD}}</data>  <!-- ENV file reference -->\n</entity>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"reference\"\n    }}>{`Reference`}</h2>\n    <h3 {...{\n      \"id\": \"entities\"\n    }}>{`entities`}</h3>\n    <p><inlineCode parentName=\"p\">{`<entities>`}</inlineCode>{` is an element that contains all `}<inlineCode parentName=\"p\">{`<entity>`}</inlineCode>{`  elements.`}</p>\n    <h3 {...{\n      \"id\": \"entity\"\n    }}>{`entity`}</h3>\n    <p><inlineCode parentName=\"p\">{`<entity>`}</inlineCode>{` is an element that contains `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` elements.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the `}<inlineCode parentName=\"td\">{`<entity>`}</inlineCode>{`. Use camel case for entity names.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Node containing the exact name of `}<inlineCode parentName=\"td\">{`<entity>`}</inlineCode>{` type. Used later to find specific Persistence Layer Model class. `}<inlineCode parentName=\"td\">{`type`}</inlineCode>{` in `}<inlineCode parentName=\"td\">{`<data>`}</inlineCode>{` can be whatever the user wants; There are no constraints. It is important when persisting data, depending on the `}<inlineCode parentName=\"td\">{`type`}</inlineCode>{` given, as it will try to match a metadata definition with the operation being done. Example: A `}<inlineCode parentName=\"td\">{`myCustomer`}</inlineCode>{` entity with `}<inlineCode parentName=\"td\">{`type=\"customer\"`}</inlineCode>{`, calling `}<inlineCode parentName=\"td\">{`<createData entity=\"myCustomer\"/>`}</inlineCode>{`, will try to find a metadata entry with the following attributes: `}<inlineCode parentName=\"td\">{`<operation dataType=\"customer\" type=\"create\">`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`deprecated`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Used to warn about the future deprecation of the data entity. String will appear in Allure reports and console output at runtime.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><inlineCode parentName=\"p\">{`<entity>`}</inlineCode>{` may contain one or more `}<a parentName=\"p\" {...{\n        \"href\": \"#data\"\n      }}><inlineCode parentName=\"a\">{`<data>`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"#var\"\n      }}><inlineCode parentName=\"a\">{`<var>`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"#requiredentity\"\n      }}><inlineCode parentName=\"a\">{`<required-entities>`}</inlineCode></a>{`, or `}<a parentName=\"p\" {...{\n        \"href\": \"#array\"\n      }}><inlineCode parentName=\"a\">{`<array>`}</inlineCode></a>{` elements in any sequence.`}</p>\n    <h3 {...{\n      \"id\": \"data\"\n    }}>{`data`}</h3>\n    <p><inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` is an element containing a data/value pair.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key attribute of data/value pair.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`unique`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`enum: `}<inlineCode parentName=\"td\">{`\"prefix\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"suffix\"`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Add suite or test wide unique sequence as \"prefix\" or \"suffix\" to the data value if specified.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<data key=\"name\" unique=\"suffix\">simpleCategory</data>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"var\"\n    }}>{`var`}</h3>\n    <p><inlineCode parentName=\"p\">{`<var>`}</inlineCode>{` is an element that can be used to grab a key value from another entity. For example, when creating a customer with the `}<inlineCode parentName=\"p\">{`<createData>`}</inlineCode>{` action, the server responds with the auto-incremented ID of that customer. Use `}<inlineCode parentName=\"p\">{`<var>`}</inlineCode>{` to access that ID and use it in another data entity.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key attribute of this entity to assign a value to.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`entityType`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type attribute of referenced entity.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`entityKey`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key attribute of the referenced entity from which to get a value.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`unique`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`This attribute hasn't been implemented yet.`}</em></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<var key=\"parent_id\" entityType=\"category\" entityKey=\"id\" />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"requiredentity\"\n    }}>{`requiredEntity`}</h3>\n    <p><inlineCode parentName=\"p\">{`<requiredEntity>`}</inlineCode>{` is an element that specifies the parent/child relationship between complex types.`}</p>\n    <p>{`Example: You have customer address info. To specify that relationship:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"CustomerEntity\" type=\"customer\">\n    ...\n    <requiredEntity type=\"address\">AddressEntity</requiredEntity>\n    ...\n</entity>\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type attribute of `}<inlineCode parentName=\"td\">{`<requiredEntity>`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"array\"\n    }}>{`array`}</h3>\n    <p><inlineCode parentName=\"p\">{`<array>`}</inlineCode>{` is an element that contains a reference to an array of values.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"AddressEntity\" type=\"address\">\n    ...\n    <array key=\"street\">\n        <item>7700 W Parmer Ln</item>\n        <item>Bld D</item>\n    </array>\n    ...\n</entity>\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key attribute of this entity in which to assign a value.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><inlineCode parentName=\"p\">{`<array>`}</inlineCode>{` may contain `}<a parentName=\"p\" {...{\n        \"href\": \"#item\"\n      }}><inlineCode parentName=\"a\">{`<item>`}</inlineCode></a>{` elements.`}</p>\n    <h3 {...{\n      \"id\": \"item\"\n    }}>{`item`}</h3>\n    <p><inlineCode parentName=\"p\">{`<item>`}</inlineCode>{` is an individual piece of data to be passed in as part of the parent `}<inlineCode parentName=\"p\">{`<array>`}</inlineCode>{` type.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key attribute of `}<item />{` entity in which to assign a value. By default numeric key will be generated.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    {\n      /* Link Definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}