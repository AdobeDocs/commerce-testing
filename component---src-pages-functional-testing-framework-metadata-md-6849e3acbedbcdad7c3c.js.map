{"version":3,"file":"component---src-pages-functional-testing-framework-metadata-md-6849e3acbedbcdad7c3c.js","mappings":"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","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/metadata.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"metadata\"\n    }}>{`Metadata`}</h1>\n    <p>{`In this topic we talk about handling entities that you need in your tests (such as categories, products, wish lists, and similar) using MFTF.\nUsing data handling actions like `}{`[`}<inlineCode parentName=\"p\">{`createData`}</inlineCode>{`]`}{`, `}{`[`}<inlineCode parentName=\"p\">{`deleteData`}</inlineCode>{`]`}{`, `}{`[`}<inlineCode parentName=\"p\">{`updateData`}</inlineCode>{`]`}{`, and `}{`[`}<inlineCode parentName=\"p\">{`getData`}</inlineCode>{`]`}{`, you are able to create, delete, update, and read entities for your tests.\nThe framework enables you to send HTTP requests with these statically defined data entities:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#sending-a-rest-api-request\"\n        }}>{`Sending a REST API request`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#handling-a-rest-api-response\"\n        }}>{`Handling a REST API response`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#handling-entities-using-html-forms\"\n        }}>{`Sending an HTML form encoded in URL`}</a></li>\n    </ul>\n    <p>{`You have probably noticed that some modules in acceptance functional tests contain a directory, which is called `}<inlineCode parentName=\"p\">{`Metadata`}</inlineCode>{`.`}</p>\n    <p>{`Example of a module with `}<em parentName=\"p\">{`Metadata`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tree\"\n      }}>{`Wishlist\n├── Data\n├── Metadata\n├── Page\n├── Section\n└── Test\n`}</code></pre>\n    <p>{`This directory contains XML files with metadata required to create a valid request to handle an entity defined in `}<inlineCode parentName=\"p\">{`dataType`}</inlineCode>{`.\nA metadata file contains a list of operations with different types (defined in `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`).\nEach `}<a parentName=\"p\" {...{\n        \"href\": \"#operation\"\n      }}>{`operation`}</a>{` includes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The set of adjustments for processing a request in `}<a parentName=\"li\" {...{\n          \"href\": \"#operations\"\n        }}>{`attributes`}</a>{`, and in some cases, a response  (see `}<inlineCode parentName=\"li\">{`successRegex`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`returnRegex`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`returnIndex`}</inlineCode>{` in `}<a parentName=\"li\" {...{\n          \"href\": \"#operations\"\n        }}>{`reference details`}</a>{`).`}</li>\n      <li parentName=\"ul\">{`The type of body content encoding in `}<a parentName=\"li\" {...{\n          \"href\": \"#contenttype\"\n        }}>{`contentType`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`The body of the request represented as a tree of objects, arrays, and fields.`}</li>\n    </ul>\n    <p>{`When a test step requires handling the specified data entity, the Functional Testing Framework performs the following steps:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Reads input data (`}<inlineCode parentName=\"li\">{`<data/>`}</inlineCode>{`) and the type (the `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{` attribute) of the specified `}<a parentName=\"li\" {...{\n          \"href\": \"data.md#entity\"\n        }}>{`entity`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Searches the metadata operation for the `}<inlineCode parentName=\"li\">{`dataType`}</inlineCode>{` that matches the entity's `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{`. For example, `}<inlineCode parentName=\"li\">{`<entity type=\"product\">`}</inlineCode>{` matches `}<inlineCode parentName=\"li\">{`<operation dataType=\"product\"`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Forms a request of the operation and the input data of the entity according to matching metadata.`}</li>\n      <li parentName=\"ul\">{`Stores a response and provides access to its data using the Functional Testing Framework variables syntax in XML.`}</li>\n    </ul>\n    <p>{`The following diagram demonstrates the XML structure of a metadata file:\n`}<img parentName=\"p\" {...{\n        \"src\": \"/commerce-testing/assets/a9d5ffa47ce5af4b2947cf242c1ae8d4/metadata-dia.svg\",\n        \"alt\": \"Structure of metadata\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"format\"\n    }}>{`Format`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<operations xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:DataGenerator/etc/dataOperation.xsd\">\n    <operation name=\"\"\n               dataType=\"\"\n               type=\"\"\n               auth=\"\"\n               url=\"\"\n               method=\"\">\n        <contentType></contentType>\n        <object key=\"\" dataType=\"\">\n            <field key=\"\">integer</field>\n            <field key=\"\">string</field>\n            <field key=\"\">boolean</field>\n            <array key=\"\">\n                <value>string</value>\n            </array>\n        </object>\n    </operation>\n</operations>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`A `}<inlineCode parentName=\"li\">{`dataType`}</inlineCode>{` value must match the `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{` value of the corresponding entity.`}</li>\n      <li parentName=\"ol\">{`A filename should be PascalCase and end with `}<inlineCode parentName=\"li\">{`Meta.xml`}</inlineCode>{`.\nExample: `}<inlineCode parentName=\"li\">{`ProductAttributeMeta.xml`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`A metadata file may contain different types of operations (`}<inlineCode parentName=\"li\">{`type`}</inlineCode>{`) with the same data entity (`}<inlineCode parentName=\"li\">{`dataType`}</inlineCode>{`).`}</li>\n    </ol>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<operations>\n    <operation type=\"create\" dataType=\"category\">\n        ...\n    </operation>\n    <operation type=\"update\" dataType=\"category\">\n        ...\n    </operation>\n    <operation type=\"delete\" dataType=\"category\">\n        ...\n    </operation>\n    <operation type=\"get\" dataType=\"category\">\n        ...\n    </operation>\n</operations>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"handling-entities-using-rest-api\"\n    }}>{`Handling entities using REST API`}</h2>\n    <h3 {...{\n      \"id\": \"sending-a-rest-api-request\"\n    }}>{`Sending a REST API request`}</h3>\n    <p>{`The Functional Testing Framework allows you to handle basic CRUD operations with an object using `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/get-started/bk-get-started-api.html\"\n      }}>{`REST API`}</a>{` requests.\nTo convert a request to the Functional Testing Framework format, wrap the corresponding REST API request into XML tags according to the `}<a parentName=\"p\" {...{\n        \"href\": \"#reference\"\n      }}>{`Reference documentation`}</a>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`GET is used for retrieving data from objects.`}</li>\n      <li parentName=\"ul\">{`POST is used for creating new objects.`}</li>\n      <li parentName=\"ul\">{`PUT is used for updating objects.`}</li>\n      <li parentName=\"ul\">{`DELETE is used for deleting objects.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"category-example\"\n    }}>{`Category Example`}</h4>\n    <p>{`This is an example of how to handle a category using REST API operations provided by the `}<inlineCode parentName=\"p\">{`catalogCategoryRepositoryV1`}</inlineCode>{` service.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"979px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"21.25%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/5530d/catalogCategoryRepository-operations.webp 320w\", \"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/0c8fb/catalogCategoryRepository-operations.webp 640w\", \"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/8a413/catalogCategoryRepository-operations.webp 979w\"],\n            \"sizes\": \"(max-width: 979px) 100vw, 979px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/dd4a7/catalogCategoryRepository-operations.png 320w\", \"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/0f09e/catalogCategoryRepository-operations.png 640w\", \"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/1d5a8/catalogCategoryRepository-operations.png 979w\"],\n            \"sizes\": \"(max-width: 979px) 100vw, 979px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/1d5a8/catalogCategoryRepository-operations.png\",\n            \"alt\": \"REST API operations provided by catalogCategoryRepositoryV1\",\n            \"title\": \"REST API operations provided by catalogCategoryRepositoryV1\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`The above screenshot from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/get-started/bk-get-started-api.html\"\n      }}>{`REST API Reference`}</a>{` demonstrates a list of available operations to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Delete a category by its identifier (`}<inlineCode parentName=\"li\">{`method=\"DELETE\"`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\">{`Get information about a category by its ID (`}<inlineCode parentName=\"li\">{`method=\"GET\"`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#create-an-object-in-admin\"\n        }}>{`Create a new category`}</a>{` (`}<inlineCode parentName=\"li\">{`method=\"POST\"`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\">{`Update category data by its ID (`}<inlineCode parentName=\"li\">{`method=\"PUT\"`}</inlineCode>{`)`}</li>\n    </ul>\n    <p>{`We assume that our `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file sets `}<inlineCode parentName=\"p\">{`MAGENTO_BASE_URL=https://example.com/`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`MAGENTO_BACKEND_NAME=admin`}</inlineCode>{`.`}</p>\n    <h5 {...{\n      \"id\": \"create-a-simple-category\"\n    }}>{`Create a simple category`}</h5>\n    <p>{`Let's see what happens when you create a category:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<createData entity=\"_defaultCategory\" stepKey=\"createPreReqCategory\"/>\n`}</code></pre>\n    <p>{`The Functional Testing Framework searches in the `}<em parentName=\"p\">{`Data`}</em>{` directory an entity with `}<inlineCode parentName=\"p\">{`<entity name=\"_defaultCategory\">`}</inlineCode>{` and reads `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` of the entity.\nIf there are more than one entity with the same name, all of the entities are merged.`}</p>\n    <p><em parentName=\"p\">{`Catalog/Data/CategoryData.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"_defaultCategory\" type=\"category\">\n    <data key=\"name\" unique=\"suffix\">simpleCategory</data>\n    <data key=\"name_lwr\" unique=\"suffix\">simplecategory</data>\n    <data key=\"is_active\">true</data>\n</entity>\n`}</code></pre>\n    <p>{`Here, `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` is equal to `}<inlineCode parentName=\"p\">{`\"category\"`}</inlineCode>{`, which instructs the Functional Testing Framework to search an operation with `}<inlineCode parentName=\"p\">{`dataType=\"category\"`}</inlineCode>{`.\nSince the action is `}<strong parentName=\"p\">{`to create`}</strong>{` a category, the Functional Testing Framework will also search for operation with `}<inlineCode parentName=\"p\">{`type=\"create\"`}</inlineCode>{` in `}<em parentName=\"p\">{`Metadata`}</em>{` for `}<inlineCode parentName=\"p\">{`dataType=\"category\"`}</inlineCode>{`.`}</p>\n    <p><em parentName=\"p\">{`Catalog/Metadata/CategoryMeta.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<operation name=\"CreateCategory\" dataType=\"category\" type=\"create\" auth=\"adminOauth\" url=\"/V1/categories\" method=\"POST\">\n    <contentType>application/json</contentType>\n    <object key=\"category\" dataType=\"category\">\n        <field key=\"parent_id\">integer</field>\n        <field key=\"name\">string</field>\n        <field key=\"is_active\">boolean</field>\n        <field key=\"position\">integer</field>\n        <field key=\"level\">integer</field>\n        <field key=\"children\">string</field>\n        <field key=\"created_at\">string</field>\n        <field key=\"updated_at\">string</field>\n        <field key=\"path\">string</field>\n        <field key=\"include_in_menu\">boolean</field>\n        <array key=\"available_sort_by\">\n            <value>string</value>\n        </array>\n        <field key=\"extension_attributes\">empty_extension_attribute</field>\n        <array key=\"custom_attributes\">\n            <value>custom_attribute</value>\n        </array>\n    </object>\n</operation>\n`}</code></pre>\n    <p>{`(The corresponding operation is provided by `}<em parentName=\"p\">{`catalogCategoryRepositoryV1`}</em>{` in `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/get-started/bk-get-started-api.html\"\n      }}>{`REST API`}</a>{`.)`}</p>\n    <p>{`The following is encoded in `}<inlineCode parentName=\"p\">{`<operation>`}</inlineCode>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name=\"CreateCategory\"`}</inlineCode>{` defines a descriptive name of the operation, which is used for merging if needed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dataType=\"category\"`}</inlineCode>{` defines a relation with data entities with input data for a Category (`}<inlineCode parentName=\"li\">{`<entity type=\"category\">`}</inlineCode>{`).`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`auth=\"adminOauth\"`}</inlineCode>{` defines OAuth authorization, which is required for the Admin area.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`url=\"/V1/categories\"`}</inlineCode>{` defines a routing URL to the corresponding service class.\n(The request will be sent to `}<inlineCode parentName=\"li\">{`https://example.com/rest/V1/categories`}</inlineCode>{` if `}<inlineCode parentName=\"li\">{`MAGENTO_BASE_URL=https://example.com/`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`MAGENTO_BACKEND_NAME=admin`}</inlineCode>{` are set in the `}<em parentName=\"li\">{`acceptance/.env`}</em>{` configuration file.)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`method=\"POST\"`}</inlineCode>{` defines a POST method of the HTTP request.`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`<contentType>application/json</contentType>`}</inlineCode>{` defines a content type of the REST API request, which is set as `}<inlineCode parentName=\"p\">{`application/json`}</inlineCode>{` here.`}</p>\n    <p>{`The parameter that declares a body of the request is `}<em parentName=\"p\">{`catalogCategoryRepositoryV1SavePostBody`}</em>{`.\nUsing the `}<a parentName=\"p\" {...{\n        \"href\": \"#reference\"\n      }}>{`Reference`}</a>{`, we can trace how the JSON request was converted into XML representation.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Comments in the example below are used to demonstrate relation between JSON request and Functional Testing Framework metadata in XML.\nJSON does not support comments.`}</p>\n    <p>{`Model schema for `}<em parentName=\"p\">{`catalogCategoryRepositoryV1SavePostBody`}</em>{` with XML representation of `}<em parentName=\"p\">{`Catalog/Metadata/CategoryMeta.xml`}</em>{` in comments:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{                                           // XML representation in the Functional Testing Framework metadata format (see 'Catalog/Metadata/CategoryMeta.xml')\n  \"category\": {                             // <object key=\"category\" dataType=\"category\">\n    \"id\": 0,                                // Skipped, because Category ID is not available on UI when you create a new category.\n    \"parent_id\": 0,                         // <field key=\"parent_id\">integer</field>\n    \"name\": \"string\",                       // <field key=\"name\">string</field>\n    \"is_active\": true,                      // <field key=\"is_active\">boolean</field>\n    \"position\": 0,                          // <field key=\"position\">integer</field>\n    \"level\": 0,                             // <field key=\"level\">integer</field>\n    \"children\": \"string\",                   // <field key=\"children\">string</field>\n    \"created_at\": \"string\",                 // <field key=\"created_at\">string</field>\n    \"updated_at\": \"string\",                 // <field key=\"updated_at\">string</field>\n    \"path\": \"string\",                       // <field key=\"path\">string</field>\n    \"available_sort_by\": [                  // <array key=\"available_sort_by\">\n      \"string\"                              // <value>string</value>\n    ],                                      // </array>\n    \"include_in_menu\": true,                // <field key=\"include_in_menu\">boolean</field>\n    \"extension_attributes\": {},             // <field key=\"extension_attributes\">empty_extension_attribute</field>, where 'empty_extension_attribute' is a reference to operation with 'dataType=\"empty_extension_attribute\"' (see 'Catalog/Metadata/EmptyExtensionAttributeMeta.xml')\n    \"custom_attributes\": [                  // <array key=\"custom_attributes\">\n      {                                     // <value>custom_attribute</value>, where 'custom_attribute' is a reference to operation with 'dataType=\"custom_attribute\"' (see 'Catalog/Metadata/CustomAttributeMeta.xml')\n        \"attribute_code\": \"string\",\n        \"value\": \"string\"\n      }\n    ]                                       // </array>\n  }                                         // </object>\n}\n`}</code></pre>\n    <p>{`So, the body of a REST API request that creates a simple category is the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{                                             // XML representation of input data used to create a simple category (\"Catalog/Data/CategoryData.xml\")\n  \"category\": {                               // <entity name=\"_defaultCategory\" type=\"category\">\n    \"name\": \"simpleCategory_0986576456\",      // <data key=\"name\" unique=\"suffix\">simpleCategory</data>\n    \"is_active\": true                         // <data key=\"is_active\">true</data>\n  }                                           // </entity>\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"guest-cart-example\"\n    }}>{`Guest Cart Example`}</h4>\n    <p>{`This is an example of how to handle a guest cart using REST API operations.`}</p>\n    <h5 {...{\n      \"id\": \"create-an-object-as-a-guest\"\n    }}>{`Create an object as a guest`}</h5>\n    <p>{`The corresponding test step is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<createData entity=\"guestCart\" stepKey=\"createGuestCart\"/>\n`}</code></pre>\n    <p>{`The Functional Testing Framework searches in the `}<em parentName=\"p\">{`Data`}</em>{` directory an entity with `}<inlineCode parentName=\"p\">{`<entity name=\"GuestCart\">`}</inlineCode>{` and reads `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`.`}</p>\n    <p><em parentName=\"p\">{`Quote/Data/GuestCartData.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"GuestCart\" type=\"GuestCart\">\n</entity>\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`type=\"guestCart\"`}</inlineCode>{` points to the operation with `}<inlineCode parentName=\"p\">{`dataType=GuestCart\"`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`type=\"create\"`}</inlineCode>{` in the `}<em parentName=\"p\">{`Metadata`}</em>{` directory.`}</p>\n    <p><em parentName=\"p\">{`Quote/Metadata/GuestCartMeta.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<operation name=\"CreateGuestCart\" dataType=\"GuestCart\" type=\"create\" auth=\"anonymous\" url=\"/V1/guest-carts\" method=\"POST\">\n    <contentType>application/json</contentType>\n</operation>\n`}</code></pre>\n    <p>{`As a result, the Functional Testing Framework sends an unauthorized POST request with an empty body to the `}<inlineCode parentName=\"p\">{`https://example.com/rest/V1/guest-carts`}</inlineCode>{` and stores the single string response that the endpoint returns.`}</p>\n    <h4 {...{\n      \"id\": \"company-relation-example\"\n    }}>{`Company Relation Example`}</h4>\n    <p>{`This example creates XML data files in the `}<em parentName=\"p\">{`Data`}</em>{` and `}<em parentName=\"p\">{`Metadata`}</em>{` directories that allow the Functional Testing Framework to process the REST API operations for creating and deleting a company relation. This functionality is available only to Adobe Commerce B2B customers.`}</p>\n    <p>{`REST API endpoints:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`POST: `}<inlineCode parentName=\"li\">{`/V1/company/:parentId/relations`}</inlineCode></li>\n      <li parentName=\"ul\">{`DELETE: `}<inlineCode parentName=\"li\">{`/V1/company/:parentId/relations/:companyId`}</inlineCode></li>\n    </ul>\n    <h5 {...{\n      \"id\": \"create-a-company-relation\"\n    }}>{`Create a company relation`}</h5>\n    <p>{`The corresponding test step is:`}</p>\n    <p>{`First create two different companies of different types before creating the company relation.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<createData entity=\"Simple_US_Customer\" stepKey=\"companyAdmin1\"/>\n<createData entity=\"ParentCompany\" stepKey=\"parentCompany\">\n    <requiredEntity createDataKey=\"companyAdmin1\"/>\n</createData>\n\n<createData entity=\"Simple_US_CA_Customer\" stepKey=\"companyAdmin2\"/>\n<createData entity=\"ChildCompany\" stepKey=\"childCompany\">\n    <requiredEntity createDataKey=\"companyAdmin2\"/>\n</createData>\n\n<createData entity=\"OneCompanyRelation\" stepKey=\"createCompanyRelation\">\n    <requiredEntity createDataKey=\"parentCompany\"/>\n    <requiredEntity createDataKey=\"childCompany\"/>\n</createData>\n`}</code></pre>\n    <p>{`The Functional Testing Framework searches in the `}<em parentName=\"p\">{`Data`}</em>{` directory for the entities with `}<inlineCode parentName=\"p\">{`<entity name=\"ParentCompany\">`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<entity name=\"ChildCompany\">`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`<entity name=\"OneCompanyRelation\">`}</inlineCode>{` and reads the `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`.`}</p>\n    <p><em parentName=\"p\">{`CompanyRelation/Data/CompanyData.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<!-- Data Type \"company\" -->\n<entity name=\"ParentCompany\" type=\"company\" extends=\"Default_Company\">\n    <data key=\"company_name\" unique=\"suffix\">Parent Company </data>\n</entity>\n<!-- Data Type \"company2\" -->\n<entity name=\"ChildCompany\" type=\"company2\">\n    <data key=\"status\">1</data>\n    <data key=\"company_name\" unique=\"suffix\">Child Company </data>\n    <array key=\"street\">\n        <item>7700 W Parmer Ln</item>\n        <item>Bld D</item>\n    </array>\n    <data key=\"city\">Culver City</data>\n    <data key=\"country_id\">US</data>\n    <data key=\"region_id\">57</data>\n    <data key=\"postcode\">90230</data>\n    <data key=\"telephone\">555-555-5555</data>\n    <data key=\"customer_group_id\">1</data>\n    <data key=\"sales_representative_id\">1</data>\n    <var key=\"super_user_id\" entityType=\"customer\" entityKey=\"id\"/>\n    <var key=\"company_email\" entityType=\"customer\" entityKey=\"email\"/>\n</entity>\n`}</code></pre>\n    <p>{`Notice that the two company entities have two different types `}<inlineCode parentName=\"p\">{`type=\"company\"`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`type=\"company2\"`}</inlineCode>{`.  These types are used later in `}<em parentName=\"p\">{`Data`}</em>{` fields and `}<em parentName=\"p\">{`Metadata`}</em>{` URLs for company relations.`}</p>\n    <p><em parentName=\"p\">{`CompanyRelation/Data/CompanyRelationData.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"OneCompanyRelation\" type=\"company_relation\">\n    <requiredEntity type=\"company_id\">CompanyId</requiredEntity>\n</entity>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type=\"company_relation\"`}</inlineCode>{` points to the operation with `}<inlineCode parentName=\"li\">{`dataType=company_relation\"`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`type=\"create\"`}</inlineCode>{` in the `}<em parentName=\"li\">{`Metadata`}</em>{` directory.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<requiredEntity type=\"company_id\">CompanyId</requiredEntity>`}</inlineCode>{` points to the data entity with `}<inlineCode parentName=\"li\">{`name=\"CompanyId\"`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`type=\"company_id\"`}</inlineCode>{`.`}</li>\n    </ul>\n    <p><em parentName=\"p\">{`CompanyRelations/Data/CompanyIdData.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"CompanyId\" type=\"company_id\">\n    <var key=\"company_id\" entityType=\"company2\" entityKey=\"id\"/>\n</entity>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type=\"company_id\"`}</inlineCode>{` points to the operation with `}<inlineCode parentName=\"li\">{`dataType=company_id\"`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`type=\"create\"`}</inlineCode>{` in the `}<em parentName=\"li\">{`Metadata`}</em>{` directory.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`company_id`}</inlineCode>{` retrieves only  the `}<inlineCode parentName=\"li\">{`id`}</inlineCode>{` from the company with `}<inlineCode parentName=\"li\">{`type=\"company2\"`}</inlineCode></li>\n    </ul>\n    <p><em parentName=\"p\">{`CompanyRelation/Metadata/CompanyIdMeta.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<operation name=\"CreateCompanyId\" dataType=\"company_id\" type=\"create\">\n    <field key=\"company_id\">integer</field>\n</operation>\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`<field key=\"company_id\">integer</field>`}</inlineCode>{` creates an object with a key `}<inlineCode parentName=\"p\">{`company_id`}</inlineCode>{` with a value of type integer.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"company_id\": 1\n}\n`}</code></pre>\n    <p><em parentName=\"p\">{`CompanyRelation/Metadata/CompanyRelationMeta.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<operation name=\"CreateCompanyRelation\" dataType=\"company_relation\" type=\"create\" auth=\"adminOauth\" url=\"/V1/company/{company.id}/relations\" method=\"POST\">\n    <contentType>application/json</contentType>\n    <array key=\"relations\">\n        <value>company_id</value>\n    </array>\n</operation>\n`}</code></pre>\n    <p>{`As a result, the Functional Testing Framework sends a POST request with an array of `}<inlineCode parentName=\"p\">{`company_ids`}</inlineCode>{` in the body to `}<inlineCode parentName=\"p\">{`https://example.com/rest/V1/company/{company.id}/relations`}</inlineCode>{`. Currently, the Functional Testing Framework supports sending only one company as a child company for a parent.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`{company.id}`}</inlineCode>{` in the URL comes from the test `}<inlineCode parentName=\"li\">{`<requiredEntity createDataKey=\"parentCompany\"/>`}</inlineCode>{` in OneCompanyRelation that has `}<inlineCode parentName=\"li\">{`type=\"company\"`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<array key=\"relations\">`}</inlineCode>{` creates an array with the key relations`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<value>company_id</value>`}</inlineCode>{` retrieves the data from the operation with `}<inlineCode parentName=\"li\">{`dataType=\"company_id\"`}</inlineCode></li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"relations\": [\n    {\n      \"company_id\":  1\n    }\n  ]\n}\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"delete-a-company-relation\"\n    }}>{`Delete a company relation`}</h5>\n    <p>{`The corresponding test step is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<deleteData createDataKey=\"createCompanyRelation\" stepKey=\"deleteCompanyRelation\"/>\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`createDataKey=\"createCompanyRelation\"`}</inlineCode>{` is the same as the `}<inlineCode parentName=\"p\">{`createData`}</inlineCode>{` entity with `}<inlineCode parentName=\"p\">{`stepKey=\"createCompanyRelation\"`}</inlineCode>{` in the test. This step calls the delete operation that has the same `}<inlineCode parentName=\"p\">{`dataType=\"company_relation\"`}</inlineCode>{` value as the `}<inlineCode parentName=\"p\">{`createData`}</inlineCode>{` entity.`}</p>\n    <p><em parentName=\"p\">{`CompanyRelation/Metadata/CompanyRelationMeta.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<operation name=\"DeleteCompanyRelation\" dataType=\"company_relation\" type=\"delete\" auth=\"adminOauth\" url=\"/V1/company/{company.id}/relations/{company2.id}\" method=\"DELETE\">\n    <contentType>application/json</contentType>\n</operation>\n`}</code></pre>\n    <p>{`As a result, the Functional Testing Framework sends a DELETE request to `}<inlineCode parentName=\"p\">{`https://example.com/rest/V1/company/{company.id}/relations/{company2.id}`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`{company.id}`}</inlineCode>{` in the URL comes from the test `}<inlineCode parentName=\"li\">{`<requiredEntity createDataKey=\"parentCompany\"/>`}</inlineCode>{` in the `}<inlineCode parentName=\"li\">{`OneCompanyRelation`}</inlineCode>{` entity that has `}<inlineCode parentName=\"li\">{`type=\"company\"`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`{company2.id}`}</inlineCode>{` in the URL comes from the test `}<inlineCode parentName=\"li\">{`<requiredEntity createDataKey=\"childCompany\"/>`}</inlineCode>{` in the `}<inlineCode parentName=\"li\">{`OneCompanyRelation`}</inlineCode>{` entity that has `}<inlineCode parentName=\"li\">{`type=\"company2\"`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"handling-a-rest-api-response\"\n    }}>{`Handling a REST API response`}</h3>\n    <p>{`There are cases when you need to reuse the data that Adobe Commerce or Magento Open source returned in response to your POST request.`}</p>\n    <p>{`Let's see how to handle data after you created a category with custom attributes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<createData entity=\"customizedCategory\" stepKey=\"createPreReqCategory\"/>\n`}</code></pre>\n    <p>{`The Functional Testing Framework receives the corresponding JSON response and enables you to reference its data using a variable of format:`}</p>\n    <p><strong parentName=\"p\">{`$`}</strong>{` `}<em parentName=\"p\">{`stepKey`}</em>{` `}<strong parentName=\"p\">{`.`}</strong>{` `}<em parentName=\"p\">{`JsonKey`}</em>{` `}<strong parentName=\"p\">{`$`}</strong></p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`$createPreReqCategory.id$\n`}</code></pre>\n    <p>{`And for a custom attribute:`}</p>\n    <p><strong parentName=\"p\">{`$`}</strong>{` `}<em parentName=\"p\">{`stepKey`}</em>{`  `}<strong parentName=\"p\">{`.custom`}<em parentName=\"strong\">{`attributes[ _attribute key`}</em>{` ]`}</strong>{` `}<strong parentName=\"p\">{`$`}</strong></p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`$createPreReqCategory.custom_attributes[is_anchor]$\n`}</code></pre>\n    <p>{`The following example of response in JSON demonstrates how to reference data on the root level and as data in custom attributes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"id\": 7,                                          //$createPreReqCategory.id$\n    \"parent_id\": 2,                                   //$createPreReqCategory.parent_id$\n    \"name\": \"simpleCategory_0986576456\",              //$createPreReqCategory.is_active$\n    \"is_active\": true,\n    \"position\": 5,\n    \"level\": 2,\n    \"children\": \"\",\n    \"created_at\": \"2018-05-08 14:27:18\",\n    \"updated_at\": \"2018-05-08 14:27:18\",\n    \"path\": \"1/2/7\",\n    \"available_sort_by\": [],\n    \"include_in_menu\": true,\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"is_anchor\",\n            \"value\": \"1\"                              //$createPreReqCategory.custom_attributes[is_anchor]$\n        },\n        {\n            \"attribute_code\": \"path\",\n            \"value\": \"1/2/7\"                          //$createPreReqCategory.custom_attributes[path]$\n        },\n        {\n            \"attribute_code\": \"children_count\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"url_key\",\n            \"value\": \"simplecategory5af1b41cd58fb4\"   //$createPreReqCategory.custom_attributes[url_key]$\n        },\n        {\n            \"attribute_code\": \"url_path\",\n            \"value\": \"simplecategory5af1b41cd58fb4\"\n        }\n    ],\n}\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"handling-entities-using-html-forms\"\n    }}>{`Handling entities using HTML forms`}</h2>\n    <p>{`For cases when REST API is not applicable, you may use `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/html401/interact/forms.html\"\n      }}>{`HTML forms`}</a>{` (when all object parameters are encoded in a URL as `}<inlineCode parentName=\"p\">{`key=name`}</inlineCode>{` attributes).\nThere are two different attributes to split access to different areas:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`auth=\"adminFormKey\"`}</inlineCode>{` is used for objects in an Admin area.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`auth=\"customerFormKey\"`}</inlineCode>{` is used for objects in a storefront.`}</li>\n    </ul>\n    <p>{`You are able to create assurances with `}<inlineCode parentName=\"p\">{`successRegex`}</inlineCode>{`, and, optionally, return values with `}<inlineCode parentName=\"p\">{`returnRegex`}</inlineCode>{`. You can also use `}<inlineCode parentName=\"p\">{`returnIndex`}</inlineCode>{` when `}<inlineCode parentName=\"p\">{`returnRegex`}</inlineCode>{` matches multiple values.`}</p>\n    <h3 {...{\n      \"id\": \"create-an-object-in-admin\"\n    }}>{`Create an object in Admin`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`CreateStoreGroup`}</inlineCode>{` operation is used to persist a store group:`}</p>\n    <p>{`Source file is `}<em parentName=\"p\">{`Store/Metadata/StoreGroupMeta.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<operation name=\"CreateStoreGroup\" dataType=\"group\" type=\"create\" auth=\"adminFormKey\" url=\"/admin/system_store/save\" method=\"POST\" successRegex=\"/messages-message-success/\" >\n    <contentType>application/x-www-form-urlencoded</contentType>\n    <object dataType=\"group\" key=\"group\">\n        <field key=\"group_id\">string</field>\n        <field key=\"name\">string</field>\n        <field key=\"code\">string</field>\n        <field key=\"root_category_id\">integer</field>\n        <field key=\"website_id\">integer</field>\n    </object>\n    <field key=\"store_action\">string</field>\n    <field key=\"store_type\">string</field>\n</operation>\n`}</code></pre>\n    <p>{`The operation is called when `}<inlineCode parentName=\"p\">{`<createData>`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`type=\"create\"`}</inlineCode>{`) points to a data entity of type `}<inlineCode parentName=\"p\">{`\"group\"`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`dataType=\"group\"`}</inlineCode>{`).\nIt sends a POST request (`}<inlineCode parentName=\"p\">{`method=\"POST\"`}</inlineCode>{`) to `}<inlineCode parentName=\"p\">{`http://example.com/admin/system_store/save`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`url=\"/admin/system_store/save\"`}</inlineCode>{`) that is authorized for the Admin area (`}<inlineCode parentName=\"p\">{`auth=\"adminFormKey\"`}</inlineCode>{`).\nThe request contains HTML form data encoded in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\"\n      }}>{`application/x-www-form-urlencoded`}</a>{` content type (`}<inlineCode parentName=\"p\">{`<contentType>application/x-www-form-urlencoded</contentType>`}</inlineCode>{`).\nIf the returned HTML code contains the `}<inlineCode parentName=\"p\">{`messages-message-success`}</inlineCode>{` string, it is resolved as successful.`}</p>\n    <p>{`The operation enables you to assign the following form fields:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`group/group_id`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`group/name`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`group/code`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`group/root_category_id`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`group/website_id`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`store_action`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`store_type`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"create-an-object-in-storefront\"\n    }}>{`Create an object in storefront`}</h3>\n    <p>{`The Functional Testing Framework uses the `}<inlineCode parentName=\"p\">{`CreateWishlist`}</inlineCode>{` operation to create a wish list on storefront:`}</p>\n    <p>{`Source file is `}<em parentName=\"p\">{`Wishlist/Metadata/WishlistMeta.xml`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<operation name=\"CreateWishlist\" dataType=\"wishlist\" type=\"create\" auth=\"customerFormKey\" url=\"/wishlist/index/add/\" method=\"POST\" successRegex=\"\" returnRegex=\"~\\\\/wishlist_id\\\\/(\\\\d*?)\\\\/~\" >\n    <contentType>application/x-www-form-urlencoded</contentType>\n    <field key=\"product\">integer</field>\n    <field key=\"customer_email\">string</field>\n    <field key=\"customer_password\">string</field>\n</operation>\n`}</code></pre>\n    <p>{`The operation is used when `}<inlineCode parentName=\"p\">{`<createData>`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`type=\"create\"`}</inlineCode>{`) points to a data entity of type `}<inlineCode parentName=\"p\">{`\"wishlist\"`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`dataType=\"wishlist\"`}</inlineCode>{`).\nIt sends a POST request (`}<inlineCode parentName=\"p\">{`method=\"POST\"`}</inlineCode>{`) to `}<inlineCode parentName=\"p\">{`http://example.com/wishlist/index/add/`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`url=\"wishlist/index/add/\"`}</inlineCode>{`) as a customer (`}<inlineCode parentName=\"p\">{`auth=\"customerFormKey\"`}</inlineCode>{`).\nThe request contains HTML form data encoded in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\"\n      }}>{`application/x-www-form-urlencoded`}</a>{` content type (`}<inlineCode parentName=\"p\">{`<contentType>application/x-www-form-urlencoded</contentType>`}</inlineCode>{`).\nIf the returned HTML code contains a string that matches the regular expression `}<inlineCode parentName=\"p\">{`~\\\\/wishlist_id\\\\/(\\\\d*?)\\\\/~`}</inlineCode>{`, it returns the matching value.`}</p>\n    <p>{`The operation assigns three form fields:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`product`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`customer_email`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`customer_password`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"reference\"\n    }}>{`Reference`}</h2>\n    <h3 {...{\n      \"id\": \"operations\"\n    }}>{`operations`}</h3>\n    <p>{`Root element that points to the corresponding XML Schema.`}</p>\n    <h3 {...{\n      \"id\": \"operation\"\n    }}>{`operation`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the operation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`dataType`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Data type of the operation. It refers to a `}<inlineCode parentName=\"td\">{`type`}</inlineCode>{` attribute of data entity that will be used as a source of input data.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Possible values: `}<inlineCode parentName=\"td\">{`create`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`delete`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`update`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`get`}</inlineCode>{`.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type of operation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`*`}<inlineCode parentName=\"td\">{`url`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A routing URL of the operation. Example value: `}<inlineCode parentName=\"td\">{`\"/V1/categories\"`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`*`}{`*`}<inlineCode parentName=\"td\">{`auth`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Possible values: `}<inlineCode parentName=\"td\">{`adminOath`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`adminFormKey`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`customerFormKey`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`anonymous`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type of authorization of the operation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`method`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`HTTP method of the operation. Possible values: `}<inlineCode parentName=\"td\">{`POST`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`DELETE`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`PUT`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`GET`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`successRegex`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Determines if the operation was successful. Parses the HTML body in response and asserts if the value assigned to the `}<inlineCode parentName=\"td\">{`successRegex`}</inlineCode>{` exists.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`returnRegex`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Determines if the response contains the matching value to return.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`returnIndex`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Specifies index at which the value will be returned when `}<inlineCode parentName=\"td\">{`returnRegex`}</inlineCode>{` matches multiple values`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`removeBackend`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Removes backend name from requested URL. Applicable when `}<inlineCode parentName=\"td\">{`auth=\"adminFormKey\"`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`filename`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`deprecated`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Used to warn about the future deprecation of the test. String will appear in Allure reports and console output at runtime.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`*`}<inlineCode parentName=\"p\">{`url`}</inlineCode>{` - full URL is a concatenation of `}<em parentName=\"p\">{`ENV.baseUrl`}</em>{` + `}<inlineCode parentName=\"p\">{`/rest/`}</inlineCode>{` + `}<em parentName=\"p\">{`URL`}</em>{`.\nTo reuse data of a required entity or returned response use a field key wrapped in curly braces such as `}<inlineCode parentName=\"p\">{`{sku}`}</inlineCode>{`.\nWhen the data to reuse is of a different type, declare also the type of data such as `}<inlineCode parentName=\"p\">{`{product.sku}`}</inlineCode>{`.\nExample: `}<inlineCode parentName=\"p\">{`\"/V1/products/{product.sku}/media/{id}\"`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`*`}{`*`}<inlineCode parentName=\"p\">{`auth`}</inlineCode>{` - available values:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`adminOath`}</inlineCode>{` is used for REST API persistence in the Admin area with `}<a parentName=\"li\" {...{\n              \"href\": \"https://devdocs.magento.com/guides/v2.4/get-started/authentication/gs-authentication-oauth.html\"\n            }}>{`OAuth-based authentication`}</a>{`.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`adminFormKey`}</inlineCode>{` is used for HTML form persistence in the Admin area.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`customerFormKey`}</inlineCode>{` is used for HTML form persistence in the Customer area.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`anonymous`}</inlineCode>{` is used for REST API persistence without authorization.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"contenttype\"\n    }}>{`contentType`}</h3>\n    <p>{`Sets one of the following operation types:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`application/json`}</inlineCode>{` is used for REST API operations.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`application/x-www-form-urlencoded`}</inlineCode>{` is used for HTML form operations.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"object\"\n    }}>{`object`}</h3>\n    <p>{`Representation of a complex entity that may contain fields, arrays, and objects.\nAn object must match the `}<a parentName=\"p\" {...{\n        \"href\": \"data.md#entity\"\n      }}>{`entity`}</a>{` of the same `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the object.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`dataType`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type of the related `}<a parentName=\"td\" {...{\n              \"href\": \"data.md#entity\"\n            }}>{`entity`}</a>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`required`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Determines if the object is required or not. It must match the REST API specification.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"field\"\n    }}>{`field`}</h3>\n    <p>{`Representation of HTML form or REST API fields.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the field. It must match the field name of the related `}<a parentName=\"td\" {...{\n              \"href\": \"data.md#entity\"\n            }}>{`entity`}</a>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type of the value. It may contain a primitive type or the type of another operation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`required`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Determines if the field is required or not. It must match the REST API specification.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"array\"\n    }}>{`array`}</h3>\n    <p>{`Representation of an array.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the array.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`It contains one or more `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` elements.`}</p>\n    <h3 {...{\n      \"id\": \"value\"\n    }}>{`value`}</h3>\n    <p>{`Declares a data type for items within `}<inlineCode parentName=\"p\">{`<array>`}</inlineCode>{`.`}</p>\n    <h4 {...{\n      \"id\": \"example-of-an-array-with-value-of-a-primitive-data-type\"\n    }}>{`Example of an array with value of a primitive data type`}</h4>\n    <p>{`Metadata declaration of the operation schema:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<array key=\"tax_rate_ids\">\n    <value>integer</value>\n</array>\n`}</code></pre>\n    <p>{`The value can contain one or more items.`}</p>\n    <p>{`Data entity with the corresponding assignment:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<array key=\"tax_rate_ids\">\n    <item>1</item>\n    <item>2</item>\n</array>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Resulted JSON request:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"tax_rate_ids\":\n    [\n        \"item\": 1,\n        \"item\": 2\n    ]\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"example-of-an-array-containing-data-entities\"\n    }}>{`Example of an array containing data entities`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<array key=\"product_options\">\n    <value>product_option</value>\n</array>\n`}</code></pre>\n    <p>{`The value declares the `}<inlineCode parentName=\"p\">{`product_options`}</inlineCode>{` array that contains one or more entities of the `}<inlineCode parentName=\"p\">{`product_option`}</inlineCode>{` data type.`}</p>\n    <h4 {...{\n      \"id\": \"example-of-an-array-containing-a-particular-data-field\"\n    }}>{`Example of an array containing a particular data field`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<array key=\"tax_rate_ids\">\n    <value>tax_rate.id</value>\n</array>\n`}</code></pre>\n    <p>{`The value declares the `}<inlineCode parentName=\"p\">{`tax_rate_ids`}</inlineCode>{` array that contains one or more `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` fields of the `}<inlineCode parentName=\"p\">{`tax_rate`}</inlineCode>{` data type entity.`}</p>\n    <h3 {...{\n      \"id\": \"header\"\n    }}>{`header`}</h3>\n    <p>{`An additional parameter in REST API request.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`param`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A REST API header parameter.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<header param=\"status\">available</header>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"param\"\n    }}>{`param`}</h3>\n    <p>{`An additional parameter in URL.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the URL parameter.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<param key=\"status\">someValue</param>\n`}</code></pre>\n    {\n      /* LINK DEFINITIONS */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}