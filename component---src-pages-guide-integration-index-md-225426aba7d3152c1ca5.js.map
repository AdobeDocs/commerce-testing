{"version":3,"file":"component---src-pages-guide-integration-index-md-225426aba7d3152c1ca5.js","mappings":"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","sources":["webpack://commerce-testing/./src/pages/guide/integration/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"integration-testing\"\n    }}>{`Integration testing`}</h1>\n    <p>{`Integration tests require the Commerce runtime environment, so they need a little preparation before they can be executed.`}</p>\n    <p>{`After preparing the system, you can execute tests using the command line interface or within an IDE like PhpStorm.`}</p>\n    <h2 {...{\n      \"id\": \"set-up-the-integration-test-framework\"\n    }}>{`Set up the integration test framework`}</h2>\n    <p>{`To run integration tests, you must create and configure a test database.\nYou may also want to adjust the PHPUnit configuration, depending on your requirements.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"#prepare-integration-test-execution\"\n      }}>{`Preparing Integration Test Execution`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"command-line-interface-cli\"\n    }}>{`Command Line Interface (CLI)`}</h2>\n    <p>{`This option can be used for running tests locally during development or on remote servers during continuous integration.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"#run-integration-tests-in-the-cli\"\n      }}>{`Running Integration Tests in the CLI`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"phpstorm-ide\"\n    }}>{`PhpStorm IDE`}</h2>\n    <p>{`Running integration tests inside an IDE, like PhpStorm, is convenient during development. This is mostly used when writing a new integration test.`}</p>\n    <p>{`Other than convenience, there is no benefit over running the tests on the console.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"../unit/phpstorm.md\"\n      }}>{`Running Integration Tests in PhpStorm`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"prepare-integration-test-execution\"\n    }}>{`Prepare integration test execution`}</h2>\n    <p>{`Before you can use the integration test framework, you must prepare the test environment.\nPrerequisites for the test environment include the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A dedicated integration test database`}</li>\n      <li parentName=\"ul\">{`The test framework database configuration`}</li>\n      <li parentName=\"ul\">{`The PHPUnit configuration matches the purpose of the integration test execution`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"integration-test-database\"\n    }}>{`Integration test database`}</h2>\n    <p>{`By default, for every integration test run, the test framework installs a fresh test database.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Do not use the same database as the real Commerce instance. Any data, such as products, customers, orders, and everything else, will be lost!`}</p>\n    <p>{`For safety reasons, it is recommended to use a dedicated database user for running the tests. That database user should not have access to any other databases.\nHere are examples of SQL commands that create a test database and a dedicated test user account:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sql\"\n      }}>{`CREATE DATABASE magento_integration_tests;\nGRANT ALL ON magento_integration_tests.* TO 'magento2_test_user'@'localhost' IDENTIFIED BY 'ftYx4pm6^x9.&^hB';\n`}</code></pre>\n    <p>{`Replace the example database, username, and password with something that matches your requirements and conventions.`}</p>\n    <h3 {...{\n      \"id\": \"configure-the-framework-for-test-environment\"\n    }}>{`Configure the framework for test environment`}</h3>\n    <p>{`The integration test framework comes with a configuration file template\n`}<inlineCode parentName=\"p\">{`dev/tests/integration/etc/install-config-mysql.php.dist`}</inlineCode>{`.`}</p>\n    <p>{`Copy this file to\n`}<inlineCode parentName=\"p\">{`dev/tests/integration/etc/install-config-mysql.php`}</inlineCode>{`\n(without the `}<inlineCode parentName=\"p\">{`.dist`}</inlineCode>{` suffix) and add your test database access credentials.`}</p>\n    <p>{`The contents will look similar to the following. Each array key will be passed as an option argument when the test\nframework executes the `}<inlineCode parentName=\"p\">{`setup:install`}</inlineCode>{` command. Use the database access credentials for your test database instead of the\nexample values below.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\nreturn [\n    'db-host' => 'localhost',\n    'db-user' => 'magento2_test_user',\n    'db-password' => 'ftYx4pm6^x9.&^hB',\n    'db-name' => 'magento_integration_tests',\n    'db-prefix' => '',\n    'backend-frontname' => 'backend',\n    'admin-user' => \\\\Magento\\\\TestFramework\\\\Bootstrap::ADMIN_NAME,\n    'admin-password' => \\\\Magento\\\\TestFramework\\\\Bootstrap::ADMIN_PASSWORD,\n    'admin-email' => \\\\Magento\\\\TestFramework\\\\Bootstrap::ADMIN_EMAIL,\n    'admin-firstname' => \\\\Magento\\\\TestFramework\\\\Bootstrap::ADMIN_FIRSTNAME,\n    'admin-lastname' => \\\\Magento\\\\TestFramework\\\\Bootstrap::ADMIN_LASTNAME,\n    'amqp-host' => 'localhost',\n    'amqp-port' => '5672',\n    'amqp-user' => 'guest',\n    'amqp-password' => 'guest',\n];\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Leave all the settings that do not start with `}<inlineCode parentName=\"p\">{`db-`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`amqp-`}</inlineCode>{` at their default values.`}</p>\n    <p>{`You can include additional setup options—available to the `}<inlineCode parentName=\"p\">{`setup:install`}</inlineCode>{` command—in the test configuration file. A\ncomplete list of options is available `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/install-gde/install/cli/install-cli.html\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`If your project requires custom entries in the `}<inlineCode parentName=\"p\">{`core_config_data`}</inlineCode>{` table, such as the introduction of new 3rd party services\nthat affect your application on a basic level or configuration for logic that would prevent access if not configured\nproperly, Commerce provides a file template for this purpose.`}</p>\n    <p>{`Copy `}<inlineCode parentName=\"p\">{`dev/tests/integration/etc/config-global.php.dist`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`dev/tests/integration/etc/config-global.php`}</inlineCode>{` (without the\n`}<inlineCode parentName=\"p\">{`.dist`}</inlineCode>{` suffix) and add your path-value pairs there. Do not remove existing entries from the file as they are required\nfor the Integration Test Framework to run tests properly.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`return [\n    'customer/password/limit_password_reset_requests_method' => 0,\n    'admin/security/admin_account_sharing' => 1,\n    'admin/security/limit_password_reset_requests_method' => 0,\n    'some/custom/path' => 'some-custom-value'\n];\n`}</code></pre>\n    <p>{`Note that the file above is only for configuration files required by all integration tests. If you need to introduce\nnew configuration values for particular tests to perform their function, use the\n`}<a parentName=\"p\" {...{\n        \"href\": \"annotations/magento-config-fixture.md\"\n      }}>{`@magentoConfigFixture`}</a>{` annotation instead.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`You can change the locations and names of both files used by the Integration Test Framework that were described\nabove using the PHPUnit configuration file.`}</p>\n    <h2 {...{\n      \"id\": \"adjust-the-phpunit-configuration-file\"\n    }}>{`Adjust the PHPUnit configuration file`}</h2>\n    <p>{`See the `}<inlineCode parentName=\"p\">{`dev/tests/integration/phpunit.xml.dist`}</inlineCode>{` file for the default integration test configuration.`}</p>\n    <p>{`Without adjustments, the default configuration runs all core integration tests, which is useful on a continuous integration server.`}</p>\n    <p>{`When making adjustments to the configuration, copy the default file to `}<inlineCode parentName=\"p\">{`dev/tests/integration/phpunit.xml`}</inlineCode>{` (again, without the `}<inlineCode parentName=\"p\">{`.dist`}</inlineCode>{` suffix) and make your changes there. That way, your changes will not be overwritten during upgrades.`}</p>\n    <p>{`There are many settings in the file.\nThis guide will only describe three common adjustments.\nSee `}<a parentName=\"p\" {...{\n        \"href\": \"https://phpunit.readthedocs.io/en/9.1/index.html\"\n      }}>{`PHPUnit documentation`}</a>{` and comments in the default file for more information about the available configuration settings.`}</p>\n    <h3 {...{\n      \"id\": \"tests_cleanup-constant\"\n    }}>{`TESTS_CLEANUP constant`}</h3>\n    <p>{`Default value:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<const name=\"TESTS_CLEANUP\" value=\"enabled\"/>\n`}</code></pre>\n    <p>{`If this constant is set to `}<inlineCode parentName=\"p\">{`enabled`}</inlineCode>{`, the integration test framework cleans the test database and reinstalls Commerce on every test run.\nThis way, any new modules will be automatically picked up and any artifacts left behind by previous test runs will be removed.\nIt also causes the test framework to flush the test configuration, the `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/cache\"\n      }}>{`cache`}</a>{`, and the code generation before executing any tests.`}</p>\n    <p>{`The downside of setting `}<inlineCode parentName=\"p\">{`TEST_CLEANUP`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`enabled`}</inlineCode>{` is that the reinstallation of Commerce takes time; the exact time depends on the host you are using to run the integration tests and the Commerce version.`}</p>\n    <p>{`During the development of new integration tests, where only a subset of the tests is executed repeatedly, that overhead of setting up a fresh execution environment for each run quickly becomes a burden.`}</p>\n    <p>{`In that case, the `}<inlineCode parentName=\"p\">{`TEST_CLEANUP`}</inlineCode>{` constant can be set to `}<inlineCode parentName=\"p\">{`disabled`}</inlineCode>{`.\nThe test execution will start much quicker, but as a consequence the developer must manually flush the cache and the database when needed.`}</p>\n    <p>{`The integration test framework creates the temporary test files beneath the directory\n`}<inlineCode parentName=\"p\">{`dev/tests/integration/tmp/sandbox-*`}</inlineCode>{` (followed by a long hash ID).`}</p>\n    <p>{`To force the test framework to regenerate the cache and the other files, remove the directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`rm -r dev/tests/integration/tmp/sandbox-*\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"rabbitmq_management_port-constant\"\n    }}>{`RABBITMQ_MANAGEMENT_PORT constant`}</h3>\n    <p>{`Default value:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<const name=\"RABBITMQ_MANAGEMENT_PORT\" value=\"15672\"/>\n`}</code></pre>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.rabbitmq.com/management.html\"\n      }}>{`RabbitMQ Management Plugin`}</a>{` APIs are accessible on port `}<inlineCode parentName=\"p\">{`15672`}</inlineCode>{` by default.\nThis constant provides the configuration value when the test environment is not using the default.\nTests depending on `}<inlineCode parentName=\"p\">{`Magento\\\\TestFramework\\\\Helper\\\\Amqp`}</inlineCode>{`, often used for validating queue and exchange status, depend on the management plugin being enabled.\nBeginning in 2.3.1, the helper no longer assumes RabbitMQ is running on `}<inlineCode parentName=\"p\">{`localhost`}</inlineCode>{` and will use the connection configuration defined in `}<inlineCode parentName=\"p\">{`env.php`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"php-memory_limit\"\n    }}>{`PHP memory_limit`}</h3>\n    <p>{`The default `}<inlineCode parentName=\"p\">{`phpunit.xml.dist`}</inlineCode>{` file does not contain any PHP `}<inlineCode parentName=\"p\">{`memory_limit`}</inlineCode>{` settings.\nHowever, sometimes the `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/php\"\n      }}>{`PHP`}</a>{` configuration restricts the amount of memory PHP may consume.\nThis can make it impossible to run the integration tests.`}</p>\n    <p>{`You can turn off the PHP memory limit by adding the following configuration to the `}<inlineCode parentName=\"p\">{`<php>`}</inlineCode>{` section of the integration test `}<inlineCode parentName=\"p\">{`phpunit.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<ini name=\"memory_limit\" value=\"-1\"/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"execute-third-party-integration-tests\"\n    }}>{`Execute third party integration tests`}</h2>\n    <p>{`Code integration tests reside in the `}<inlineCode parentName=\"p\">{`dev/tests/integration/testsuite`}</inlineCode>{` directory.\nFor core tests, it makes sense that the integration tests do not reside within individual modules, because most integration tests execute code from many different modules.`}</p>\n    <p>{`Specific integration tests for shop implementation could also be placed within a different subdirectory of `}<inlineCode parentName=\"p\">{`dev/tests/integration/testsuite`}</inlineCode>{`, and then would be executed together with the core tests.`}</p>\n    <p>{`However, third-party extensions are contained within a single directory and might supply custom integration tests too.\nThese tests usually reside in the `}<inlineCode parentName=\"p\">{`Test/Integration/`}</inlineCode>{` subdirectory within the `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/module\"\n      }}>{`module`}</a>{` folder.`}</p>\n    <p>{`These third-party integration tests are not picked up by the default integration test configuration.\nYou can add a test suite configuration, like the following, to the `}<inlineCode parentName=\"p\">{`<testsuites>`}</inlineCode>{` section of the `}<inlineCode parentName=\"p\">{`phpunit.xml`}</inlineCode>{` file so they are included during test execution.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<testsuite name=\"Third Party Integration Tests\">\n    <directory>../../../app/code/*/*/Test/Integration</directory>\n    <directory>../../../vendor/*/module-*/Test/Integration</directory>\n    <exclude>../../../app/code/Magento</exclude>\n    <exclude>../../../vendor/magento</exclude>\n</testsuite>\n`}</code></pre>\n    <p>{`Such a test suite configuration can then be executed using the `}<inlineCode parentName=\"p\">{`--testsuite <name>`}</inlineCode>{` command option. For example, if you are in the `}<inlineCode parentName=\"p\">{`dev/tests/integration`}</inlineCode>{` directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`php ../../../vendor/bin/phpunit --testsuite \"Third Party Integration Tests\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"run-integration-tests-in-the-cli\"\n    }}>{`Run integration tests in the CLI`}</h2>\n    <p>{`The most common way to execute integration tests is using the command line interface (CLI).`}</p>\n    <p>{`Ensure you have `}<a parentName=\"p\" {...{\n        \"href\": \"#prepare-integration-test-execution\"\n      }}>{`prepared the integration test environment`}</a>{` before starting.`}</p>\n    <p>{`Integration tests must be executed from the `}<inlineCode parentName=\"p\">{`dev/tests/integration`}</inlineCode>{` working directory.\nThe test configuration resides in that directory and will be picked up by `}<inlineCode parentName=\"p\">{`phpunit`}</inlineCode>{` automatically, without the need to specify it as a command line option.`}</p>\n    <h3 {...{\n      \"id\": \"run-all-integration-tests\"\n    }}>{`Run all integration tests`}</h3>\n    <p>{`By default, if no additional arguments are specified, the test configuration executes all integration tests in the `}<inlineCode parentName=\"p\">{`dev/tests/integration/testsuite`}</inlineCode>{` directory.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd dev/tests/integration\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`../../../vendor/bin/phpunit\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Expected log`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`PHPUnit 9.1.0 by Sebastian Bergmann.\n\nConfiguration read from /var/www/magento2/dev/tests/integration/phpunit.xml\n\n..........................\n`}</code></pre>\n    <p>{`The path to the `}<inlineCode parentName=\"p\">{`phpunit`}</inlineCode>{` executable installed by `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/composer\"\n      }}>{`Composer`}</a>{` into the vendor directory is used.`}</p>\n    <h3 {...{\n      \"id\": \"run-only-a-custom-testsuite\"\n    }}>{`Run only a custom testsuite`}</h3>\n    <p>{`PHPUnit offers several ways to only execute a subset of tests.\nFor example, it is common to only execute a single test suite from the `}<inlineCode parentName=\"p\">{`phpunit.xml`}</inlineCode>{` configuration.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd dev/tests/integration\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`../../../vendor/bin/phpunit --testsuite \"Memory Usage Tests\"\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"run-tests-from-a-specific-directory-tree\"\n    }}>{`Run tests from a specific directory tree`}</h3>\n    <p>{`To execute only the tests within a specific directory (for example an extension), pass the path to that directory as an argument to `}<inlineCode parentName=\"p\">{`phpunit`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd dev/tests/integration\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`../../../vendor/bin/phpunit ../../../app/code/Acme/Example/Test/Integration\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"run-a-single-test-class\"\n    }}>{`Run a single test class`}</h3>\n    <p>{`When developing a new integration test class, it is common to run only that single test many times.\nPass the path to the file containing the test class as an argument to `}<inlineCode parentName=\"p\">{`phpunit`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd dev/tests/integration\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`../../../vendor/bin/phpunit ../../../app/code/Acme/Example/Test/Integration/ExampleTest.php\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"run-a-single-test-within-a-test-class\"\n    }}>{`Run a single test within a test class`}</h3>\n    <p>{`You can run only a single test within a test class by specifying the test class together with the `}<inlineCode parentName=\"p\">{`--filter`}</inlineCode>{` argument and the name to select the test that you are currently developing:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd dev/tests/integration\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`../../../vendor/bin/phpunit --filter 'testOnlyThisOneIsExecuted' ../../../app/code/Acme/Example/Test/Integration/ExampleTest.php\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"common-mistakes\"\n    }}>{`Common mistakes`}</h2>\n    <h3 {...{\n      \"id\": \"could-not-read-files-specified-as-arguments\"\n    }}>{`Could not read files specified as arguments`}</h3>\n    <p>{`This happens if the integration tests are executed from the wrong directory.`}</p>\n    <h3 {...{\n      \"id\": \"could-not-read-devtestsintegrationphpunitxml\"\n    }}>{`Could not read \"dev/tests/integration/phpunit.xml\"`}</h3>\n    <p>{`This error happens if the integration tests are executed from a different directory than `}<inlineCode parentName=\"p\">{`dev/tests/integration`}</inlineCode>{`.\nTo fix the issue, change to the `}<inlineCode parentName=\"p\">{`dev/tests/integration`}</inlineCode>{` directory, adjust any relative paths accordingly, and run the tests again.`}</p>\n    <h3 {...{\n      \"id\": \"unable-to-connect-to-mysql\"\n    }}>{`Unable to connect to MySQL`}</h3>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/php\"\n      }}>{`PHP`}</a>{` interpreter must be able to connect to the test database. By default, this means the tests have to run on the same host as the MySQL server.\nThis problem most commonly occurs during development with Vagrant or Docker, where the Commerce database is running on a virtual machine.\nIf the tests then are executed using a PHP interpreter on the host system, the database might not be accessible.`}</p>\n    <p>{`The error usually looks something like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`phpunit\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Expected log`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`exception 'PDOException' with message 'SQLSTATE[HY000] [2002] No such file or directory' in /var/www/magento2/vendor/magento/zendframework1/library/Zend/Db/Adapter/Pdo/Abstract.php:129\n`}</code></pre>\n    <p>{`There are many ways this problem can be resolved, but the easiest is to run the tests in the virtual machine as well.`}</p>\n    <h2 {...{\n      \"id\": \"run-integration-tests-in-phpstorm\"\n    }}>{`Run integration tests in PhpStorm`}</h2>\n    <p>{`When writing new integration tests or during debugging, it is convenient to execute tests from within the PhpStorm IDE.`}</p>\n    <p>{`Ensure you have `}<a parentName=\"p\" {...{\n        \"href\": \"#prepare-integration-test-execution\"\n      }}>{`prepared the integration test environment`}</a>{` before starting.`}</p>\n    <h3 {...{\n      \"id\": \"create-an-integration-test-run-configuration\"\n    }}>{`Create an integration test run configuration`}</h3>\n    <p>{`Setting up a run configuration for integration tests is very similar to creating a run configuration for unit tests.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"../unit/phpstorm.md\"\n      }}>{`Running Unit Tests in PhpStorm`}</a>{` for instructions on creating a basic run configuration.\nThen, configure the integration test to use the configuration file.`}</p>\n    <h3 {...{\n      \"id\": \"use-the-integration-test-configuration-file\"\n    }}>{`Use the integration test configuration file`}</h3>\n    <p>{`The only difference in the run configuration is that the integration test `}<inlineCode parentName=\"p\">{`phpunit.xml.dist`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`phpunit.xml`}</inlineCode>{` configuration file from the `}<inlineCode parentName=\"p\">{`dev/tests/integration`}</inlineCode>{` directory must be selected.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"47.5%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-testing/static/6faddec3a0eafd12a59660224b7afb44/5530d/phpstorm_run_config_class_integration_tests.webp 320w\", \"/commerce-testing/static/6faddec3a0eafd12a59660224b7afb44/0c8fb/phpstorm_run_config_class_integration_tests.webp 640w\", \"/commerce-testing/static/6faddec3a0eafd12a59660224b7afb44/94b1e/phpstorm_run_config_class_integration_tests.webp 1280w\", \"/commerce-testing/static/6faddec3a0eafd12a59660224b7afb44/57d79/phpstorm_run_config_class_integration_tests.webp 1906w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-testing/static/6faddec3a0eafd12a59660224b7afb44/dd4a7/phpstorm_run_config_class_integration_tests.png 320w\", \"/commerce-testing/static/6faddec3a0eafd12a59660224b7afb44/0f09e/phpstorm_run_config_class_integration_tests.png 640w\", \"/commerce-testing/static/6faddec3a0eafd12a59660224b7afb44/bbbf7/phpstorm_run_config_class_integration_tests.png 1280w\", \"/commerce-testing/static/6faddec3a0eafd12a59660224b7afb44/bab36/phpstorm_run_config_class_integration_tests.png 1906w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-testing/static/6faddec3a0eafd12a59660224b7afb44/bbbf7/phpstorm_run_config_class_integration_tests.png\",\n            \"alt\": \"Integration Test Class run configuration\",\n            \"title\": \"Integration Test Class run configuration\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"integration-tests-file-structure\"\n    }}>{`Integration tests file structure`}</h2>\n    <p>{`The root folder for the Commerce integration tests suite —`}<inlineCode parentName=\"p\">{`<magento_root>/dev/tests/integration`}</inlineCode>{`—contains the following sub-folders and files:`}</p>\n    <p>{`This folder contains the following sub-folders and files:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`framework/`}</inlineCode>{` – Integration testing framework scripts, configuration files and classes.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Magento/`}</inlineCode>{` – A set of classes that implement the Commerce integration tests framework.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`bootstrap.php`}</inlineCode>{` – The PHPUnit bootstrap script.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`etc/install-config-<db_vendor>.php`}</inlineCode>{` – A configuration file that provides values for installing the Commerce application.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`testsuite/`}</inlineCode>{` – The test suite.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`tmp/`}</inlineCode>{` – A writable directory for storing temporary data during test execution.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sandbox-<hash>/`}</inlineCode>{` – The folder where each Commerce instance stores temporary and configuration data.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`phpunit.xml.dist`}</inlineCode>{` – A PHPUnit configuration file.`}</li>\n    </ul>\n    {\n      /* LINK DEFINITIONS */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}