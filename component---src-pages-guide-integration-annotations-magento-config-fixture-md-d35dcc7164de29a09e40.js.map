{"version":3,"file":"component---src-pages-guide-integration-annotations-magento-config-fixture-md-d35dcc7164de29a09e40.js","mappings":"sRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,oCADR,qCAGA,yHAA0G,uBAAYC,WAAW,KAAvB,yBAA1G,iBACA,eACE,GAAM,UADR,WAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,4FAML,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,gBAApB,iHAC4D,uBAAYA,WAAW,MAAvB,eAD5D,sBAC0I,uBAAYA,WAAW,MAAvB,YAD1I,mEAE8B,uBAAYA,WAAW,MAAvB,WAF9B,MAGA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,iBAApB,oDACA,cAAGA,WAAW,KACV,KAAQ,oHADZ,2BADA,4BAIA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,kBAApB,uDAEF,eACE,GAAM,cADR,eAGA,oBACE,eAAIA,WAAW,MAAf,QAA4B,uBAAYA,WAAW,MAAvB,yBAA5B,8FAEA,eAAIA,WAAW,MAAf,uDAEF,eACE,GAAM,WADR,YAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,8vKAqNR,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-testing/./src/pages/guide/integration/annotations/magento-config-fixture.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"configuration-fixture-annotation\"\n    }}>{`Configuration fixture annotation`}</h1>\n    <p>{`To set configuration values for individual tests and revert them after the test execution, use the `}<inlineCode parentName=\"p\">{`@magentoConfigFixture`}</inlineCode>{` annotation.`}</p>\n    <h2 {...{\n      \"id\": \"format\"\n    }}>{`Format`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`/**\n * @magentoConfigFixture [<store_code>_store] <config_path> <config_value>\n */\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<store_code>`}</inlineCode>{` is the code of the store to be configured.\nWhen a global scope is required, this should be omitted and the `}<inlineCode parentName=\"li\">{`config path`}</inlineCode>{` is prefixed with `}<inlineCode parentName=\"li\">{`default/`}</inlineCode>{`. See below for an example.\nTo specify the current store, use `}<inlineCode parentName=\"li\">{`current`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<config_path>`}</inlineCode>{` is the XPath to the configuration option.\nSee `}<a parentName=\"li\" {...{\n          \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/paths/config-reference-sens.html\"\n        }}>{`configuration reference`}</a>{` for available options.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<config_value>`}</inlineCode>{` is a fixture value for the configuration option.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`The `}<inlineCode parentName=\"li\">{`@magentoConfigFixture`}</inlineCode>{` is available at the test method level only.\nIt is not available on the test case level.`}</li>\n      <li parentName=\"ol\">{`A test may contain several configuration options.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\n/**\n * Test class for \\\\Magento\\\\TestFramework\\\\Annotation\\\\ConfigFixture.\n */\nnamespace Magento\\\\Test\\\\Annotation;\n\nclass ConfigFixtureTest extends \\\\PHPUnit\\\\Framework\\\\TestCase\n{\n    /**\n     * @var \\\\Magento\\\\TestFramework\\\\Annotation\\\\ConfigFixture|\\\\PHPUnit_Framework_MockObject_MockObject\n     */\n    protected $_object;\n\n    protected function setUp()\n    {\n        $this->_object = $this->createPartialMock(\n            \\\\Magento\\\\TestFramework\\\\Annotation\\\\ConfigFixture::class,\n            ['_getConfigValue', '_setConfigValue']\n        );\n    }\n\n    /**\n     * @magentoConfigFixture current_store web/unsecure/base_url http://example.com/\n     */\n    public function testGlobalConfig()\n    {\n        $this->_object->expects(\n            $this->at(0)\n        )->method(\n            '_getConfigValue'\n        )->with(\n            'web/unsecure/base_url'\n        )->will(\n            $this->returnValue('http://localhost/')\n        );\n        $this->_object->expects(\n            $this->at(1)\n        )->method(\n            '_setConfigValue'\n        )->with(\n            'web/unsecure/base_url',\n            'http://example.com/'\n        );\n        $this->_object->startTest($this);\n\n        $this->_object->expects(\n            $this->once()\n        )->method(\n            '_setConfigValue'\n        )->with(\n            'web/unsecure/base_url',\n            'http://localhost/'\n        );\n        $this->_object->endTest($this);\n    }\n\n    /**\n     * @magentoConfigFixture current_store dev/restrict/allow_ips 192.168.0.1\n     */\n    public function testCurrentStoreConfig()\n    {\n        $this->_object->expects(\n            $this->at(0)\n        )->method(\n            '_getConfigValue'\n        )->with(\n            'dev/restrict/allow_ips',\n            ''\n        )->will(\n            $this->returnValue('127.0.0.1')\n        );\n        $this->_object->expects(\n            $this->at(1)\n        )->method(\n            '_setConfigValue'\n        )->with(\n            'dev/restrict/allow_ips',\n            '192.168.0.1',\n            ''\n        );\n        $this->_object->startTest($this);\n\n        $this->_object->expects(\n            $this->once()\n        )->method(\n            '_setConfigValue'\n        )->with(\n            'dev/restrict/allow_ips',\n            '127.0.0.1',\n            ''\n        );\n        $this->_object->endTest($this);\n    }\n\n    /**\n     * @magentoConfigFixture admin_store dev/restrict/allow_ips 192.168.0.2\n     */\n    public function testSpecificStoreConfig()\n    {\n        $this->_object->expects(\n            $this->at(0)\n        )->method(\n            '_getConfigValue'\n        )->with(\n            'dev/restrict/allow_ips',\n            'admin'\n        )->will(\n            $this->returnValue('192.168.0.1')\n        );\n        $this->_object->expects(\n            $this->at(1)\n        )->method(\n            '_setConfigValue'\n        )->with(\n            'dev/restrict/allow_ips',\n            '192.168.0.2',\n            'admin'\n        );\n        $this->_object->startTest($this);\n\n        $this->_object->expects(\n            $this->once()\n        )->method(\n            '_setConfigValue'\n        )->with(\n            'dev/restrict/allow_ips',\n            '192.168.0.1',\n            'admin'\n        );\n        $this->_object->endTest($this);\n    }\n\n     /**\n     * @magentoConfigFixture default/dev/restrict/allow_ips 192.168.0.2\n     */\n    public function testGlobalStoreConfig()\n    {\n        $this->_object->expects(\n            $this->at(0)\n        )->method(\n            '_getConfigValue'\n        )->with(\n            'dev/restrict/allow_ips',\n            'admin'\n        )->will(\n            $this->returnValue('192.168.0.1')\n        );\n        $this->_object->expects(\n            $this->at(1)\n        )->method(\n            '_setConfigValue'\n        )->with(\n            'dev/restrict/allow_ips',\n            '192.168.0.2',\n            'admin'\n        );\n        $this->_object->startTest($this);\n\n        $this->_object->expects(\n            $this->once()\n        )->method(\n            '_setConfigValue'\n        )->with(\n            'dev/restrict/allow_ips',\n            '192.168.0.1',\n            'admin'\n        );\n        $this->_object->endTest($this);\n    }\n\n    public function testInitStoreAfterOfScope()\n    {\n        $this->_object->expects($this->never())->method('_getConfigValue');\n        $this->_object->expects($this->never())->method('_setConfigValue');\n        $this->_object->initStoreAfter();\n    }\n\n    /**\n     * @magentoConfigFixture current_store web/unsecure/base_url http://example.com/\n     */\n    public function testInitStoreAfter()\n    {\n        $this->_object->startTest($this);\n        $this->_object->expects(\n            $this->at(0)\n        )->method(\n            '_getConfigValue'\n        )->with(\n            'web/unsecure/base_url'\n        )->will(\n            $this->returnValue('http://localhost/')\n        );\n        $this->_object->expects(\n            $this->at(1)\n        )->method(\n            '_setConfigValue'\n        )->with(\n            'web/unsecure/base_url',\n            'http://example.com/'\n        );\n        $this->_object->initStoreAfter();\n    }\n}\n\n`}</code></pre>\n    {\n      /* Link definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}