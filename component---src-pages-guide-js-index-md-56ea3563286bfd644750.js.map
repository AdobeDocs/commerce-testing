{"version":3,"file":"component---src-pages-guide-js-index-md-56ea3563286bfd644750.js","mappings":"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","sources":["webpack://commerce-testing/./src/pages/guide/js/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"javascript-unit-testing-with-jasmine\"\n    }}>{`JavaScript unit testing with Jasmine`}</h1>\n    <p>{`Commerce uses a custom `}<a parentName=\"p\" {...{\n        \"href\": \"https://gruntjs.com/\"\n      }}>{`Grunt`}</a>{` task named `}<inlineCode parentName=\"p\">{`spec`}</inlineCode>{` to run Jasmine tests. The task collects the tests from `}<inlineCode parentName=\"p\">{`<magento_root_dir>dev/tests/js/jasmine/tests`}</inlineCode>{` and can be run for all tests, a theme, or a single test.`}</p>\n    <h2 {...{\n      \"id\": \"prepare-environment\"\n    }}>{`Prepare environment`}</h2>\n    <p><strong parentName=\"p\">{`Step 1.`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://nodejs.org/en/\"\n      }}>{`Install Node.js`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Step 2.`}</strong>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://gruntjs.com/getting-started\"\n      }}>{`Install grunt-cli`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Step 3.`}</strong>{` In `}<inlineCode parentName=\"p\">{`<magento_root_dir>`}</inlineCode>{`, create `}<inlineCode parentName=\"p\">{`Gruntfile.js`}</inlineCode>{` and copy `}<inlineCode parentName=\"p\">{`Gruntfile.js.sample`}</inlineCode>{` into it.`}</p>\n    <p><strong parentName=\"p\">{`Step 4.`}</strong>{` In `}<inlineCode parentName=\"p\">{`<magento_root_dir>`}</inlineCode>{`, create `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` and copy `}<inlineCode parentName=\"p\">{`package.json.sample`}</inlineCode>{` into it.`}</p>\n    <p><strong parentName=\"p\">{`Step 5.`}</strong>{` In `}<inlineCode parentName=\"p\">{`<magento_root_dir>`}</inlineCode>{`, install all dependencies:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Step 6.`}</strong>{` In `}<inlineCode parentName=\"p\">{`<magento_root_dir>`}</inlineCode>{`, generate static view files that are going to be tested`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento setup:static-content:deploy -f\n`}</code></pre>\n    <p>{`Note that normally you don't have permissions to `}<inlineCode parentName=\"p\">{`<magento_root_dir>/app/code/`}</inlineCode>{`, in fact the generated static view file is being tested.`}</p>\n    <p>{`For CentOS and Ubuntu users:`}</p>\n    <p>{`If the command fails with the error message:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`/var/www/html/magento2ce/node_modules/phantomjs-prebuilt/lib/phantom/bin/phantomjs: error while loading shared libraries: libfontconfig.so.1: cannot open shared object file: No such file or directory\n`}</code></pre>\n    <p>{`Install `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.freedesktop.org/wiki/Software/fontconfig/\"\n      }}>{`fontconfig library`}</a>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`CentOS:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`yum install fontconfig\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Ubuntu:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`apt-get install fontconfig\n`}</code></pre>\n      </li>\n    </ul>\n    <p>{`Learn more in `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/static-view/static-view-file-deployment.html\"\n      }}>{`Deploy static view files`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"run-tests\"\n    }}>{`Run tests`}</h2>\n    <p><inlineCode parentName=\"p\">{`Gruntfile.js`}</inlineCode>{` contains the test run task, so you can run `}<strong parentName=\"p\">{`all tests`}</strong>{` using the following command in the application root directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`grunt spec:<THEME>\n`}</code></pre>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`grunt spec:backend\n`}</code></pre>\n    <p>{`or for the frontend area:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`grunt spec:luma\n`}</code></pre>\n    <p>{`You can also run a single test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`grunt spec:backend --file=\"/path/to/the/test.js\"\n`}</code></pre>\n    <p>{`or for the frontend area:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`grunt spec:luma --file=\"/path/to/the/test.js\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"write-a-test\"\n    }}>{`Write a test`}</h2>\n    <p>{`All tests are distributed through modules stored in `}<inlineCode parentName=\"p\">{`<magento_root_dir>/dev/tests/js/jasmine/tests`}</inlineCode>{`. Let's see how to write a test using an example of an existing test:`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/dev/tests/js/jasmine/tests/app/code/Magento/Ui/base/js/grid/columns/actions.test.js\"\n      }}><inlineCode parentName=\"a\">{`app/code/Magento/Ui/base/js/grid/columns/actions.test.js`}</inlineCode></a></p>\n    <p>{`which tests a JS module:`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Ui/view/base/web/js/grid/columns/actions.js\"\n      }}><inlineCode parentName=\"a\">{`<magento_root_dir>/app/code/Magento/Ui/view/base/web/js/grid/columns/actions.js`}</inlineCode></a></p>\n    <p>{`in its static representations generated in Step 6 previously:`}</p>\n    <p><inlineCode parentName=\"p\">{`<magento_root_dir>/pub/static/<area>/<theme>/<localisation>/Magento_Ui/js/columns/actions.js`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"step-1-create-a-new-file-with-name-filenametestjs-in-an-appropriate-module-directory\"\n    }}>{`Step 1. Create a new file with name `}<inlineCode parentName=\"h3\">{`<fileName>.test.js`}</inlineCode>{` in an appropriate module directory.`}</h3>\n    <p>{`For convenience, we can reflect the directory structure of a file to test.`}</p>\n    <p>{`A path to JS module that we want to cover with tests: `}<inlineCode parentName=\"p\">{`app/code/Magento/Ui/view/base/web/js/grid/columns/actions.js`}</inlineCode></p>\n    <p>{`A path to a test of the module: `}<inlineCode parentName=\"p\">{`app/code/Magento/Ui/base/js/grid/columns/actions.test.js`}</inlineCode></p>\n    <p>{`In `}<inlineCode parentName=\"p\">{`<magento_root_dir>/dev/tests/js/jasmine/tests`}</inlineCode>{` create the test with appropriate path.`}</p>\n    <h3 {...{\n      \"id\": \"step-2-require-a-file-that-you-want-to-test\"\n    }}>{`Step 2. Require a file that you want to test.`}</h3>\n    <p>{`For our example we need to cover all static view files ending with `}<inlineCode parentName=\"p\">{`Magento_Ui/js/grid/columns/actions`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`define([\n    'Magento_Ui/js/grid/columns/actions'\n], function (Actions) {\n    'use strict';\n\n    //Test code\n    //...\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"step-3-write-your-jasmine-test-code\"\n    }}>{`Step 3. Write your Jasmine test code.`}</h3>\n    <p>{`A Jasmine test consists of main two parts:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`describe`}</inlineCode>{` blocks`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`it`}</inlineCode>{` blocks`}</li>\n    </ul>\n    <p>{`Both the `}<inlineCode parentName=\"p\">{`describe`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`it`}</inlineCode>{` functions contains two parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`a text string with description of what is going to be done`}</li>\n      <li parentName=\"ul\">{`a function with block of code implementing described action`}</li>\n    </ul>\n    <p>{`In `}<inlineCode parentName=\"p\">{`describe`}</inlineCode>{` you can use `}<inlineCode parentName=\"p\">{`beforeEach`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`afterEach`}</inlineCode>{` functions performing a preparation of what must be done before and after every `}<inlineCode parentName=\"p\">{`it`}</inlineCode>{` test followed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`define([\n    'underscore',\n    'Magento_Ui/js/grid/columns/actions'\n], function (_, Actions) {\n    'use strict';\n\n    describe('ui/js/grid/columns/actions', function () {\n        var model,\n            action;\n\n        beforeEach(function () {\n            model = new Actions({\n                index: 'actions',\n                name: 'listing_action',\n                indexField: 'id',\n                dataScope: '',\n                rows: [{\n                    identifier: 'row'\n                }]\n            });\n            action = {\n                index: 'delete',\n                hidden: true,\n                rowIndex: 0,\n                callback: function() {\n                    return true;\n                }\n            };\n        });\n\n        it('Check addAction function', function () {\n            expect(model.addAction('delete', action)).toBe(model);\n        });\n\n        it('Check getAction function', function () {\n            var someAction = _.clone(action);\n\n            someAction.index = 'edit';\n            model.addAction('edit', someAction);\n            expect(model.getAction(0, 'edit')).toEqual(someAction);\n        });\n\n        it('Check getVisibleActions function', function () {\n            var someAction = _.clone(action);\n\n            someAction.hidden = false;\n            someAction.index= 'view';\n            model.addAction('delete', action);\n            model.addAction('view', someAction);\n            expect(model.getVisibleActions('0')).toEqual([someAction]);\n        });\n\n        it('Check updateActions function', function () {\n            expect(model.updateActions()).toEqual(model);\n        });\n\n        it('Check applyAction function', function () {\n            model.addAction('delete', action);\n            expect(model.applyAction('delete', 0)).toEqual(model);\n        });\n\n        it('Check isSingle and isMultiple function', function () {\n            var someAction = _.clone(action);\n\n            action.hidden = false;\n            model.addAction('delete', action);\n            expect(model.isSingle(0)).toBeTruthy();\n            someAction.hidden = false;\n            someAction.index = 'edit';\n            model.addAction('edit', someAction);\n            expect(model.isSingle(0)).toBeFalsy();\n            expect(model.isMultiple(0)).toBeTruthy();\n        });\n\n        it('Check isActionVisible function', function () {\n            expect(model.isActionVisible(action)).toBeFalsy();\n            action.hidden = false;\n            expect(model.isActionVisible(action)).toBeTruthy();\n        });\n    });\n});\n`}</code></pre>\n    <p>{`This topic doesn't provide Jasmine test writing methodology.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://jasmine.github.io/edge/introduction.html\"\n      }}>{`Learn more about testing with Jasmine.`}</a></p>\n    <h2 {...{\n      \"id\": \"debug-tests\"\n    }}>{`Debug tests`}</h2>\n    <p>{`Jasmine tests can be debugged in a browser using the following steps:`}</p>\n    <p>{`To keep the webserver running, set `}<inlineCode parentName=\"p\">{`keepalive`}</inlineCode>{` setting to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`dev/tests/js/jasmine/spec_runner/settings.json`}</inlineCode>{` file.`}</p>\n    <p>{`Launch the tests with the `}<inlineCode parentName=\"p\">{`grunt spec:luma`}</inlineCode>{` CLI command. Now the webserver should be started and waiting, `}<inlineCode parentName=\"p\">{`_SpecRunner.html`}</inlineCode>{` file should be generated in the project root.`}</p>\n    <p>{`Go to `}<inlineCode parentName=\"p\">{`http://localhost:8000/_SpecRunner.html`}</inlineCode>{` and use the developer console to debug the tests.`}</p>\n    <p>{`The array of the tests can be edited in the `}<inlineCode parentName=\"p\">{`_SpecRunner.html`}</inlineCode>{` file to include only necessary files.`}</p>\n    <h2 {...{\n      \"id\": \"known-issues-and-solutions\"\n    }}>{`Known issues and solutions`}</h2>\n    <h3 {...{\n      \"id\": \"error-cannot-find-module-module\"\n    }}>{`Error: Cannot find module '`}{`<`}{`module`}{`>`}{`'`}</h3>\n    <h4 {...{\n      \"id\": \"issue\"\n    }}>{`Issue:`}</h4>\n    <p>{`An error message appears:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`Loading \"Gruntfile.js\" tasks...ERROR\n\n>> Error: Cannot find module '<module>'\n\nWarning: Task \"spec\" not found. Use --force to continue.\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"solution\"\n    }}>{`Solution:`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`Make sure your Node.js version is up-to-date.`}</li>\n      <li parentName=\"ol\">{`Remove `}<inlineCode parentName=\"li\">{`package.json`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Gruntfile.js`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Copy `}<inlineCode parentName=\"li\">{`package.json`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Gruntfile.js`}</inlineCode>{` from `}<inlineCode parentName=\"li\">{`package.json.sample`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Gruntfile.js.sample`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Delete the `}<inlineCode parentName=\"li\">{`node_modules`}</inlineCode>{` directory.`}</li>\n      <li parentName=\"ol\">{`Run `}<inlineCode parentName=\"li\">{`npm install`}</inlineCode>{` in your terminal.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"warning-cannot-read-property-pid-of-undefined\"\n    }}>{`Warning: Cannot read property 'pid' of undefined`}</h3>\n    <h4 {...{\n      \"id\": \"issue-1\"\n    }}>{`Issue:`}</h4>\n    <p>{`An error message appears:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`Warning: Cannot read property 'pid' of undefined\n\nUse --force to continue. Aborted due to warnings.\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"solution-1\"\n    }}>{`Solution:`}</h4>\n    <p>{`Run in your terminal:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd <magento_root>/node_modules/grunt-contrib-jasmine\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install\n`}</code></pre>\n    {\n      /* LINK DEFINITIONS */\n    }\n    {\n      /* External */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}