{"version":3,"file":"component---src-pages-guide-integration-annotations-magento-components-dir-md-01e7b9078b7a2b1b66be.js","mappings":"2RAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,qCACH,sCACL,kBAAK,wHAAsH,uBAAYC,WAAW,KAAM,yBAAsC,sGAE9L,eACE,GAAM,UACH,WACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,+BACV,mDAIP,kBAAK,UAAQ,uBAAYA,WAAW,KAAM,cAA2B,kGAC/B,uBAAYA,WAAW,KAAM,oBAAiC,WACpG,eACE,GAAM,aACH,cACL,mBAAG,uBAAYA,WAAW,KAAM,yBAAsC,iFACtE,eACE,GAAM,eACH,gBACL,mBAAG,uBAAYA,WAAW,KAAM,yBAAsC,mKAChC,uBAAYA,WAAW,KAAM,yBAAsC,kCACzG,eACE,GAAM,WACH,YACL,kBAAK,uCAAqC,uBAAYA,WAAW,KAAM,yBAAsC,qCAC7G,qBAAK,iBAAMA,WAAW,MAClB,UAAa,+BACV,2uBAyBP,kBAAK,0IACU,uBAAYA,WAAW,KAAM,2BAAwC,kBAAgB,uBAAYA,WAAW,KAAM,yDAAsE,0BAAwB,uBAAYA,WAAW,KAAM,6DAA0E,MACtU,qBAAK,iBAAMA,WAAW,MAClB,UAAa,+BACV,qPASP,SAACX,EAAD,CAAaY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,sHAAoH,cAAGC,WAAW,IACnI,KAAQ,2CACP,uBAAYA,WAAW,KAAM,wBAAwC,oDAM7E,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://commerce-testing/./src/pages/guide/integration/annotations/magento-components-dir.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"component-registration-annotation\"\n    }}>{`Component registration annotation`}</h1>\n    <p>{`When your test design requires to register fixture components and unregister them after the test execution, use the `}<inlineCode parentName=\"p\">{`@magentoComponentsDir`}</inlineCode>{` annotation.\nIt enables you to register all the components at a specified directory recursively.`}</p>\n    <h2 {...{\n      \"id\": \"format\"\n    }}>{`Format`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php?start_inline=1\"\n      }}>{`/**\n* @magentoComponentsDir <dir_path>\n*/\n`}</code></pre>\n    <p>{`Here, `}<inlineCode parentName=\"p\">{`<dir_path>`}</inlineCode>{` is a path to the directory with fixture components.\nEach component must be registered using `}<inlineCode parentName=\"p\">{`registration.php`}</inlineCode>{` file.`}</p>\n    <h2 {...{\n      \"id\": \"test-case\"\n    }}>{`Test case`}</h2>\n    <p><inlineCode parentName=\"p\">{`@magentoComponentsDir`}</inlineCode>{` annotation for a test case is applied to all test methods in the test case.`}</p>\n    <h2 {...{\n      \"id\": \"test-method\"\n    }}>{`Test method`}</h2>\n    <p><inlineCode parentName=\"p\">{`@magentoComponentsDir`}</inlineCode>{` annotation for a test method configures the test to run with registered components located in a specified directory.\nIf the parent test case also declares a `}<inlineCode parentName=\"p\">{`@magentoComponentsDir`}</inlineCode>{`, both annotation are merged.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`The following example demonstrates `}<inlineCode parentName=\"p\">{`@magentoComponentsDir`}</inlineCode>{` annotation in different scopes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php?start_inline=1\"\n      }}>{`namespace Magento\\\\Foo;\n\n/**\n * @magentoComponentsDir Magento/Foo/_files/code/Magento\n */\nclass BarTest extends \\\\PHPUnit\\\\Framework\\\\TestCase\n{\n    /**\n     * @magentoComponentsDir Magento/Foo/_files/themes\n     */\n    public function testOne()\n    {\n       ...   // Here you can use registered components from 'Magento/Foo/_files/code/Magento' and 'Magento/Foo/_files/themes'\n    }\n\n    /**\n     * @magentoComponentsDir Magento/Foo/_files/libs\n     * @magentoComponentsDir Magento/Baz/_files/languages\n     */\n    public function testTwo()\n    {\n       ...   // Here you can use the registered components from 'Magento/Foo/_files/code/Magento', 'Magento/Foo/_files/libs', and 'Magento/Baz/_files/languages'\n    }\n}\n`}</code></pre>\n    <p>{`Each path declared in annotation must contain a registration file in the specified directory or its subdirectories.\nFor example, the `}<inlineCode parentName=\"p\">{`MagentoFooTest_MyModule`}</inlineCode>{` component at `}<inlineCode parentName=\"p\">{`@magentoComponentsDir Magento/Foo/_files/code/Magento`}</inlineCode>{` can be registered in `}<inlineCode parentName=\"p\">{`Magento/Foo/_files/code/Magento/MyModule/registration.php`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php?start_inline=1\"\n      }}>{`\nuse Magento\\\\Framework\\\\Component\\\\ComponentRegistrar;\n\n\\\\Magento\\\\Framework\\\\Component\\\\ComponentRegistrar::register(\n    \\\\Magento\\\\Framework\\\\Component\\\\ComponentRegistrar::MODULE,\n    'MagentoFooTest_MyModule',\n    __DIR__\n);\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`A theme must be registered in the database. Each time you register a theme, reset the entire application. Use the `}<a parentName=\"p\" {...{\n        \"href\": \"../annotations/magento-db-isolation.md\"\n      }}><inlineCode parentName=\"a\">{`@magentoDbIsolation`}</inlineCode></a>{` annotation to keep the database integrity safe.`}</p>\n    {\n      /* Link definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}