"use strict";(self.webpackChunkcommerce_testing=self.webpackChunkcommerce_testing||[]).push([[2073],{87509:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return o},default:function(){return x}});var n,r=a(87462),i=a(63366),d=(a(15007),a(64983)),m=a(91515),l=["components"],o={},p=(n="InlineAlert",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,d.mdx)("div",e)}),s={_frontmatter:o},u=m.Z;function x(e){var t=e.components,a=(0,i.Z)(e,l);return(0,d.mdx)(u,(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,d.mdx)("h1",{id:"metadata"},"Metadata"),(0,d.mdx)("p",null,"In this topic we talk about handling entities that you need in your tests (such as categories, products, wish lists, and similar) using MFTF.\nUsing data handling actions like ","[",(0,d.mdx)("inlineCode",{parentName:"p"},"createData"),"]",", ","[",(0,d.mdx)("inlineCode",{parentName:"p"},"deleteData"),"]",", ","[",(0,d.mdx)("inlineCode",{parentName:"p"},"updateData"),"]",", and ","[",(0,d.mdx)("inlineCode",{parentName:"p"},"getData"),"]",", you are able to create, delete, update, and read entities for your tests.\nThe framework enables you to send HTTP requests with these statically defined data entities:"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"#sending-a-rest-api-request"},"Sending a REST API request")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"#handling-a-rest-api-response"},"Handling a REST API response")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"#handling-entities-using-html-forms"},"Sending an HTML form encoded in URL"))),(0,d.mdx)("p",null,"You have probably noticed that some modules in acceptance functional tests contain a directory, which is called ",(0,d.mdx)("inlineCode",{parentName:"p"},"Metadata"),"."),(0,d.mdx)("p",null,"Example of a module with ",(0,d.mdx)("em",{parentName:"p"},"Metadata"),":"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-tree"},"Wishlist\n├── Data\n├── Metadata\n├── Page\n├── Section\n└── Test\n")),(0,d.mdx)("p",null,"This directory contains XML files with metadata required to create a valid request to handle an entity defined in ",(0,d.mdx)("inlineCode",{parentName:"p"},"dataType"),".\nA metadata file contains a list of operations with different types (defined in ",(0,d.mdx)("inlineCode",{parentName:"p"},"type"),").\nEach ",(0,d.mdx)("a",{parentName:"p",href:"#operation"},"operation")," includes:"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"The set of adjustments for processing a request in ",(0,d.mdx)("a",{parentName:"li",href:"#operations"},"attributes"),", and in some cases, a response  (see ",(0,d.mdx)("inlineCode",{parentName:"li"},"successRegex"),", ",(0,d.mdx)("inlineCode",{parentName:"li"},"returnRegex")," and ",(0,d.mdx)("inlineCode",{parentName:"li"},"returnIndex")," in ",(0,d.mdx)("a",{parentName:"li",href:"#operations"},"reference details"),")."),(0,d.mdx)("li",{parentName:"ul"},"The type of body content encoding in ",(0,d.mdx)("a",{parentName:"li",href:"#contenttype"},"contentType"),"."),(0,d.mdx)("li",{parentName:"ul"},"The body of the request represented as a tree of objects, arrays, and fields.")),(0,d.mdx)("p",null,"When a test step requires handling the specified data entity, the Functional Testing Framework performs the following steps:"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"Reads input data (",(0,d.mdx)("inlineCode",{parentName:"li"},"<data/>"),") and the type (the ",(0,d.mdx)("inlineCode",{parentName:"li"},"type")," attribute) of the specified ",(0,d.mdx)("a",{parentName:"li",href:"data.md#entity"},"entity"),"."),(0,d.mdx)("li",{parentName:"ul"},"Searches the metadata operation for the ",(0,d.mdx)("inlineCode",{parentName:"li"},"dataType")," that matches the entity's ",(0,d.mdx)("inlineCode",{parentName:"li"},"type"),". For example, ",(0,d.mdx)("inlineCode",{parentName:"li"},'<entity type="product">')," matches ",(0,d.mdx)("inlineCode",{parentName:"li"},'<operation dataType="product"'),"."),(0,d.mdx)("li",{parentName:"ul"},"Forms a request of the operation and the input data of the entity according to matching metadata."),(0,d.mdx)("li",{parentName:"ul"},"Stores a response and provides access to its data using the Functional Testing Framework variables syntax in XML.")),(0,d.mdx)("p",null,"The following diagram demonstrates the XML structure of a metadata file:\n",(0,d.mdx)("img",{parentName:"p",src:"/commerce-testing/assets/6078ae67e5f2e1b7dbbc63bad03888ba/metadata-dia.svg",alt:"Structure of metadata"})),(0,d.mdx)("h2",{id:"format"},"Format"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<operations xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n        xsi:noNamespaceSchemaLocation="urn:magento:mftf:DataGenerator/etc/dataOperation.xsd">\n    <operation name=""\n               dataType=""\n               type=""\n               auth=""\n               url=""\n               method="">\n        <contentType></contentType>\n        <object key="" dataType="">\n            <field key="">integer</field>\n            <field key="">string</field>\n            <field key="">boolean</field>\n            <array key="">\n                <value>string</value>\n            </array>\n        </object>\n    </operation>\n</operations>\n')),(0,d.mdx)("h2",{id:"principles"},"Principles"),(0,d.mdx)("ol",null,(0,d.mdx)("li",{parentName:"ol"},"A ",(0,d.mdx)("inlineCode",{parentName:"li"},"dataType")," value must match the ",(0,d.mdx)("inlineCode",{parentName:"li"},"type")," value of the corresponding entity."),(0,d.mdx)("li",{parentName:"ol"},"A file name should be PascalCase and end with ",(0,d.mdx)("inlineCode",{parentName:"li"},"Meta.xml"),".\nExample: ",(0,d.mdx)("inlineCode",{parentName:"li"},"ProductAttributeMeta.xml"),"."),(0,d.mdx)("li",{parentName:"ol"},"A metadata file may contain different types of operations (",(0,d.mdx)("inlineCode",{parentName:"li"},"type"),") with the same data entity (",(0,d.mdx)("inlineCode",{parentName:"li"},"dataType"),").")),(0,d.mdx)("p",null,"Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<operations>\n    <operation type="create" dataType="category">\n        ...\n    </operation>\n    <operation type="update" dataType="category">\n        ...\n    </operation>\n    <operation type="delete" dataType="category">\n        ...\n    </operation>\n    <operation type="get" dataType="category">\n        ...\n    </operation>\n</operations>\n')),(0,d.mdx)("h2",{id:"handling-entities-using-rest-api"},"Handling entities using REST API"),(0,d.mdx)("h3",{id:"sending-a-rest-api-request"},"Sending a REST API request"),(0,d.mdx)("p",null,"The Functional Testing Framework allows you to handle basic CRUD operations with an object using ",(0,d.mdx)("a",{parentName:"p",href:"https://devdocs.magento.com/guides/v2.4/get-started/bk-get-started-api.html"},"REST API")," requests.\nTo convert a request to the Functional Testing Framework format, wrap the corresponding REST API request into XML tags according to the ",(0,d.mdx)("a",{parentName:"p",href:"#reference"},"Reference documentation"),"."),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"GET is used for retrieving data from objects."),(0,d.mdx)("li",{parentName:"ul"},"POST is used for creating new objects."),(0,d.mdx)("li",{parentName:"ul"},"PUT is used for updating objects."),(0,d.mdx)("li",{parentName:"ul"},"DELETE is used for deleting objects.")),(0,d.mdx)("p",null,"This is an example of how to handle a category using REST API operations provided by the ",(0,d.mdx)("inlineCode",{parentName:"p"},"catalogCategoryRepositoryV1")," service."),(0,d.mdx)("p",null,(0,d.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"979px"}},"\n      ",(0,d.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"21.25%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,d.mdx)("picture",{parentName:"span"},"\n          ",(0,d.mdx)("source",{parentName:"picture",srcSet:["/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/5530d/catalogCategoryRepository-operations.webp 320w","/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/0c8fb/catalogCategoryRepository-operations.webp 640w","/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/8a413/catalogCategoryRepository-operations.webp 979w"],sizes:"(max-width: 979px) 100vw, 979px",type:"image/webp"}),"\n          ",(0,d.mdx)("source",{parentName:"picture",srcSet:["/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/dd4a7/catalogCategoryRepository-operations.png 320w","/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/0f09e/catalogCategoryRepository-operations.png 640w","/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/1d5a8/catalogCategoryRepository-operations.png 979w"],sizes:"(max-width: 979px) 100vw, 979px",type:"image/png"}),"\n          ",(0,d.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/1d5a8/catalogCategoryRepository-operations.png",alt:"REST API operations provided by catalogCategoryRepositoryV1",title:"REST API operations provided by catalogCategoryRepositoryV1",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,d.mdx)("p",null,"The above screenshot from the ",(0,d.mdx)("a",{parentName:"p",href:"https://devdocs.magento.com/guides/v2.4/get-started/bk-get-started-api.html"},"REST API Reference")," demonstrates a list of available operations to:"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"Delete a category by its identifier (",(0,d.mdx)("inlineCode",{parentName:"li"},'method="DELETE"'),")"),(0,d.mdx)("li",{parentName:"ul"},"Get information about a category by its ID (",(0,d.mdx)("inlineCode",{parentName:"li"},'method="GET"'),")"),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"#create-an-object-in-admin"},"Create a new category")," (",(0,d.mdx)("inlineCode",{parentName:"li"},'method="POST"'),")"),(0,d.mdx)("li",{parentName:"ul"},"Update category data by its ID (",(0,d.mdx)("inlineCode",{parentName:"li"},'method="PUT"'),")")),(0,d.mdx)("p",null,"We assume that our ",(0,d.mdx)("inlineCode",{parentName:"p"},".env")," file sets ",(0,d.mdx)("inlineCode",{parentName:"p"},"MAGENTO_BASE_URL=https://example.com/")," and ",(0,d.mdx)("inlineCode",{parentName:"p"},"MAGENTO_BACKEND_NAME=admin"),"."),(0,d.mdx)("h4",{id:"create-a-simple-category"},"Create a simple category"),(0,d.mdx)("p",null,"Let's see what happens when you create a category:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<createData entity="_defaultCategory" stepKey="createPreReqCategory"/>\n')),(0,d.mdx)("p",null,"The Functional Testing Framework searches in the ",(0,d.mdx)("em",{parentName:"p"},"Data")," directory an entity with ",(0,d.mdx)("inlineCode",{parentName:"p"},'<entity name="_defaultCategory">')," and reads ",(0,d.mdx)("inlineCode",{parentName:"p"},"type")," of the entity.\nIf there are more than one entity with the same name, all of the entities are merged."),(0,d.mdx)("p",null,(0,d.mdx)("em",{parentName:"p"},"Catalog/Data/CategoryData.xml"),":"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<entity name="_defaultCategory" type="category">\n    <data key="name" unique="suffix">simpleCategory</data>\n    <data key="name_lwr" unique="suffix">simplecategory</data>\n    <data key="is_active">true</data>\n</entity>\n')),(0,d.mdx)("p",null,"Here, ",(0,d.mdx)("inlineCode",{parentName:"p"},"type")," is equal to ",(0,d.mdx)("inlineCode",{parentName:"p"},'"category"'),", which instructs the Functional Testing Framework to search an operation with ",(0,d.mdx)("inlineCode",{parentName:"p"},'dataType="category"'),".\nSince the action is ",(0,d.mdx)("strong",{parentName:"p"},"to create")," a category, the Functional Testing Framework will also search for operation with ",(0,d.mdx)("inlineCode",{parentName:"p"},'type="create"')," in ",(0,d.mdx)("em",{parentName:"p"},"Metadata")," for ",(0,d.mdx)("inlineCode",{parentName:"p"},'dataType="category"'),"."),(0,d.mdx)("p",null,(0,d.mdx)("em",{parentName:"p"},"Catalog/Metadata/CategoryMeta.xml"),":"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<operation name="CreateCategory" dataType="category" type="create" auth="adminOauth" url="/V1/categories" method="POST">\n    <contentType>application/json</contentType>\n    <object key="category" dataType="category">\n        <field key="parent_id">integer</field>\n        <field key="name">string</field>\n        <field key="is_active">boolean</field>\n        <field key="position">integer</field>\n        <field key="level">integer</field>\n        <field key="children">string</field>\n        <field key="created_at">string</field>\n        <field key="updated_at">string</field>\n        <field key="path">string</field>\n        <field key="include_in_menu">boolean</field>\n        <array key="available_sort_by">\n            <value>string</value>\n        </array>\n        <field key="extension_attributes">empty_extension_attribute</field>\n        <array key="custom_attributes">\n            <value>custom_attribute</value>\n        </array>\n    </object>\n</operation>\n')),(0,d.mdx)("p",null,"(The corresponding operation is provided by ",(0,d.mdx)("em",{parentName:"p"},"catalogCategoryRepositoryV1")," in ",(0,d.mdx)("a",{parentName:"p",href:"https://devdocs.magento.com/guides/v2.4/get-started/bk-get-started-api.html"},"REST API"),".)"),(0,d.mdx)("p",null,"The following is encoded in ",(0,d.mdx)("inlineCode",{parentName:"p"},"<operation>"),":"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},'name="CreateCategory"')," defines a descriptive name of the operation, which is used for merging if needed."),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},'dataType="category"')," defines a relation with data entities with input data for a Category (",(0,d.mdx)("inlineCode",{parentName:"li"},'<entity type="category">'),")."),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},'auth="adminOauth"')," defines OAuth authorization, which is required for the Admin area."),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},'url="/V1/categories"')," defines a routing URL to the corresponding service class.\n(The request will be sent to ",(0,d.mdx)("inlineCode",{parentName:"li"},"https://example.com/rest/V1/categories")," if ",(0,d.mdx)("inlineCode",{parentName:"li"},"MAGENTO_BASE_URL=https://example.com/")," and ",(0,d.mdx)("inlineCode",{parentName:"li"},"MAGENTO_BACKEND_NAME=admin")," are set in the ",(0,d.mdx)("em",{parentName:"li"},"acceptance/.env")," configuration file.)"),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},'method="POST"')," defines a POST method of the HTTP request.")),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},"<contentType>application/json</contentType>")," defines a content type of the REST API request, which is set as ",(0,d.mdx)("inlineCode",{parentName:"p"},"application/json")," here."),(0,d.mdx)("p",null,"The parameter that declares a body of the request is ",(0,d.mdx)("em",{parentName:"p"},"catalogCategoryRepositoryV1SavePostBody"),".\nUsing the ",(0,d.mdx)("a",{parentName:"p",href:"#reference"},"Reference"),", we can trace how the JSON request was converted into XML representation."),(0,d.mdx)(p,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,d.mdx)("p",null,"Comments in the example below are used to demonstrate relation between JSON request and Functional Testing Framework metadata in XML.\nJSON does not support comments."),(0,d.mdx)("p",null,"Model schema for ",(0,d.mdx)("em",{parentName:"p"},"catalogCategoryRepositoryV1SavePostBody")," with XML representation of ",(0,d.mdx)("em",{parentName:"p"},"Catalog/Metadata/CategoryMeta.xml")," in comments:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{                                           // XML representation in the Functional Testing Framework metadata format (see \'Catalog/Metadata/CategoryMeta.xml\')\n  "category": {                             // <object key="category" dataType="category">\n    "id": 0,                                // Skipped, because Category ID is not available on UI when you create a new category.\n    "parent_id": 0,                         // <field key="parent_id">integer</field>\n    "name": "string",                       // <field key="name">string</field>\n    "is_active": true,                      // <field key="is_active">boolean</field>\n    "position": 0,                          // <field key="position">integer</field>\n    "level": 0,                             // <field key="level">integer</field>\n    "children": "string",                   // <field key="children">string</field>\n    "created_at": "string",                 // <field key="created_at">string</field>\n    "updated_at": "string",                 // <field key="updated_at">string</field>\n    "path": "string",                       // <field key="path">string</field>\n    "available_sort_by": [                  // <array key="available_sort_by">\n      "string"                              // <value>string</value>\n    ],                                      // </array>\n    "include_in_menu": true,                // <field key="include_in_menu">boolean</field>\n    "extension_attributes": {},             // <field key="extension_attributes">empty_extension_attribute</field>, where \'empty_extension_attribute\' is a reference to operation with \'dataType="empty_extension_attribute"\' (see \'Catalog/Metadata/EmptyExtensionAttributeMeta.xml\')\n    "custom_attributes": [                  // <array key="custom_attributes">\n      {                                     // <value>custom_attribute</value>, where \'custom_attribute\' is a reference to operation with \'dataType="custom_attribute"\' (see \'Catalog/Metadata/CustomAttributeMeta.xml\')\n        "attribute_code": "string",\n        "value": "string"\n      }\n    ]                                       // </array>\n  }                                         // </object>\n}\n')),(0,d.mdx)("p",null,"So, the body of a REST API request that creates a simple category is the following:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{                                             // XML representation of input data used to create a simple category ("Catalog/Data/CategoryData.xml")\n  "category": {                               // <entity name="_defaultCategory" type="category">\n    "name": "simpleCategory_0986576456",      // <data key="name" unique="suffix">simpleCategory</data>\n    "is_active": true                         // <data key="is_active">true</data>\n  }                                           // </entity>\n}\n')),(0,d.mdx)("h4",{id:"create-an-object-as-a-guest"},"Create an object as a guest"),(0,d.mdx)("p",null,"The corresponding test step is:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<createData entity="guestCart" stepKey="createGuestCart"/>\n')),(0,d.mdx)("p",null,"The Functional Testing Framework searches in the ",(0,d.mdx)("em",{parentName:"p"},"Data")," directory an entity with ",(0,d.mdx)("inlineCode",{parentName:"p"},'<entity name="GuestCart">')," and reads ",(0,d.mdx)("inlineCode",{parentName:"p"},"type"),"."),(0,d.mdx)("p",null,(0,d.mdx)("em",{parentName:"p"},"Quote/Data/GuestCartData.xml"),":"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<entity name="GuestCart" type="GuestCart">\n</entity>\n')),(0,d.mdx)("p",null,(0,d.mdx)("inlineCode",{parentName:"p"},'type="guestCart"')," points to the operation with ",(0,d.mdx)("inlineCode",{parentName:"p"},'dataType=GuestCart"')," and ",(0,d.mdx)("inlineCode",{parentName:"p"},'type="create"')," in the ",(0,d.mdx)("em",{parentName:"p"},"Metadata")," directory."),(0,d.mdx)("p",null,(0,d.mdx)("em",{parentName:"p"},"Catalog/Data/CategoryData.xml"),":"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<operation name="CreateGuestCart" dataType="GuestCart" type="create" auth="anonymous" url="/V1/guest-carts" method="POST">\n    <contentType>application/json</contentType>\n</operation>\n')),(0,d.mdx)("p",null,"As a result, the Functional Testing Framework sends an unauthorized POST request with an empty body to the ",(0,d.mdx)("inlineCode",{parentName:"p"},"https://example.com/rest/V1/guest-carts")," and stores the single string response that the endpoint returns."),(0,d.mdx)("h3",{id:"handling-a-rest-api-response"},"Handling a REST API response"),(0,d.mdx)("p",null,"There are cases when you need to reuse the data that Adobe Commerce or Magento Open source responded with to your POST request."),(0,d.mdx)("p",null,"Let's see how to handle data after you created a category with custom attributes:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<createData entity="customizedCategory" stepKey="createPreReqCategory"/>\n')),(0,d.mdx)("p",null,"The Functional Testing Framework receives the corresponding JSON response and enables you to reference its data using a variable of format:"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"$")," ",(0,d.mdx)("em",{parentName:"p"},"stepKey")," ",(0,d.mdx)("strong",{parentName:"p"},".")," ",(0,d.mdx)("em",{parentName:"p"},"JsonKey")," ",(0,d.mdx)("strong",{parentName:"p"},"$")),(0,d.mdx)("p",null,"Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},"$createPreReqCategory.id$\n")),(0,d.mdx)("p",null,"And for a custom attribute:"),(0,d.mdx)("p",null,(0,d.mdx)("strong",{parentName:"p"},"$")," ",(0,d.mdx)("em",{parentName:"p"},"stepKey"),"  ",(0,d.mdx)("strong",{parentName:"p"},".custom",(0,d.mdx)("em",{parentName:"strong"},"attributes[ _attribute key")," ]")," ",(0,d.mdx)("strong",{parentName:"p"},"$")),(0,d.mdx)("p",null,"Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},"$createPreReqCategory.custom_attributes[is_anchor]$\n")),(0,d.mdx)("p",null,"The following example of response in JSON demonstrates how to reference data on the root level and as data in custom attributes:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "id": 7,                                          //$createPreReqCategory.id$\n    "parent_id": 2,                                   //$createPreReqCategory.parent_id$\n    "name": "simpleCategory_0986576456",              //$createPreReqCategory.is_active$\n    "is_active": true,\n    "position": 5,\n    "level": 2,\n    "children": "",\n    "created_at": "2018-05-08 14:27:18",\n    "updated_at": "2018-05-08 14:27:18",\n    "path": "1/2/7",\n    "available_sort_by": [],\n    "include_in_menu": true,\n    "custom_attributes": [\n        {\n            "attribute_code": "is_anchor",\n            "value": "1"                              //$createPreReqCategory.custom_attributes[is_anchor]$\n        },\n        {\n            "attribute_code": "path",\n            "value": "1/2/7"                          //$createPreReqCategory.custom_attributes[path]$\n        },\n        {\n            "attribute_code": "children_count",\n            "value": "0"\n        },\n        {\n            "attribute_code": "url_key",\n            "value": "simplecategory5af1b41cd58fb4"   //$createPreReqCategory.custom_attributes[url_key]$\n        },\n        {\n            "attribute_code": "url_path",\n            "value": "simplecategory5af1b41cd58fb4"\n        }\n    ],\n}\n}\n')),(0,d.mdx)("h2",{id:"handling-entities-using-html-forms"},"Handling entities using HTML forms"),(0,d.mdx)("p",null,"For cases when REST API is not applicable, you may use ",(0,d.mdx)("a",{parentName:"p",href:"https://www.w3.org/TR/html401/interact/forms.html"},"HTML forms")," (when all object parameters are encoded in a URL as ",(0,d.mdx)("inlineCode",{parentName:"p"},"key=name")," attributes).\nThere are two different attributes to split access to different areas:"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},'auth="adminFormKey"')," is used for objects in an Admin area."),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},'auth="customerFormKey"')," is used for objects in a storefront.")),(0,d.mdx)("p",null,"You are able to create assurances with ",(0,d.mdx)("inlineCode",{parentName:"p"},"successRegex"),", and, optionally, return values with ",(0,d.mdx)("inlineCode",{parentName:"p"},"returnRegex"),". You can also use ",(0,d.mdx)("inlineCode",{parentName:"p"},"returnIndex")," when ",(0,d.mdx)("inlineCode",{parentName:"p"},"returnRegex")," matches multiple values."),(0,d.mdx)("h3",{id:"create-an-object-in-admin"},"Create an object in Admin"),(0,d.mdx)("p",null,"The ",(0,d.mdx)("inlineCode",{parentName:"p"},"CreateStoreGroup")," operation is used to persist a store group:"),(0,d.mdx)("p",null,"Source file is ",(0,d.mdx)("em",{parentName:"p"},"Store/Metadata/StoreGroupMeta.xml"),":"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<operation name="CreateStoreGroup" dataType="group" type="create" auth="adminFormKey" url="/admin/system_store/save" method="POST" successRegex="/messages-message-success/" >\n    <contentType>application/x-www-form-urlencoded</contentType>\n    <object dataType="group" key="group">\n        <field key="group_id">string</field>\n        <field key="name">string</field>\n        <field key="code">string</field>\n        <field key="root_category_id">integer</field>\n        <field key="website_id">integer</field>\n    </object>\n    <field key="store_action">string</field>\n    <field key="store_type">string</field>\n</operation>\n')),(0,d.mdx)("p",null,"The operation is called when ",(0,d.mdx)("inlineCode",{parentName:"p"},"<createData>")," (",(0,d.mdx)("inlineCode",{parentName:"p"},'type="create"'),") points to a data entity of type ",(0,d.mdx)("inlineCode",{parentName:"p"},'"group"')," (",(0,d.mdx)("inlineCode",{parentName:"p"},'dataType="group"'),").\nIt sends a POST request (",(0,d.mdx)("inlineCode",{parentName:"p"},'method="POST"'),") to ",(0,d.mdx)("inlineCode",{parentName:"p"},"http://example.com/admin/system_store/save")," (",(0,d.mdx)("inlineCode",{parentName:"p"},'url="/admin/system_store/save"'),") that is authorized for the Admin area (",(0,d.mdx)("inlineCode",{parentName:"p"},'auth="adminFormKey"'),").\nThe request contains HTML form data encoded in the ",(0,d.mdx)("a",{parentName:"p",href:"https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1"},"application/x-www-form-urlencoded")," content type (",(0,d.mdx)("inlineCode",{parentName:"p"},"<contentType>application/x-www-form-urlencoded</contentType>"),").\nIf the returned HTML code contains the ",(0,d.mdx)("inlineCode",{parentName:"p"},"messages-message-success")," string, it is resolved as successful."),(0,d.mdx)("p",null,"The operation enables you to assign the following form fields:"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"group/group_id")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"group/name")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"group/code")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"group/root_category_id")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"group/website_id")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"store_action")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"store_type"))),(0,d.mdx)("h3",{id:"create-an-object-in-storefront"},"Create an object in storefront"),(0,d.mdx)("p",null,"The Functional Testing Framework uses the ",(0,d.mdx)("inlineCode",{parentName:"p"},"CreateWishlist")," operation to create a wish list on storefront:"),(0,d.mdx)("p",null,"Source file is ",(0,d.mdx)("em",{parentName:"p"},"Wishlist/Metadata/WishlistMeta.xml")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<operation name="CreateWishlist" dataType="wishlist" type="create" auth="customerFormKey" url="/wishlist/index/add/" method="POST" successRegex="" returnRegex="~\\/wishlist_id\\/(\\d*?)\\/~" >\n    <contentType>application/x-www-form-urlencoded</contentType>\n    <field key="product">integer</field>\n    <field key="customer_email">string</field>\n    <field key="customer_password">string</field>\n</operation>\n')),(0,d.mdx)("p",null,"The operation is used when ",(0,d.mdx)("inlineCode",{parentName:"p"},"<createData>")," (",(0,d.mdx)("inlineCode",{parentName:"p"},'type="create"'),") points to a data entity of type ",(0,d.mdx)("inlineCode",{parentName:"p"},'"wishlist"')," (",(0,d.mdx)("inlineCode",{parentName:"p"},'dataType="wishlist"'),").\nIt sends a POST request (",(0,d.mdx)("inlineCode",{parentName:"p"},'method="POST"'),") to ",(0,d.mdx)("inlineCode",{parentName:"p"},"http://example.com/wishlist/index/add/")," (",(0,d.mdx)("inlineCode",{parentName:"p"},'url="wishlist/index/add/"'),") as a customer (",(0,d.mdx)("inlineCode",{parentName:"p"},'auth="customerFormKey"'),").\nThe request contains HTML form data encoded in the ",(0,d.mdx)("a",{parentName:"p",href:"https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1"},"application/x-www-form-urlencoded")," content type (",(0,d.mdx)("inlineCode",{parentName:"p"},"<contentType>application/x-www-form-urlencoded</contentType>"),").\nIf the returned HTML code contains a string that matches the regular expression ",(0,d.mdx)("inlineCode",{parentName:"p"},"~\\/wishlist_id\\/(\\d*?)\\/~"),", it returns the matching value."),(0,d.mdx)("p",null,"The operation assigns three form fields:"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"product")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"customer_email")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"customer_password"))),(0,d.mdx)("h2",{id:"reference"},"Reference"),(0,d.mdx)("h3",{id:"operations"},"operations"),(0,d.mdx)("p",null,"Root element that points to the corresponding XML Schema."),(0,d.mdx)("h3",{id:"operation"},"operation"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Attribute"),(0,d.mdx)("th",{parentName:"tr",align:null},"Type"),(0,d.mdx)("th",{parentName:"tr",align:null},"Use"),(0,d.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"name")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null},"Name of the operation.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"dataType")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"required"),(0,d.mdx)("td",{parentName:"tr",align:null},"Data type of the operation. It refers to a ",(0,d.mdx)("inlineCode",{parentName:"td"},"type")," attribute of data entity that will be used as a source of input data.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"type")),(0,d.mdx)("td",{parentName:"tr",align:null},"Possible values: ",(0,d.mdx)("inlineCode",{parentName:"td"},"create"),", ",(0,d.mdx)("inlineCode",{parentName:"td"},"delete"),", ",(0,d.mdx)("inlineCode",{parentName:"td"},"update"),", ",(0,d.mdx)("inlineCode",{parentName:"td"},"get"),"."),(0,d.mdx)("td",{parentName:"tr",align:null},"required"),(0,d.mdx)("td",{parentName:"tr",align:null},"Type of operation.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"*",(0,d.mdx)("inlineCode",{parentName:"td"},"url")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null},"A routing URL of the operation. Example value: ",(0,d.mdx)("inlineCode",{parentName:"td"},'"/V1/categories"'),".")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},"*","*",(0,d.mdx)("inlineCode",{parentName:"td"},"auth")),(0,d.mdx)("td",{parentName:"tr",align:null},"Possible values: ",(0,d.mdx)("inlineCode",{parentName:"td"},"adminOath"),", ",(0,d.mdx)("inlineCode",{parentName:"td"},"adminFormKey"),", ",(0,d.mdx)("inlineCode",{parentName:"td"},"customerFormKey"),", ",(0,d.mdx)("inlineCode",{parentName:"td"},"anonymous")),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null},"Type of authorization of the operation.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"method")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null},"HTTP method of the operation. Possible values: ",(0,d.mdx)("inlineCode",{parentName:"td"},"POST"),", ",(0,d.mdx)("inlineCode",{parentName:"td"},"DELETE"),", ",(0,d.mdx)("inlineCode",{parentName:"td"},"PUT"),", ",(0,d.mdx)("inlineCode",{parentName:"td"},"GET"),".")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"successRegex")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null},"Determines if the operation was successful. Parses the HTML body in response and asserts if the value assigned to the ",(0,d.mdx)("inlineCode",{parentName:"td"},"successRegex")," exists.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"returnRegex")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null},"Determines if the response contains the matching value to return.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"returnIndex")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null},"Specifies index at which the value will be returned when ",(0,d.mdx)("inlineCode",{parentName:"td"},"returnRegex")," matches multiple values")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"removeBackend")),(0,d.mdx)("td",{parentName:"tr",align:null},"boolean"),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null},"Removes backend name from requested URL. Applicable when ",(0,d.mdx)("inlineCode",{parentName:"td"},'auth="adminFormKey"'),".")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"filename")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null})),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"deprecated")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null},"Used to warn about the future deprecation of the test. String will appear in Allure reports and console output at runtime.")))),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("p",{parentName:"li"},"*",(0,d.mdx)("inlineCode",{parentName:"p"},"url")," - full URL is a concatenation of ",(0,d.mdx)("em",{parentName:"p"},"ENV.baseUrl")," + ",(0,d.mdx)("inlineCode",{parentName:"p"},"/rest/")," + ",(0,d.mdx)("em",{parentName:"p"},"url"),".\nTo reuse data of a required entity or returned response use a field key wrapped in curly braces such as ",(0,d.mdx)("inlineCode",{parentName:"p"},"{sku}"),".\nWhen the data to reuse is of a different type, declare also the type of data such as ",(0,d.mdx)("inlineCode",{parentName:"p"},"{product.sku}"),".\nExample: ",(0,d.mdx)("inlineCode",{parentName:"p"},'"/V1/products/{product.sku}/media/{id}"'),".")),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("p",{parentName:"li"},"*","*",(0,d.mdx)("inlineCode",{parentName:"p"},"auth")," - available values:"),(0,d.mdx)("ul",{parentName:"li"},(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"adminOath")," is used for REST API persistence in the Admin area with ",(0,d.mdx)("a",{parentName:"li",href:"https://devdocs.magento.com/guides/v2.4/get-started/authentication/gs-authentication-oauth.html"},"OAuth-based authentication"),"."),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"adminFormKey")," is used for HTML form persistence in the Admin area."),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"customerFormKey")," is used for HTML form persistence in the Customer area."),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"anonymous")," is used for REST API persistence without authorization.")))),(0,d.mdx)("h3",{id:"contenttype"},"contentType"),(0,d.mdx)("p",null,"Sets one of the following operation types:"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"application/json")," is used for REST API operations."),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"application/x-www-form-urlencoded")," is used for HTML form operations.")),(0,d.mdx)("h3",{id:"object"},"object"),(0,d.mdx)("p",null,"Representation of a complex entity that may contain fields, arrays, and objects.\nAn object must match the ",(0,d.mdx)("a",{parentName:"p",href:"data.md#entity"},"entity")," of the same ",(0,d.mdx)("inlineCode",{parentName:"p"},"type"),"."),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Attribute"),(0,d.mdx)("th",{parentName:"tr",align:null},"Type"),(0,d.mdx)("th",{parentName:"tr",align:null},"Use"),(0,d.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"key")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null},"Name of the object.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"dataType")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"required"),(0,d.mdx)("td",{parentName:"tr",align:null},"Type of the related ",(0,d.mdx)("a",{parentName:"td",href:"data.md#entity"},"entity"),".")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"required")),(0,d.mdx)("td",{parentName:"tr",align:null},"boolean"),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null},"Determines if the object is required or not. It must match the REST API specification.")))),(0,d.mdx)("h3",{id:"field"},"field"),(0,d.mdx)("p",null,"Representation of HTML form or REST API fields."),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Attribute"),(0,d.mdx)("th",{parentName:"tr",align:null},"Type"),(0,d.mdx)("th",{parentName:"tr",align:null},"Use"),(0,d.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"key")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"required"),(0,d.mdx)("td",{parentName:"tr",align:null},"Name of the field. It must match the field name of the related ",(0,d.mdx)("a",{parentName:"td",href:"data.md#entity"},"entity"),".")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"type")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null},"Type of the value. It may contain a primitive type or the type of another operation.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"required")),(0,d.mdx)("td",{parentName:"tr",align:null},"boolean"),(0,d.mdx)("td",{parentName:"tr",align:null},"optional"),(0,d.mdx)("td",{parentName:"tr",align:null},"Determines if the field is required or not. It must match the REST API specification.")))),(0,d.mdx)("h3",{id:"array"},"array"),(0,d.mdx)("p",null,"Representation of an array."),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Attribute"),(0,d.mdx)("th",{parentName:"tr",align:null},"Type"),(0,d.mdx)("th",{parentName:"tr",align:null},"Use"),(0,d.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"key")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"required"),(0,d.mdx)("td",{parentName:"tr",align:null},"Name of the array.")))),(0,d.mdx)("p",null,"It contains one or more ",(0,d.mdx)("inlineCode",{parentName:"p"},"value")," elements."),(0,d.mdx)("h3",{id:"value"},"value"),(0,d.mdx)("p",null,"Declares a data type for items within ",(0,d.mdx)("inlineCode",{parentName:"p"},"<array>"),"."),(0,d.mdx)("h4",{id:"example-of-an-array-with-value-of-a-primitive-data-type"},"Example of an array with value of a primitive data type"),(0,d.mdx)("p",null,"Metadata declaration of the operation schema:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<array key="tax_rate_ids">\n    <value>integer</value>\n</array>\n')),(0,d.mdx)("p",null,"The value can contain one or more items."),(0,d.mdx)("p",null,"Data entity with the corresponding assignment:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<array key="tax_rate_ids">\n    <item>1</item>\n    <item>2</item>\n</array>\n')),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},"Resulted JSON request:")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'"tax_rate_ids":\n    [\n        "item": 1,\n        "item": 2\n    ]\n')),(0,d.mdx)("h4",{id:"example-of-an-array-containing-data-entities"},"Example of an array containing data entities"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<array key="product_options">\n    <value>product_option</value>\n</array>\n')),(0,d.mdx)("p",null,"The value declares the ",(0,d.mdx)("inlineCode",{parentName:"p"},"product_options")," array that contains one or more entities of the ",(0,d.mdx)("inlineCode",{parentName:"p"},"product_option")," data type."),(0,d.mdx)("h4",{id:"example-of-an-array-containing-a-particular-data-field"},"Example of an array containing a particular data field"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<array key="tax_rate_ids">\n    <value>tax_rate.id</value>\n</array>\n')),(0,d.mdx)("p",null,"The value declares the ",(0,d.mdx)("inlineCode",{parentName:"p"},"tax_rate_ids")," array that contains one or more ",(0,d.mdx)("inlineCode",{parentName:"p"},"id")," fields of the ",(0,d.mdx)("inlineCode",{parentName:"p"},"tax_rate")," data type entity."),(0,d.mdx)("h3",{id:"header"},"header"),(0,d.mdx)("p",null,"An additional parameter in REST API request."),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Attribute"),(0,d.mdx)("th",{parentName:"tr",align:null},"Type"),(0,d.mdx)("th",{parentName:"tr",align:null},"Use"),(0,d.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"param")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"required"),(0,d.mdx)("td",{parentName:"tr",align:null},"A REST API header parameter.")))),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<header param="status">available</header>\n')),(0,d.mdx)("h3",{id:"param"},"param"),(0,d.mdx)("p",null,"An additional parameter in URL."),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Attribute"),(0,d.mdx)("th",{parentName:"tr",align:null},"Type"),(0,d.mdx)("th",{parentName:"tr",align:null},"Use"),(0,d.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"key")),(0,d.mdx)("td",{parentName:"tr",align:null},"string"),(0,d.mdx)("td",{parentName:"tr",align:null},"required"),(0,d.mdx)("td",{parentName:"tr",align:null},"Name of the URL parameter.")))),(0,d.mdx)("p",null,"Example:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-xml"},'<param key="status">someValue</param>\n')))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-functional-testing-framework-metadata-md-29f2b374c80a503ceed4.js.map