{"version":3,"file":"component---src-pages-functional-testing-framework-commands-codeception-md-e3f8458698f1d510330a.js","mappings":"8MAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,kCADR,sCAGA,SAACT,EAAD,CAAaU,QAAQ,UAAUC,MAAM,eAAeF,QAAQ,iBAC5D,8MAC0D,cAAGG,WAAW,IACpE,KAAQ,WAD8C,aAD1D,MAIA,+GAAgG,uBAAYA,WAAW,KAAvB,kBAAhG,MACA,eACE,GAAM,kBADR,mBAGA,mDACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,kFAIL,gDAAiC,uBAAYA,WAAW,KAAvB,yBAAjC,KAAuG,cAAGA,WAAW,IACjH,KAAQ,0BAD2F,cAAvG,MAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,qGAIL,6CAA8B,uBAAYA,WAAW,KAAvB,4BAA9B,KAAuG,cAAGA,WAAW,IACjH,KAAQ,0BAD2F,cAAvG,iBAEwC,uBAAYA,WAAW,KAAvB,yBAFxC,MAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,oHAIL,eACE,GAAM,iBACL,uBAAYA,WAAW,MAAvB,kBACH,mBAAG,uBAAYA,WAAW,KAAvB,gBAAH,2BACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,+BAIL,SAACZ,EAAD,CAAaU,QAAQ,OAAOC,MAAM,OAAOF,QAAQ,iBACjD,oFACA,qBAAK,iBAAMG,WAAW,MAClB,UAAa,iBADZ,qhHAqDR,CAEDL,EAAWM,gBAAiB,C","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/commands/codeception.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"cli-commands-vendorbincodecept\"\n    }}>{`CLI commands: vendor/bin/codecept`}</h1>\n    <InlineAlert variant=\"warning\" slots=\"text1, text2\" mdxType=\"InlineAlert\" />\n    <p>{`We do not recommend using Codeception commands directly as they can break the Functional Testing Framework basic workflow.\nAll the Codeception commands you need are wrapped using the `}<a parentName=\"p\" {...{\n        \"href\": \"mftf.md\"\n      }}>{`mftf tool`}</a>{`.`}</p>\n    <p>{`To run the Codeception testing framework commands directly, change your directory to the `}<inlineCode parentName=\"p\">{`<Magento root>`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"usage-examples\"\n    }}>{`Usage examples`}</h2>\n    <p>{`Run all the generated tests:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vendor/bin/codecept run functional -c dev/tests/acceptance/codeception.yml\n`}</code></pre>\n    <p>{`Run all tests without the `}<inlineCode parentName=\"p\">{`<group value=\"skip\"/>`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"../test/annotations.md\"\n      }}>{`annotation`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vendor/bin/codecept run functional --skip-group skip  -c dev/tests/acceptance/codeception.yml\n`}</code></pre>\n    <p>{`Run all tests with the `}<inlineCode parentName=\"p\">{`<group value=\"example\"/>`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"../test/annotations.md\"\n      }}>{`annotation`}</a>{` but with no `}<inlineCode parentName=\"p\">{`<group value=\"skip\"/>`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vendor/bin/codecept run functional --group example --skip-group skip -c dev/tests/acceptance/codeception.yml\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"codecept-run\"\n    }}><inlineCode parentName=\"h2\">{`codecept run`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`codecept run`}</inlineCode>{` runs the test suites:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vendor/bin/codecept run\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The following documentation corresponds to Codeception 4.1.4.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`Full reference:\n\nArguments:\n   suite                 suite to be tested\n   test                  test to be run\n\nOptions:\n    -o, --override=OVERRIDE                    Override config values (multiple values allowed)\n    -e, --ext=EXT                              Run with extension enabled (multiple values allowed)\n        --report                               Show output in compact style\n        --html[=HTML]                          Generate html with results [default: \"report.html\"]\n        --xml[=XML]                            Generate JUnit XML Log [default: \"report.xml\"]\n        --phpunit-xml[=PHPUNIT-XML]            Generate PhpUnit XML Log [default: \"phpunit-report.xml\"]\n        --tap[=TAP]                            Generate Tap Log [default: \"report.tap.log\"]\n        --json[=JSON]                          Generate Json Log [default: \"report.json\"]\n        --colors                               Use colors in output\n        --no-colors                            Force no colors in output (useful to override config file)\n        --silent                               Only outputs suite names and final results\n        --steps                                Show steps in output\n    -d, --debug                                Show debug and scenario output\n        --bootstrap[=BOOTSTRAP]                Execute custom PHP script before running tests. Path can be absolute or relative to current working directory [default: false]\n        --no-redirect                          Do not redirect to Composer-installed version in vendor/codeception\n        --coverage[=COVERAGE]                  Run with code coverage\n        --coverage-html[=COVERAGE-HTML]        Generate CodeCoverage HTML report in path\n        --coverage-xml[=COVERAGE-XML]          Generate CodeCoverage XML report in file\n        --coverage-text[=COVERAGE-TEXT]        Generate CodeCoverage text report in file\n        --coverage-crap4j[=COVERAGE-CRAP4J]    Generate CodeCoverage report in Crap4J XML format\n        --coverage-phpunit[=COVERAGE-PHPUNIT]  Generate CodeCoverage PHPUnit report in path\n        --no-exit                              Don't finish with exit code\n    -g, --group=GROUP                          Groups of tests to be executed (multiple values allowed)\n    -s, --skip=SKIP                            Skip selected suites (multiple values allowed)\n    -x, --skip-group=SKIP-GROUP                Skip selected groups (multiple values allowed)\n        --env=ENV                              Run tests in selected environments. (multiple values allowed)\n    -f, --fail-fast                            Stop after first failure\n        --no-rebuild                           Do not rebuild actor classes on start\n        --seed=SEED                            Define random seed for shuffle setting\n        --no-artifacts                         Don't report about artifacts\n    -h, --help                                 Display this help message\n    -q, --quiet                                Do not output any message\n    -V, --version                              Display this application version\n        --ansi                                 Force ANSI output\n        --no-ansi                              Disable ANSI output\n    -n, --no-interaction                       Do not ask any interactive question\n    -c, --config[=CONFIG]                      Use custom path for config\n    -v|vv|vvv, --verbose                       Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug\n`}</code></pre>\n    {\n      /* Link definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}