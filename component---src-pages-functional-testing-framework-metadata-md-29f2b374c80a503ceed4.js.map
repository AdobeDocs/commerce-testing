{"version":3,"file":"component---src-pages-functional-testing-framework-metadata-md-29f2b374c80a503ceed4.js","mappings":"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","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/metadata.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"metadata\"\n    }}>{`Metadata`}</h1>\n    <p>{`In this topic we talk about handling entities that you need in your tests (such as categories, products, wish lists, and similar) using MFTF.\nUsing data handling actions like `}{`[`}<inlineCode parentName=\"p\">{`createData`}</inlineCode>{`]`}{`, `}{`[`}<inlineCode parentName=\"p\">{`deleteData`}</inlineCode>{`]`}{`, `}{`[`}<inlineCode parentName=\"p\">{`updateData`}</inlineCode>{`]`}{`, and `}{`[`}<inlineCode parentName=\"p\">{`getData`}</inlineCode>{`]`}{`, you are able to create, delete, update, and read entities for your tests.\nThe framework enables you to send HTTP requests with these statically defined data entities:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#sending-a-rest-api-request\"\n        }}>{`Sending a REST API request`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#handling-a-rest-api-response\"\n        }}>{`Handling a REST API response`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#handling-entities-using-html-forms\"\n        }}>{`Sending an HTML form encoded in URL`}</a></li>\n    </ul>\n    <p>{`You have probably noticed that some modules in acceptance functional tests contain a directory, which is called `}<inlineCode parentName=\"p\">{`Metadata`}</inlineCode>{`.`}</p>\n    <p>{`Example of a module with `}<em parentName=\"p\">{`Metadata`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tree\"\n      }}>{`Wishlist\n├── Data\n├── Metadata\n├── Page\n├── Section\n└── Test\n`}</code></pre>\n    <p>{`This directory contains XML files with metadata required to create a valid request to handle an entity defined in `}<inlineCode parentName=\"p\">{`dataType`}</inlineCode>{`.\nA metadata file contains a list of operations with different types (defined in `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`).\nEach `}<a parentName=\"p\" {...{\n        \"href\": \"#operation\"\n      }}>{`operation`}</a>{` includes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The set of adjustments for processing a request in `}<a parentName=\"li\" {...{\n          \"href\": \"#operations\"\n        }}>{`attributes`}</a>{`, and in some cases, a response  (see `}<inlineCode parentName=\"li\">{`successRegex`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`returnRegex`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`returnIndex`}</inlineCode>{` in `}<a parentName=\"li\" {...{\n          \"href\": \"#operations\"\n        }}>{`reference details`}</a>{`).`}</li>\n      <li parentName=\"ul\">{`The type of body content encoding in `}<a parentName=\"li\" {...{\n          \"href\": \"#contenttype\"\n        }}>{`contentType`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`The body of the request represented as a tree of objects, arrays, and fields.`}</li>\n    </ul>\n    <p>{`When a test step requires handling the specified data entity, the Functional Testing Framework performs the following steps:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Reads input data (`}<inlineCode parentName=\"li\">{`<data/>`}</inlineCode>{`) and the type (the `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{` attribute) of the specified `}<a parentName=\"li\" {...{\n          \"href\": \"data.md#entity\"\n        }}>{`entity`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Searches the metadata operation for the `}<inlineCode parentName=\"li\">{`dataType`}</inlineCode>{` that matches the entity's `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{`. For example, `}<inlineCode parentName=\"li\">{`<entity type=\"product\">`}</inlineCode>{` matches `}<inlineCode parentName=\"li\">{`<operation dataType=\"product\"`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Forms a request of the operation and the input data of the entity according to matching metadata.`}</li>\n      <li parentName=\"ul\">{`Stores a response and provides access to its data using the Functional Testing Framework variables syntax in XML.`}</li>\n    </ul>\n    <p>{`The following diagram demonstrates the XML structure of a metadata file:\n`}<img parentName=\"p\" {...{\n        \"src\": \"/commerce-testing/assets/6078ae67e5f2e1b7dbbc63bad03888ba/metadata-dia.svg\",\n        \"alt\": \"Structure of metadata\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"format\"\n    }}>{`Format`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<operations xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:DataGenerator/etc/dataOperation.xsd\">\n    <operation name=\"\"\n               dataType=\"\"\n               type=\"\"\n               auth=\"\"\n               url=\"\"\n               method=\"\">\n        <contentType></contentType>\n        <object key=\"\" dataType=\"\">\n            <field key=\"\">integer</field>\n            <field key=\"\">string</field>\n            <field key=\"\">boolean</field>\n            <array key=\"\">\n                <value>string</value>\n            </array>\n        </object>\n    </operation>\n</operations>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`A `}<inlineCode parentName=\"li\">{`dataType`}</inlineCode>{` value must match the `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{` value of the corresponding entity.`}</li>\n      <li parentName=\"ol\">{`A file name should be PascalCase and end with `}<inlineCode parentName=\"li\">{`Meta.xml`}</inlineCode>{`.\nExample: `}<inlineCode parentName=\"li\">{`ProductAttributeMeta.xml`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`A metadata file may contain different types of operations (`}<inlineCode parentName=\"li\">{`type`}</inlineCode>{`) with the same data entity (`}<inlineCode parentName=\"li\">{`dataType`}</inlineCode>{`).`}</li>\n    </ol>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<operations>\n    <operation type=\"create\" dataType=\"category\">\n        ...\n    </operation>\n    <operation type=\"update\" dataType=\"category\">\n        ...\n    </operation>\n    <operation type=\"delete\" dataType=\"category\">\n        ...\n    </operation>\n    <operation type=\"get\" dataType=\"category\">\n        ...\n    </operation>\n</operations>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"handling-entities-using-rest-api\"\n    }}>{`Handling entities using REST API`}</h2>\n    <h3 {...{\n      \"id\": \"sending-a-rest-api-request\"\n    }}>{`Sending a REST API request`}</h3>\n    <p>{`The Functional Testing Framework allows you to handle basic CRUD operations with an object using `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/get-started/bk-get-started-api.html\"\n      }}>{`REST API`}</a>{` requests.\nTo convert a request to the Functional Testing Framework format, wrap the corresponding REST API request into XML tags according to the `}<a parentName=\"p\" {...{\n        \"href\": \"#reference\"\n      }}>{`Reference documentation`}</a>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`GET is used for retrieving data from objects.`}</li>\n      <li parentName=\"ul\">{`POST is used for creating new objects.`}</li>\n      <li parentName=\"ul\">{`PUT is used for updating objects.`}</li>\n      <li parentName=\"ul\">{`DELETE is used for deleting objects.`}</li>\n    </ul>\n    <p>{`This is an example of how to handle a category using REST API operations provided by the `}<inlineCode parentName=\"p\">{`catalogCategoryRepositoryV1`}</inlineCode>{` service.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"979px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"21.25%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/5530d/catalogCategoryRepository-operations.webp 320w\", \"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/0c8fb/catalogCategoryRepository-operations.webp 640w\", \"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/8a413/catalogCategoryRepository-operations.webp 979w\"],\n            \"sizes\": \"(max-width: 979px) 100vw, 979px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/dd4a7/catalogCategoryRepository-operations.png 320w\", \"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/0f09e/catalogCategoryRepository-operations.png 640w\", \"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/1d5a8/catalogCategoryRepository-operations.png 979w\"],\n            \"sizes\": \"(max-width: 979px) 100vw, 979px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-testing/static/5d575cd0de140a42c52dc976a0c3b0ab/1d5a8/catalogCategoryRepository-operations.png\",\n            \"alt\": \"REST API operations provided by catalogCategoryRepositoryV1\",\n            \"title\": \"REST API operations provided by catalogCategoryRepositoryV1\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`The above screenshot from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/get-started/bk-get-started-api.html\"\n      }}>{`REST API Reference`}</a>{` demonstrates a list of available operations to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Delete a category by its identifier (`}<inlineCode parentName=\"li\">{`method=\"DELETE\"`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\">{`Get information about a category by its ID (`}<inlineCode parentName=\"li\">{`method=\"GET\"`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#create-an-object-in-admin\"\n        }}>{`Create a new category`}</a>{` (`}<inlineCode parentName=\"li\">{`method=\"POST\"`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\">{`Update category data by its ID (`}<inlineCode parentName=\"li\">{`method=\"PUT\"`}</inlineCode>{`)`}</li>\n    </ul>\n    <p>{`We assume that our `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file sets `}<inlineCode parentName=\"p\">{`MAGENTO_BASE_URL=https://example.com/`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`MAGENTO_BACKEND_NAME=admin`}</inlineCode>{`.`}</p>\n    <h4 {...{\n      \"id\": \"create-a-simple-category\"\n    }}>{`Create a simple category`}</h4>\n    <p>{`Let's see what happens when you create a category:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<createData entity=\"_defaultCategory\" stepKey=\"createPreReqCategory\"/>\n`}</code></pre>\n    <p>{`The Functional Testing Framework searches in the `}<em parentName=\"p\">{`Data`}</em>{` directory an entity with `}<inlineCode parentName=\"p\">{`<entity name=\"_defaultCategory\">`}</inlineCode>{` and reads `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` of the entity.\nIf there are more than one entity with the same name, all of the entities are merged.`}</p>\n    <p><em parentName=\"p\">{`Catalog/Data/CategoryData.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"_defaultCategory\" type=\"category\">\n    <data key=\"name\" unique=\"suffix\">simpleCategory</data>\n    <data key=\"name_lwr\" unique=\"suffix\">simplecategory</data>\n    <data key=\"is_active\">true</data>\n</entity>\n`}</code></pre>\n    <p>{`Here, `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` is equal to `}<inlineCode parentName=\"p\">{`\"category\"`}</inlineCode>{`, which instructs the Functional Testing Framework to search an operation with `}<inlineCode parentName=\"p\">{`dataType=\"category\"`}</inlineCode>{`.\nSince the action is `}<strong parentName=\"p\">{`to create`}</strong>{` a category, the Functional Testing Framework will also search for operation with `}<inlineCode parentName=\"p\">{`type=\"create\"`}</inlineCode>{` in `}<em parentName=\"p\">{`Metadata`}</em>{` for `}<inlineCode parentName=\"p\">{`dataType=\"category\"`}</inlineCode>{`.`}</p>\n    <p><em parentName=\"p\">{`Catalog/Metadata/CategoryMeta.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<operation name=\"CreateCategory\" dataType=\"category\" type=\"create\" auth=\"adminOauth\" url=\"/V1/categories\" method=\"POST\">\n    <contentType>application/json</contentType>\n    <object key=\"category\" dataType=\"category\">\n        <field key=\"parent_id\">integer</field>\n        <field key=\"name\">string</field>\n        <field key=\"is_active\">boolean</field>\n        <field key=\"position\">integer</field>\n        <field key=\"level\">integer</field>\n        <field key=\"children\">string</field>\n        <field key=\"created_at\">string</field>\n        <field key=\"updated_at\">string</field>\n        <field key=\"path\">string</field>\n        <field key=\"include_in_menu\">boolean</field>\n        <array key=\"available_sort_by\">\n            <value>string</value>\n        </array>\n        <field key=\"extension_attributes\">empty_extension_attribute</field>\n        <array key=\"custom_attributes\">\n            <value>custom_attribute</value>\n        </array>\n    </object>\n</operation>\n`}</code></pre>\n    <p>{`(The corresponding operation is provided by `}<em parentName=\"p\">{`catalogCategoryRepositoryV1`}</em>{` in `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/get-started/bk-get-started-api.html\"\n      }}>{`REST API`}</a>{`.)`}</p>\n    <p>{`The following is encoded in `}<inlineCode parentName=\"p\">{`<operation>`}</inlineCode>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name=\"CreateCategory\"`}</inlineCode>{` defines a descriptive name of the operation, which is used for merging if needed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dataType=\"category\"`}</inlineCode>{` defines a relation with data entities with input data for a Category (`}<inlineCode parentName=\"li\">{`<entity type=\"category\">`}</inlineCode>{`).`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`auth=\"adminOauth\"`}</inlineCode>{` defines OAuth authorization, which is required for the Admin area.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`url=\"/V1/categories\"`}</inlineCode>{` defines a routing URL to the corresponding service class.\n(The request will be sent to `}<inlineCode parentName=\"li\">{`https://example.com/rest/V1/categories`}</inlineCode>{` if `}<inlineCode parentName=\"li\">{`MAGENTO_BASE_URL=https://example.com/`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`MAGENTO_BACKEND_NAME=admin`}</inlineCode>{` are set in the `}<em parentName=\"li\">{`acceptance/.env`}</em>{` configuration file.)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`method=\"POST\"`}</inlineCode>{` defines a POST method of the HTTP request.`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`<contentType>application/json</contentType>`}</inlineCode>{` defines a content type of the REST API request, which is set as `}<inlineCode parentName=\"p\">{`application/json`}</inlineCode>{` here.`}</p>\n    <p>{`The parameter that declares a body of the request is `}<em parentName=\"p\">{`catalogCategoryRepositoryV1SavePostBody`}</em>{`.\nUsing the `}<a parentName=\"p\" {...{\n        \"href\": \"#reference\"\n      }}>{`Reference`}</a>{`, we can trace how the JSON request was converted into XML representation.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Comments in the example below are used to demonstrate relation between JSON request and Functional Testing Framework metadata in XML.\nJSON does not support comments.`}</p>\n    <p>{`Model schema for `}<em parentName=\"p\">{`catalogCategoryRepositoryV1SavePostBody`}</em>{` with XML representation of `}<em parentName=\"p\">{`Catalog/Metadata/CategoryMeta.xml`}</em>{` in comments:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{                                           // XML representation in the Functional Testing Framework metadata format (see 'Catalog/Metadata/CategoryMeta.xml')\n  \"category\": {                             // <object key=\"category\" dataType=\"category\">\n    \"id\": 0,                                // Skipped, because Category ID is not available on UI when you create a new category.\n    \"parent_id\": 0,                         // <field key=\"parent_id\">integer</field>\n    \"name\": \"string\",                       // <field key=\"name\">string</field>\n    \"is_active\": true,                      // <field key=\"is_active\">boolean</field>\n    \"position\": 0,                          // <field key=\"position\">integer</field>\n    \"level\": 0,                             // <field key=\"level\">integer</field>\n    \"children\": \"string\",                   // <field key=\"children\">string</field>\n    \"created_at\": \"string\",                 // <field key=\"created_at\">string</field>\n    \"updated_at\": \"string\",                 // <field key=\"updated_at\">string</field>\n    \"path\": \"string\",                       // <field key=\"path\">string</field>\n    \"available_sort_by\": [                  // <array key=\"available_sort_by\">\n      \"string\"                              // <value>string</value>\n    ],                                      // </array>\n    \"include_in_menu\": true,                // <field key=\"include_in_menu\">boolean</field>\n    \"extension_attributes\": {},             // <field key=\"extension_attributes\">empty_extension_attribute</field>, where 'empty_extension_attribute' is a reference to operation with 'dataType=\"empty_extension_attribute\"' (see 'Catalog/Metadata/EmptyExtensionAttributeMeta.xml')\n    \"custom_attributes\": [                  // <array key=\"custom_attributes\">\n      {                                     // <value>custom_attribute</value>, where 'custom_attribute' is a reference to operation with 'dataType=\"custom_attribute\"' (see 'Catalog/Metadata/CustomAttributeMeta.xml')\n        \"attribute_code\": \"string\",\n        \"value\": \"string\"\n      }\n    ]                                       // </array>\n  }                                         // </object>\n}\n`}</code></pre>\n    <p>{`So, the body of a REST API request that creates a simple category is the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{                                             // XML representation of input data used to create a simple category (\"Catalog/Data/CategoryData.xml\")\n  \"category\": {                               // <entity name=\"_defaultCategory\" type=\"category\">\n    \"name\": \"simpleCategory_0986576456\",      // <data key=\"name\" unique=\"suffix\">simpleCategory</data>\n    \"is_active\": true                         // <data key=\"is_active\">true</data>\n  }                                           // </entity>\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"create-an-object-as-a-guest\"\n    }}>{`Create an object as a guest`}</h4>\n    <p>{`The corresponding test step is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<createData entity=\"guestCart\" stepKey=\"createGuestCart\"/>\n`}</code></pre>\n    <p>{`The Functional Testing Framework searches in the `}<em parentName=\"p\">{`Data`}</em>{` directory an entity with `}<inlineCode parentName=\"p\">{`<entity name=\"GuestCart\">`}</inlineCode>{` and reads `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`.`}</p>\n    <p><em parentName=\"p\">{`Quote/Data/GuestCartData.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"GuestCart\" type=\"GuestCart\">\n</entity>\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`type=\"guestCart\"`}</inlineCode>{` points to the operation with `}<inlineCode parentName=\"p\">{`dataType=GuestCart\"`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`type=\"create\"`}</inlineCode>{` in the `}<em parentName=\"p\">{`Metadata`}</em>{` directory.`}</p>\n    <p><em parentName=\"p\">{`Catalog/Data/CategoryData.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<operation name=\"CreateGuestCart\" dataType=\"GuestCart\" type=\"create\" auth=\"anonymous\" url=\"/V1/guest-carts\" method=\"POST\">\n    <contentType>application/json</contentType>\n</operation>\n`}</code></pre>\n    <p>{`As a result, the Functional Testing Framework sends an unauthorized POST request with an empty body to the `}<inlineCode parentName=\"p\">{`https://example.com/rest/V1/guest-carts`}</inlineCode>{` and stores the single string response that the endpoint returns.`}</p>\n    <h3 {...{\n      \"id\": \"handling-a-rest-api-response\"\n    }}>{`Handling a REST API response`}</h3>\n    <p>{`There are cases when you need to reuse the data that Adobe Commerce or Magento Open source responded with to your POST request.`}</p>\n    <p>{`Let's see how to handle data after you created a category with custom attributes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<createData entity=\"customizedCategory\" stepKey=\"createPreReqCategory\"/>\n`}</code></pre>\n    <p>{`The Functional Testing Framework receives the corresponding JSON response and enables you to reference its data using a variable of format:`}</p>\n    <p><strong parentName=\"p\">{`$`}</strong>{` `}<em parentName=\"p\">{`stepKey`}</em>{` `}<strong parentName=\"p\">{`.`}</strong>{` `}<em parentName=\"p\">{`JsonKey`}</em>{` `}<strong parentName=\"p\">{`$`}</strong></p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`$createPreReqCategory.id$\n`}</code></pre>\n    <p>{`And for a custom attribute:`}</p>\n    <p><strong parentName=\"p\">{`$`}</strong>{` `}<em parentName=\"p\">{`stepKey`}</em>{`  `}<strong parentName=\"p\">{`.custom`}<em parentName=\"strong\">{`attributes[ _attribute key`}</em>{` ]`}</strong>{` `}<strong parentName=\"p\">{`$`}</strong></p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`$createPreReqCategory.custom_attributes[is_anchor]$\n`}</code></pre>\n    <p>{`The following example of response in JSON demonstrates how to reference data on the root level and as data in custom attributes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"id\": 7,                                          //$createPreReqCategory.id$\n    \"parent_id\": 2,                                   //$createPreReqCategory.parent_id$\n    \"name\": \"simpleCategory_0986576456\",              //$createPreReqCategory.is_active$\n    \"is_active\": true,\n    \"position\": 5,\n    \"level\": 2,\n    \"children\": \"\",\n    \"created_at\": \"2018-05-08 14:27:18\",\n    \"updated_at\": \"2018-05-08 14:27:18\",\n    \"path\": \"1/2/7\",\n    \"available_sort_by\": [],\n    \"include_in_menu\": true,\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"is_anchor\",\n            \"value\": \"1\"                              //$createPreReqCategory.custom_attributes[is_anchor]$\n        },\n        {\n            \"attribute_code\": \"path\",\n            \"value\": \"1/2/7\"                          //$createPreReqCategory.custom_attributes[path]$\n        },\n        {\n            \"attribute_code\": \"children_count\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"url_key\",\n            \"value\": \"simplecategory5af1b41cd58fb4\"   //$createPreReqCategory.custom_attributes[url_key]$\n        },\n        {\n            \"attribute_code\": \"url_path\",\n            \"value\": \"simplecategory5af1b41cd58fb4\"\n        }\n    ],\n}\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"handling-entities-using-html-forms\"\n    }}>{`Handling entities using HTML forms`}</h2>\n    <p>{`For cases when REST API is not applicable, you may use `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/html401/interact/forms.html\"\n      }}>{`HTML forms`}</a>{` (when all object parameters are encoded in a URL as `}<inlineCode parentName=\"p\">{`key=name`}</inlineCode>{` attributes).\nThere are two different attributes to split access to different areas:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`auth=\"adminFormKey\"`}</inlineCode>{` is used for objects in an Admin area.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`auth=\"customerFormKey\"`}</inlineCode>{` is used for objects in a storefront.`}</li>\n    </ul>\n    <p>{`You are able to create assurances with `}<inlineCode parentName=\"p\">{`successRegex`}</inlineCode>{`, and, optionally, return values with `}<inlineCode parentName=\"p\">{`returnRegex`}</inlineCode>{`. You can also use `}<inlineCode parentName=\"p\">{`returnIndex`}</inlineCode>{` when `}<inlineCode parentName=\"p\">{`returnRegex`}</inlineCode>{` matches multiple values.`}</p>\n    <h3 {...{\n      \"id\": \"create-an-object-in-admin\"\n    }}>{`Create an object in Admin`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`CreateStoreGroup`}</inlineCode>{` operation is used to persist a store group:`}</p>\n    <p>{`Source file is `}<em parentName=\"p\">{`Store/Metadata/StoreGroupMeta.xml`}</em>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<operation name=\"CreateStoreGroup\" dataType=\"group\" type=\"create\" auth=\"adminFormKey\" url=\"/admin/system_store/save\" method=\"POST\" successRegex=\"/messages-message-success/\" >\n    <contentType>application/x-www-form-urlencoded</contentType>\n    <object dataType=\"group\" key=\"group\">\n        <field key=\"group_id\">string</field>\n        <field key=\"name\">string</field>\n        <field key=\"code\">string</field>\n        <field key=\"root_category_id\">integer</field>\n        <field key=\"website_id\">integer</field>\n    </object>\n    <field key=\"store_action\">string</field>\n    <field key=\"store_type\">string</field>\n</operation>\n`}</code></pre>\n    <p>{`The operation is called when `}<inlineCode parentName=\"p\">{`<createData>`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`type=\"create\"`}</inlineCode>{`) points to a data entity of type `}<inlineCode parentName=\"p\">{`\"group\"`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`dataType=\"group\"`}</inlineCode>{`).\nIt sends a POST request (`}<inlineCode parentName=\"p\">{`method=\"POST\"`}</inlineCode>{`) to `}<inlineCode parentName=\"p\">{`http://example.com/admin/system_store/save`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`url=\"/admin/system_store/save\"`}</inlineCode>{`) that is authorized for the Admin area (`}<inlineCode parentName=\"p\">{`auth=\"adminFormKey\"`}</inlineCode>{`).\nThe request contains HTML form data encoded in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\"\n      }}>{`application/x-www-form-urlencoded`}</a>{` content type (`}<inlineCode parentName=\"p\">{`<contentType>application/x-www-form-urlencoded</contentType>`}</inlineCode>{`).\nIf the returned HTML code contains the `}<inlineCode parentName=\"p\">{`messages-message-success`}</inlineCode>{` string, it is resolved as successful.`}</p>\n    <p>{`The operation enables you to assign the following form fields:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`group/group_id`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`group/name`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`group/code`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`group/root_category_id`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`group/website_id`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`store_action`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`store_type`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"create-an-object-in-storefront\"\n    }}>{`Create an object in storefront`}</h3>\n    <p>{`The Functional Testing Framework uses the `}<inlineCode parentName=\"p\">{`CreateWishlist`}</inlineCode>{` operation to create a wish list on storefront:`}</p>\n    <p>{`Source file is `}<em parentName=\"p\">{`Wishlist/Metadata/WishlistMeta.xml`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<operation name=\"CreateWishlist\" dataType=\"wishlist\" type=\"create\" auth=\"customerFormKey\" url=\"/wishlist/index/add/\" method=\"POST\" successRegex=\"\" returnRegex=\"~\\\\/wishlist_id\\\\/(\\\\d*?)\\\\/~\" >\n    <contentType>application/x-www-form-urlencoded</contentType>\n    <field key=\"product\">integer</field>\n    <field key=\"customer_email\">string</field>\n    <field key=\"customer_password\">string</field>\n</operation>\n`}</code></pre>\n    <p>{`The operation is used when `}<inlineCode parentName=\"p\">{`<createData>`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`type=\"create\"`}</inlineCode>{`) points to a data entity of type `}<inlineCode parentName=\"p\">{`\"wishlist\"`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`dataType=\"wishlist\"`}</inlineCode>{`).\nIt sends a POST request (`}<inlineCode parentName=\"p\">{`method=\"POST\"`}</inlineCode>{`) to `}<inlineCode parentName=\"p\">{`http://example.com/wishlist/index/add/`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`url=\"wishlist/index/add/\"`}</inlineCode>{`) as a customer (`}<inlineCode parentName=\"p\">{`auth=\"customerFormKey\"`}</inlineCode>{`).\nThe request contains HTML form data encoded in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\"\n      }}>{`application/x-www-form-urlencoded`}</a>{` content type (`}<inlineCode parentName=\"p\">{`<contentType>application/x-www-form-urlencoded</contentType>`}</inlineCode>{`).\nIf the returned HTML code contains a string that matches the regular expression `}<inlineCode parentName=\"p\">{`~\\\\/wishlist_id\\\\/(\\\\d*?)\\\\/~`}</inlineCode>{`, it returns the matching value.`}</p>\n    <p>{`The operation assigns three form fields:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`product`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`customer_email`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`customer_password`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"reference\"\n    }}>{`Reference`}</h2>\n    <h3 {...{\n      \"id\": \"operations\"\n    }}>{`operations`}</h3>\n    <p>{`Root element that points to the corresponding XML Schema.`}</p>\n    <h3 {...{\n      \"id\": \"operation\"\n    }}>{`operation`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the operation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`dataType`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Data type of the operation. It refers to a `}<inlineCode parentName=\"td\">{`type`}</inlineCode>{` attribute of data entity that will be used as a source of input data.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Possible values: `}<inlineCode parentName=\"td\">{`create`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`delete`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`update`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`get`}</inlineCode>{`.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type of operation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`*`}<inlineCode parentName=\"td\">{`url`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A routing URL of the operation. Example value: `}<inlineCode parentName=\"td\">{`\"/V1/categories\"`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`*`}{`*`}<inlineCode parentName=\"td\">{`auth`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Possible values: `}<inlineCode parentName=\"td\">{`adminOath`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`adminFormKey`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`customerFormKey`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`anonymous`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type of authorization of the operation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`method`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`HTTP method of the operation. Possible values: `}<inlineCode parentName=\"td\">{`POST`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`DELETE`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`PUT`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`GET`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`successRegex`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Determines if the operation was successful. Parses the HTML body in response and asserts if the value assigned to the `}<inlineCode parentName=\"td\">{`successRegex`}</inlineCode>{` exists.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`returnRegex`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Determines if the response contains the matching value to return.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`returnIndex`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Specifies index at which the value will be returned when `}<inlineCode parentName=\"td\">{`returnRegex`}</inlineCode>{` matches multiple values`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`removeBackend`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Removes backend name from requested URL. Applicable when `}<inlineCode parentName=\"td\">{`auth=\"adminFormKey\"`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`filename`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`deprecated`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Used to warn about the future deprecation of the test. String will appear in Allure reports and console output at runtime.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`*`}<inlineCode parentName=\"p\">{`url`}</inlineCode>{` - full URL is a concatenation of `}<em parentName=\"p\">{`ENV.baseUrl`}</em>{` + `}<inlineCode parentName=\"p\">{`/rest/`}</inlineCode>{` + `}<em parentName=\"p\">{`url`}</em>{`.\nTo reuse data of a required entity or returned response use a field key wrapped in curly braces such as `}<inlineCode parentName=\"p\">{`{sku}`}</inlineCode>{`.\nWhen the data to reuse is of a different type, declare also the type of data such as `}<inlineCode parentName=\"p\">{`{product.sku}`}</inlineCode>{`.\nExample: `}<inlineCode parentName=\"p\">{`\"/V1/products/{product.sku}/media/{id}\"`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`*`}{`*`}<inlineCode parentName=\"p\">{`auth`}</inlineCode>{` - available values:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`adminOath`}</inlineCode>{` is used for REST API persistence in the Admin area with `}<a parentName=\"li\" {...{\n              \"href\": \"https://devdocs.magento.com/guides/v2.4/get-started/authentication/gs-authentication-oauth.html\"\n            }}>{`OAuth-based authentication`}</a>{`.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`adminFormKey`}</inlineCode>{` is used for HTML form persistence in the Admin area.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`customerFormKey`}</inlineCode>{` is used for HTML form persistence in the Customer area.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`anonymous`}</inlineCode>{` is used for REST API persistence without authorization.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"contenttype\"\n    }}>{`contentType`}</h3>\n    <p>{`Sets one of the following operation types:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`application/json`}</inlineCode>{` is used for REST API operations.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`application/x-www-form-urlencoded`}</inlineCode>{` is used for HTML form operations.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"object\"\n    }}>{`object`}</h3>\n    <p>{`Representation of a complex entity that may contain fields, arrays, and objects.\nAn object must match the `}<a parentName=\"p\" {...{\n        \"href\": \"data.md#entity\"\n      }}>{`entity`}</a>{` of the same `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the object.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`dataType`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type of the related `}<a parentName=\"td\" {...{\n              \"href\": \"data.md#entity\"\n            }}>{`entity`}</a>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`required`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Determines if the object is required or not. It must match the REST API specification.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"field\"\n    }}>{`field`}</h3>\n    <p>{`Representation of HTML form or REST API fields.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the field. It must match the field name of the related `}<a parentName=\"td\" {...{\n              \"href\": \"data.md#entity\"\n            }}>{`entity`}</a>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type of the value. It may contain a primitive type or the type of another operation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`required`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Determines if the field is required or not. It must match the REST API specification.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"array\"\n    }}>{`array`}</h3>\n    <p>{`Representation of an array.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the array.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`It contains one or more `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` elements.`}</p>\n    <h3 {...{\n      \"id\": \"value\"\n    }}>{`value`}</h3>\n    <p>{`Declares a data type for items within `}<inlineCode parentName=\"p\">{`<array>`}</inlineCode>{`.`}</p>\n    <h4 {...{\n      \"id\": \"example-of-an-array-with-value-of-a-primitive-data-type\"\n    }}>{`Example of an array with value of a primitive data type`}</h4>\n    <p>{`Metadata declaration of the operation schema:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<array key=\"tax_rate_ids\">\n    <value>integer</value>\n</array>\n`}</code></pre>\n    <p>{`The value can contain one or more items.`}</p>\n    <p>{`Data entity with the corresponding assignment:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<array key=\"tax_rate_ids\">\n    <item>1</item>\n    <item>2</item>\n</array>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Resulted JSON request:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"tax_rate_ids\":\n    [\n        \"item\": 1,\n        \"item\": 2\n    ]\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"example-of-an-array-containing-data-entities\"\n    }}>{`Example of an array containing data entities`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<array key=\"product_options\">\n    <value>product_option</value>\n</array>\n`}</code></pre>\n    <p>{`The value declares the `}<inlineCode parentName=\"p\">{`product_options`}</inlineCode>{` array that contains one or more entities of the `}<inlineCode parentName=\"p\">{`product_option`}</inlineCode>{` data type.`}</p>\n    <h4 {...{\n      \"id\": \"example-of-an-array-containing-a-particular-data-field\"\n    }}>{`Example of an array containing a particular data field`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<array key=\"tax_rate_ids\">\n    <value>tax_rate.id</value>\n</array>\n`}</code></pre>\n    <p>{`The value declares the `}<inlineCode parentName=\"p\">{`tax_rate_ids`}</inlineCode>{` array that contains one or more `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` fields of the `}<inlineCode parentName=\"p\">{`tax_rate`}</inlineCode>{` data type entity.`}</p>\n    <h3 {...{\n      \"id\": \"header\"\n    }}>{`header`}</h3>\n    <p>{`An additional parameter in REST API request.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`param`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A REST API header parameter.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<header param=\"status\">available</header>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"param\"\n    }}>{`param`}</h3>\n    <p>{`An additional parameter in URL.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the URL parameter.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<param key=\"status\">someValue</param>\n`}</code></pre>\n    {\n      /* LINK DEFINITIONS */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}