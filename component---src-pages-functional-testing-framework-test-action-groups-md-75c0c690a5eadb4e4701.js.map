{"version":3,"file":"component---src-pages-functional-testing-framework-test-action-groups-md-75c0c690a5eadb4e4701.js","mappings":"sRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,iBADR,kBAGA,6DAA8C,cAAGC,WAAW,IACxD,KAAQ,cADkC,WAA9C,0JAGA,gHACA,mBAAG,gBAAKA,WAAW,IACf,IAAO,kFACP,IAAO,+DAEX,eACE,GAAM,cADR,eAGA,qGACA,oBACE,eAAIA,WAAW,MAAf,kEAAsF,uBAAYA,WAAW,MAAvB,mCAAtF,gBACA,eAAIA,WAAW,MAAf,8BAAkD,uBAAYA,WAAW,MAAvB,eAAlD,wBAAkI,uBAAYA,WAAW,MAAvB,+BAAlI,MACA,eAAIA,WAAW,MAAf,yEACA,eAAIA,WAAW,MAAf,QAA4B,uBAAYA,WAAW,MAAvB,iBAA5B,gDAEF,6CAA8B,uBAAYA,WAAW,KAAvB,gBAA9B,qBACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,qcAeL,eACE,GAAM,WADR,YAGA,+JACA,0BAAW,eAAIA,WAAW,KAAf,qEAAX,KAA6G,uBAAYA,WAAW,KAAvB,iBAA7G,yCAA+M,eAAIA,WAAW,KAAf,mBAA/M,aACA,yBAAU,cAAGA,WAAW,IACpB,KAAQ,iBADF,QAAV,qCAEsD,uBAAYA,WAAW,KAAvB,iBAFtD,mCAEkJ,uBAAYA,WAAW,KAAvB,OAFlJ,wBAEyN,uBAAYA,WAAW,KAAvB,iCAFzN,MAGA,eACE,GAAM,sCADR,uCAGA,oCAAqB,uBAAYA,WAAW,KAAvB,iBAArB,kBACA,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,kCAAqD,uBAAYA,WAAW,KAAvB,iBAArD,MACA,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBADI,qSAYvB,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,uBAA0C,uBAAYA,WAAW,KAAvB,eAA1C,gBACA,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBADI,0TASvB,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,QAA2B,uBAAYA,WAAW,KAAvB,aAA3B,sKAEiC,uBAAYA,WAAW,KAAvB,iBAFjC,MAGA,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBADI,kEAKvB,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,0DACA,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBADI,soCAwBzB,eACE,GAAM,iCADR,kCAGA,yFACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,6TAML,qEAAsD,eAAIA,WAAW,KAAf,2BAAtD,KAA8G,uBAAYA,WAAW,KAAvB,iBAA9G,2BACA,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,kBAAqC,uBAAYA,WAAW,KAAvB,2BAArC,mBACA,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBADI,iFAKvB,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,2CAA8D,uBAAYA,WAAW,KAAvB,aAA9D,SAA4H,uBAAYA,WAAW,KAAvB,mBAA5H,MACA,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBADI,2JAQzB,eACE,GAAM,mBADR,oBAGA,qCAAsB,cAAGA,WAAW,IAChC,KAAQ,cACP,uBAAYA,WAAW,KAAvB,aAFL,uBAEoF,uBAAYA,WAAW,KAAvB,UAFpF,cAEoJ,uBAAYA,WAAW,KAAvB,QAFpJ,6FAIA,kFAAmE,uBAAYA,WAAW,KAAvB,kBAAnE,kCACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,ugBAYL,0BAAW,uBAAYA,WAAW,KAAvB,UAAX,2EAAwI,uBAAYA,WAAW,KAAvB,iBAAxI,uDACA,eACE,GAAM,wCADR,yCAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,qJAML,eACE,GAAM,8DADR,+DAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,6JAML,0BAAW,uBAAYA,WAAW,KAAvB,kBAAX,uCAA4G,cAAGA,WAAW,IACtH,KAAQ,gEADgG,WAA5G,YAEgC,uBAAYA,WAAW,KAAvB,2BAFhC,iBAGF,uBAAYA,WAAW,KAAvB,UAHE,+DAIY,uBAAYA,WAAW,KAAvB,iBAJZ,kEAIuI,uBAAYA,WAAW,KAAvB,0BAJvI,wBAKA,eACE,GAAM,6DADR,8DAGA,gFAAiE,uBAAYA,WAAW,KAAvB,YAAjE,gBACE,uBAAYA,WAAW,KAAvB,UADF,mFAEwC,uBAAYA,WAAW,KAAvB,6BAFxC,+BAE4I,uBAAYA,WAAW,KAAvB,YAF5I,QAEwM,uBAAYA,WAAW,KAAvB,aAFxM,gBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,0JAML,eACE,GAAM,kBADR,mBAGA,+DAAgD,uBAAYA,WAAW,KAAvB,UAAhD,UACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,yTAQL,oGAAqF,uBAAYA,WAAW,KAAvB,iBAArF,MACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,8QAQL,eACE,GAAM,gCADR,iCAGA,0FACA,oBACE,eAAIA,WAAW,MAAf,gDAAoE,uBAAYA,WAAW,MAAvB,UAApE,6CACA,eAAIA,WAAW,MAAf,8CAAkE,uBAAYA,WAAW,MAAvB,UAAlE,WACA,eAAIA,WAAW,MAAf,QAA4B,cAAGA,WAAW,KACtC,KAAQ,qCADgB,yBAA5B,MAEwC,uBAAYA,WAAW,MAAvB,UAFxC,0DAGA,eAAIA,WAAW,MAAf,mHAAuI,uBAAYA,WAAW,MAAvB,QAAvI,MAA8L,uBAAYA,WAAW,MAAvB,gBAA9L,QAEF,eACE,GAAM,sCADR,uCAGA,uGACA,6DACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,2uCAkBL,2IACA,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,sCACA,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBADI,uYASvB,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,8BACA,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBADI,+hBAYvB,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,kCACA,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBADI,4eAWzB,eACE,GAAM,sBADR,uBAGA,eACE,GAAM,gBADR,iBAGA,0BAAW,uBAAYA,WAAW,KAAvB,kBAAX,2EACA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,cAGA,eAAIA,WAAW,KACb,MAAS,MADX,UAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,eACH,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,iDACH,eAAIA,WAAW,KACb,MAAS,MADX,sEAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,mCACH,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,uDACH,eAAIA,WAAW,KACb,MAAS,MADX,kDAMN,iDAAkC,uBAAYA,WAAW,KAAvB,iBAAlC,MACA,eACE,GAAM,eADR,gBAGA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,cAGA,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,QAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,UACH,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,MADX,aAGA,eAAIA,WAAW,KACb,MAAS,MADX,qCAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,aACH,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,MADX,aAGA,eAAIA,WAAW,KACb,MAAS,MADX,4CAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,gBACH,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,MADX,aAGA,eAAIA,WAAW,KACb,MAAS,MADX,yIAMN,qCAAsB,uBAAYA,WAAW,KAAvB,eAAtB,MACA,eACE,GAAM,aADR,cAGA,0BAAW,uBAAYA,WAAW,KAAvB,eAAX,0CAA4G,uBAAYA,WAAW,KAAvB,cAA5G,eACA,eACE,GAAM,YADR,aAGA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,cAGA,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,MADX,QAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,UACH,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,MADX,aAGA,eAAIA,WAAW,KACb,MAAS,MADX,+EAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,kBACH,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,MADX,aAGA,eAAIA,WAAW,KACb,MAAS,MADX,oCAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,UACH,eAAIA,WAAW,KACb,MAAS,MADX,qBAEwB,uBAAYA,WAAW,MAAvB,UAFxB,MAEiF,uBAAYA,WAAW,MAAvB,UAFjF,gBAGA,eAAIA,WAAW,KACb,MAAS,MADX,aAGA,eAAIA,WAAW,KACb,MAAS,MADX,gDAEmD,uBAAYA,WAAW,MAAvB,UAFnD,QAWT,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/test/action-groups.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"action-groups\"\n    }}>{`Action groups`}</h1>\n    <p>{`In the MFTF, you can re-use a group of `}<a parentName=\"p\" {...{\n        \"href\": \"actions.md\"\n      }}>{`actions`}</a>{`, such as logging in as an administrator or a customer, declared in an XML file when you need to perform the same sequence of actions multiple times.`}</p>\n    <p>{`The following diagram shows the structure of a Functional Testing Framework action group:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/commerce-testing/assets/86907e7106fa8a7cf9adf33c93307f1d/action-groups-dia.svg\",\n        \"alt\": \"Structure of a Functional Testing Framework action group\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <p>{`The following conventions apply to Functional Testing Framework action groups:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`All action groups are declared in XML files and stored in the `}<inlineCode parentName=\"li\">{`<module>/Test/Mftf/ActionGroup/`}</inlineCode>{` directory.`}</li>\n      <li parentName=\"ul\">{`Every file name ends with `}<inlineCode parentName=\"li\">{`ActionGroup`}</inlineCode>{` suffix. For exampe `}<inlineCode parentName=\"li\">{`LoginAsAdminActionGroup.xml`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Action group name should be the same as file name without extension.`}</li>\n      <li parentName=\"ul\">{`One `}<inlineCode parentName=\"li\">{`<actionGroup>`}</inlineCode>{` tag is allowed per action group XML file.`}</li>\n    </ul>\n    <p>{`The XML format for the `}<inlineCode parentName=\"p\">{`actionGroups`}</inlineCode>{` declaration is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<actionGroups xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:Test/etc/actionGroupSchema.xsd\">\n    <actionGroup name=\"\">\n        <arguments>\n            <argument name=\"\"/>\n            <argument name=\"\" defaultValue=\"\"/>\n            <argument name=\"\" defaultValue=\"\" type=\"\"/>\n        </arguments>\n    </actionGroup>\n</actionGroups>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`These examples build a declaration for a group of actions that grant authorization to the Admin area, and use the declaration in a test.`}</p>\n    <p>{`The `}<em parentName=\"p\">{`Magento/Backend/Test/Mftf/ActionGroup/LoginAsAdminActionGroup.xml`}</em>{` `}<inlineCode parentName=\"p\">{`<actionGroup>`}</inlineCode>{` relates to the functionality of the `}<em parentName=\"p\">{`Magento_Backend`}</em>{` module.`}</p>\n    <p>{`In `}<a parentName=\"p\" {...{\n        \"href\": \"index.md#test\"\n      }}>{`test`}</a>{`, the name and identifier of the `}<inlineCode parentName=\"p\">{`<actionGroup>`}</inlineCode>{` is used as a reference in the `}<inlineCode parentName=\"p\">{`ref`}</inlineCode>{` parameter, such as `}<inlineCode parentName=\"p\">{`ref=\"LoginAsAdminActionGroup\"`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"create-an-action-group-declaration\"\n    }}>{`Create an action group declaration`}</h3>\n    <p>{`To create the `}<inlineCode parentName=\"p\">{`<actionGroup>`}</inlineCode>{` declaration:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Begin with a template for the `}<inlineCode parentName=\"p\">{`<actionGroup>`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<actionGroups xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:Test/etc/actionGroupSchema.xsd\">\n    <actionGroup name=\"{Action Group Name}\">\n\n    </actionGroup>\n</actionGroups>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add actions to the `}<inlineCode parentName=\"p\">{`actionGroup`}</inlineCode>{` arguments:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<actionGroup name=\"LoginAsAdminActionGroup\">\n    <fillField stepKey=\"fillUsername\" selector=\"#username\" userInput=\"{{adminUser.username}}\" />\n    <fillField stepKey=\"fillPassword\" selector=\"#password\" userInput=\"{{adminUser.password}}\" />\n    <click stepKey=\"click\" selector=\"#login\" />\n</actionGroup>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`userInput`}</inlineCode>{` variable must contain a data value for test.\nAdd a default data value for the variable to use in the most common cases.\nFor this example, the default value is `}<inlineCode parentName=\"p\">{`_defaultAdmin`}</inlineCode>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<argument name=\"adminUser\" defaultValue=\"_defaultAdmin\"/>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`The following example shows the complete declaration:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<actionGroups xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:Test/etc/actionGroupSchema.xsd\">\n    <actionGroup name=\"LoginAsAdmin\">\n            <annotations>\n                <description>Login to Backend Admin using provided User Data. PLEASE NOTE: This Action Group does NOT validate that you are Logged In.</description>\n            </annotations>\n            <arguments>\n                <argument name=\"adminUser\" type=\"entity\" defaultValue=\"DefaultAdminUser\"/>\n            </arguments>\n    \n            <amOnPage url=\"{{AdminLoginPage.url}}\" stepKey=\"navigateToAdmin\"/>\n            <fillField selector=\"{{AdminLoginFormSection.username}}\" userInput=\"{{adminUser.username}}\" stepKey=\"fillUsername\"/>\n            <fillField selector=\"{{AdminLoginFormSection.password}}\" userInput=\"{{adminUser.password}}\" stepKey=\"fillPassword\"/>\n            <click selector=\"{{AdminLoginFormSection.signIn}}\" stepKey=\"clickLogin\"/>\n            <closeAdminNotification stepKey=\"closeAdminNotification\"/>\n        </actionGroup>\n</actionGroups>\n`}</code></pre>\n      </li>\n    </ol>\n    <h3 {...{\n      \"id\": \"use-the-declaration-in-a-test\"\n    }}>{`Use the declaration in a test`}</h3>\n    <p>{`In this test example, we want to add the following set of actions:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<fillField selector=\"{{AdminLoginFormSection.username}}\" userInput=\"{{adminUser.username}}\" stepKey=\"fillUsername\"/>\n<fillField selector=\"{{AdminLoginFormSection.password}}\" userInput=\"{{adminUser.password}}\" stepKey=\"fillPassword\"/>\n<click selector=\"{{AdminLoginFormSection.signIn}}\" stepKey=\"clickLogin\"/>\n`}</code></pre>\n    <p>{`Instead of adding this set of actions, use the `}<em parentName=\"p\">{`LoginAsAdminActionGroup`}</em>{` `}<inlineCode parentName=\"p\">{`<actionGroup>`}</inlineCode>{` declaration in tests:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Reference the `}<inlineCode parentName=\"p\">{`LoginAsAdminActionGroup`}</inlineCode>{` action group:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<actionGroup stepKey=\"loginToAdminPanel\" ref=\"LoginAsAdminActionGroup\"/>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Update the argument name/value pair to `}<inlineCode parentName=\"p\">{`adminUser`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`CustomAdminUser`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<actionGroup stepKey=\"loginToAdminPanel\" ref=\"LoginAsAdminActionGroup\">\n    <argument name=\"adminUser\" value=\"CustomAdminUser\"/>\n</actionGroup>\n`}</code></pre>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"data-type-usage\"\n    }}>{`Data type usage`}</h2>\n    <p>{`By default, an `}<a parentName=\"p\" {...{\n        \"href\": \"#argument\"\n      }}><inlineCode parentName=\"a\">{`argument`}</inlineCode></a>{` expects an entire `}<inlineCode parentName=\"p\">{`entity`}</inlineCode>{` when the `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` value is not defined.\nThere are cases when you use a string instead of a whole entity.`}</p>\n    <p>{`For example, the following defines the replacement argument `}<inlineCode parentName=\"p\">{`relevantString`}</inlineCode>{` using a primitive data type:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<actionGroup name=\"fillExample\">\n    <arguments>\n        <argument name=\"relevantString\" defaultValue=\"defaultString\" type=\"string\"/>\n    </arguments>\n    <fillField stepKey=\"fillField1\" selector=\"#input\" userInput=\"{{relevantString}}\"/>\n    <click stepKey=\"clickSave\" selector=\"#save\"/>\n    <see stepKey=\"seeItWorked\" selector=\"#outputArea\" userInput=\"{{relevantString}}\"/>\n    <click stepKey=\"clickParameterizedSelector\" selector=\"{{SomeSection.parameterizedElement(relevantString)}}\"/>\n</actionGroup>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` argument type provides a method to pass a single piece of data to the `}<inlineCode parentName=\"p\">{`<actionGroup>`}</inlineCode>{`during a test instead of passing an entire entity.`}</p>\n    <h3 {...{\n      \"id\": \"explicitly-define-the-argument-value\"\n    }}>{`Explicitly define the argument value`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<actionGroup stepKey=\"fillWithStringLiteral\" ref=\"fillExample\">\n    <argument name=\"relevantString\" value=\"overrideString\"/>\n</actionGroup>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"use-persisted-data-references-to-define-the-argument-value\"\n    }}>{`Use persisted data references to define the argument value`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<actionGroup stepKey=\"fillWithStringLiteral\" ref=\"fillExample\">\n    <argument name=\"relevantString\" value=\"$persistedData.field1$\"/>\n</actionGroup>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`relevantString`}</inlineCode>{` argument value points to the data `}<a parentName=\"p\" {...{\n        \"href\": \"../data.md#persist-a-data-entity-as-a-prerequisite-of-a-test\"\n      }}>{`created`}</a>{` in the `}<inlineCode parentName=\"p\">{`stepKey=\"persistedData\"`}</inlineCode>{` test step.\n`}<inlineCode parentName=\"p\">{`field1`}</inlineCode>{` is a data key of the required data string.\nEven with the `}<inlineCode parentName=\"p\">{`persistedData`}</inlineCode>{` data entity, the Functional Testing Framework interprets the `}<inlineCode parentName=\"p\">{`$persistedData.field1$`}</inlineCode>{` value as a string.`}</p>\n    <h3 {...{\n      \"id\": \"define-the-argument-value-based-on-data-entity-resolution\"\n    }}>{`Define the argument value based on data entity resolution`}</h3>\n    <p>{`The argument value points to a piece of data defined in a `}<inlineCode parentName=\"p\">{`data.xml`}</inlineCode>{` file.\nThe `}<inlineCode parentName=\"p\">{`field1`}</inlineCode>{` data contains the required string.\nThe Functional Testing Framework resolves `}<inlineCode parentName=\"p\">{`{{myCustomEntity.field1}}`}</inlineCode>{` the same as it would in a `}<inlineCode parentName=\"p\">{`selector`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`userInput`}</inlineCode>{` attribute.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<actionGroup stepKey=\"fillWithXmlData\" ref=\"fillExample\">\n    <argument name=\"relevantString\" value=\"{{myCustomEntity.field1}}\"/>\n</actionGroup>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"return-a-value\"\n    }}>{`Return a value`}</h2>\n    <p>{`Action groups can return a value using a `}<inlineCode parentName=\"p\">{`return`}</inlineCode>{` tag.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<actionGroup name=\"GetOrderIdActionGroup\">\n    <seeElement selector=\"{{CheckoutSuccessMainSection.orderLink}}\"  stepKey=\"assertOrderLink\"/>\n    <grabTextFrom selector=\"{{CheckoutSuccessMainSection.orderLink}}\" stepKey=\"orderId\"/>\n    <return value=\"{$orderId}\" stepKey=\"returnOrderId\"/>\n</actionGroup>\n`}</code></pre>\n    <p>{`The value returned can be accessed in later steps using action group step key `}<inlineCode parentName=\"p\">{`{$getOrderId}`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<actionGroup ref=\"GetOrderIdActionGroup\" stepKey=\"getOrderId\"/>\n<!--Filter the Order using Order ID -->\n<actionGroup ref=\"FilterOrderGridByIdActionGroup\" stepKey=\"filterOrderGridById\">\n    <argument name=\"orderId\" value=\"{$getOrderId}\"/>\n</actionGroup>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"convention-to-return-a-value\"\n    }}>{`Convention to return a value`}</h3>\n    <p>{`The following conventions apply to action groups returning a value:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Only action groups can return value. Use of `}<inlineCode parentName=\"li\">{`return`}</inlineCode>{` tag is dis-allowed in tests and suites.`}</li>\n      <li parentName=\"ul\">{`An action group does not support multiple `}<inlineCode parentName=\"li\">{`return`}</inlineCode>{` tags.`}</li>\n      <li parentName=\"ul\">{`For `}<a parentName=\"li\" {...{\n          \"href\": \"../merging.md#merge-action-groups\"\n        }}>{`merging action groups`}</a>{`, `}<inlineCode parentName=\"li\">{`return`}</inlineCode>{` is allowed only in one of the merging action groups.`}</li>\n      <li parentName=\"ul\">{`Value returned by an action group can only be referenced within the scope that the action group is defined in (`}<inlineCode parentName=\"li\">{`test`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`before/after`}</inlineCode>{`).`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"optimizing-action-group-structures\"\n    }}>{`Optimizing action group structures`}</h2>\n    <p>{`Structuring properly an action group increases code reusability and readability.`}</p>\n    <p>{`Starting with an action group such as:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<actionGroup name=\"CreateCategory\">\n    <arguments>\n        <argument name=\"categoryEntity\" defaultValue=\"_defaultCategory\"/>\n    </arguments>\n    <seeInCurrentUrl url=\"{{AdminCategoryPage.url}}\" stepKey=\"seeOnCategoryPage\"/>\n    <click selector=\"{{AdminCategorySidebarActionSection.AddSubcategoryButton}}\" stepKey=\"clickOnAddSubCategory\"/>\n    <see selector=\"{{AdminHeaderSection.pageTitle}}\" userInput=\"New Category\" stepKey=\"seeCategoryPageTitle\"/>\n    <fillField selector=\"{{AdminCategoryBasicFieldSection.CategoryNameInput}}\" userInput=\"{{categoryEntity.name}}\" stepKey=\"enterCategoryName\"/>\n    <click selector=\"{{AdminCategorySEOSection.SectionHeader}}\" stepKey=\"openSEO\"/>\n    <fillField selector=\"{{AdminCategorySEOSection.UrlKeyInput}}\" userInput=\"{{categoryEntity.name_lwr}}\" stepKey=\"enterURLKey\"/>\n    <click selector=\"{{AdminCategoryMainActionsSection.SaveButton}}\" stepKey=\"saveCategory\"/>\n    <seeElement selector=\"{{AdminCategoryMessagesSection.SuccessMessage}}\" stepKey=\"assertSuccess\"/>\n    <seeInTitle userInput=\"{{categoryEntity.name}}\" stepKey=\"seeNewCategoryPageTitle\"/>\n    <seeElement selector=\"{{AdminCategorySidebarTreeSection.categoryInTree(categoryEntity.name)}}\" stepKey=\"seeCategoryInTree\"/>\n</actionGroup>\n`}</code></pre>\n    <p>{`It can be reworked into more manageable pieces, as below. These smaller steps are easier to read, update, and reuse.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`GoToCategoryGridAndAddNewCategory`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<actionGroup name=\"GoToCategoryGridAndAddNewCategory\">\n    <seeInCurrentUrl url=\"{{AdminCategoryPage.url}}\" stepKey=\"seeOnCategoryPage\"/>\n    <click selector=\"{{AdminCategorySidebarActionSection.AddSubcategoryButton}}\" stepKey=\"clickOnAddSubCategory\"/>\n    <see selector=\"{{AdminHeaderSection.pageTitle}}\" userInput=\"New Category\" stepKey=\"seeCategoryPageTitle\"/>\n</actionGroup>\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`FillInBasicCategoryFields`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<actionGroup name=\"FillInBasicCategoryFields\">\n    <arguments>\n        <argument name=\"categoryEntity\" defaultValue=\"_defaultCategory\"/>\n    </arguments>\n    <fillField selector=\"{{AdminCategoryBasicFieldSection.CategoryNameInput}}\" userInput=\"{{categoryEntity.name}}\" stepKey=\"enterCategoryName\"/>\n    <click selector=\"{{AdminCategorySEOSection.SectionHeader}}\" stepKey=\"openSEO\"/>\n    <fillField selector=\"{{AdminCategorySEOSection.UrlKeyInput}}\" userInput=\"{{categoryEntity.name_lwr}}\" stepKey=\"enterURLKey\"/>\n</actionGroup>\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`SaveAndVerifyCategoryCreation`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<actionGroup name=\"SaveAndVerifyCategoryCreation\">\n    <click selector=\"{{AdminCategoryMainActionsSection.SaveButton}}\" stepKey=\"saveCategory\"/>\n    <seeElement selector=\"{{AdminCategoryMessagesSection.SuccessMessage}}\" stepKey=\"assertSuccess\"/>\n    <seeInTitle userInput=\"{{categoryEntity.name}}\" stepKey=\"seeNewCategoryPageTitle\"/>\n    <seeElement selector=\"{{AdminCategorySidebarTreeSection.categoryInTree(categoryEntity.name)}}\" stepKey=\"seeCategoryInTree\"/>\n</actionGroup>\n`}</code></pre>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"elements-reference\"\n    }}>{`Elements reference`}</h2>\n    <h3 {...{\n      \"id\": \"actiongroups\"\n    }}>{`actionGroups`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<actionGroups>`}</inlineCode>{` element is a root element that contains XML configuration attributes.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`xmlns:xsi`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`\"http://www.w3.org/2001/XMLSchema-instance\"`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tells the XML parser to validate this document against a schema.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`xsi:noNamespaceSchemaLocation`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`\"urn:magento:mftf:Test/etc/actionGroupSchema.xsd\"`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Relative path to the corresponding schema.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`It may contain one or more `}<inlineCode parentName=\"p\">{`<actionGroup>`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"actiongroup\"\n    }}>{`actionGroup`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Identifier of the action group.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`extends`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Identifies the action group to extend.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`deprecated`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Used to warn about the future deprecation of the actionGroup. String will appear in Allure reports and console output at runtime.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`It may contain `}<inlineCode parentName=\"p\">{`<arguments>`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"arguments\"\n    }}>{`arguments`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<arguments>`}</inlineCode>{` element is a wrapper for an array of `}<inlineCode parentName=\"p\">{`<argument>`}</inlineCode>{` elements.`}</p>\n    <h3 {...{\n      \"id\": \"argument\"\n    }}>{`argument`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attribute`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Identifier of an argument in the scope of the corresponding action group.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`defaultValue`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Provides a default data value.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Possible values: `}<inlineCode parentName=\"td\">{`string`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`entity`}</inlineCode>{` (default).`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Defines the argument data type; Defaults to `}<inlineCode parentName=\"td\">{`entity`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    {\n      /* Link Definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}