{"version":3,"file":"component---src-pages-functional-testing-framework-credentials-md-f41d6383ddf406ed5c28.js","mappings":"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","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/credentials.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"credentials\"\n    }}>{`Credentials`}</h1>\n    <p>{`When you test functionality that involves external services such as UPS, FedEx, PayPal, or SignifyD,\nuse the Functional Testing Framework credentials feature to hide sensitive `}<a parentName=\"p\" {...{\n        \"href\": \"data.md\"\n      }}>{`data`}</a>{` like integration tokens and API keys.`}</p>\n    <p>{`Currently, the Functional Testing Framework supports three types of credential storage:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`.credentials file`}</strong></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`HashiCorp Vault`}</strong></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`AWS Secrets Manager`}</strong></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"configure-file-storage\"\n    }}>{`Configure File Storage`}</h2>\n    <p>{`The Functional Testing Framework creates a sample file for credentials during `}<a parentName=\"p\" {...{\n        \"href\": \"getting-started.md\"\n      }}>{`initial setup`}</a>{`: `}<inlineCode parentName=\"p\">{`magento2/dev/tests/acceptance/.credentials.example`}</inlineCode>{`.\nThe file contains an example list of keys for fields that can require credentials.`}</p>\n    <h3 {...{\n      \"id\": \"create-credentials\"\n    }}>{`Create `}<inlineCode parentName=\"h3\">{`.credentials`}</inlineCode></h3>\n    <p>{`To make the Functional Testing Framework process the file with credentials, in the command line, navigate to `}<inlineCode parentName=\"p\">{`magento2/dev/tests/acceptance/`}</inlineCode>{` and rename `}<inlineCode parentName=\"p\">{`.credentials.example`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`.credentials`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd dev/tests/acceptance/\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cp .credentials.example .credentials\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"add-credentials-to-gitignore\"\n    }}>{`Add `}<inlineCode parentName=\"h3\">{`.credentials`}</inlineCode>{` to `}<inlineCode parentName=\"h3\">{`.gitignore`}</inlineCode></h3>\n    <p>{`Verify that the file is excluded from tracking by `}<inlineCode parentName=\"p\">{`.gitignore`}</inlineCode>{` (unless you need this behavior):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`git check-ignore .credentials\n`}</code></pre>\n    <p>{`The command outputs the path if the file is excluded:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`.credentials\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"define-sensitive-data-in-the-credentials-file\"\n    }}>{`Define sensitive data in the `}<inlineCode parentName=\"h3\">{`.credentials`}</inlineCode>{` file`}</h3>\n    <p>{`Open the `}<inlineCode parentName=\"p\">{`.credentials`}</inlineCode>{` file and, for Adobe Commerce or Magento Open Source core credentials, uncomment the fields you want to use and add your values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`...\n# Credentials for the USPS service\nmagento/carriers_usps_userid=usps_test_user\nmagento/carriers_usps_password=Lmgxvrq89uPwECeV\n\n# Credentials for the DHL service\n#magento/carriers_dhl_id_us=dhl_test_user\n#magento/carriers_dhl_password_us=Mlgxv3dsagVeG\n....\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"add-key-and-value-pair-for-admin-password\"\n    }}>{`Add key and value pair for admin password`}</h3>\n    <p>{`magento/MAGENTO_ADMIN_PASSWORD  must contain the user password required for authorization in the Admin area. Example: magento/MAGENTO_ADMIN_PASSWORD=mycustompassword`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`...\n# Admin password\nmagento/MAGENTO_ADMIN_PASSWORD=123123q\n\n....\n`}</code></pre>\n    <p>{`Or add new key/value pairs for your own credentials. The keys use the following format:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`<vendor>/<key_name>=<key_value>\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{` symbol is not supported in a `}<inlineCode parentName=\"p\">{`key_name`}</inlineCode>{` other than the one after your vendor or extension name.`}</p>\n    <p>{`Otherwise you are free to use any other `}<inlineCode parentName=\"p\">{`key_name`}</inlineCode>{` you like, as they are merely the keys to reference from your tests.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`# Credentials for the MyAwesome service\nvendor/my_awesome_service_token=rRVSVnh3cbDsVG39oTMz4A\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"configure-vault-storage\"\n    }}>{`Configure Vault Storage`}</h2>\n    <p>{`Hashicorp vault secures, stores, and tightly controls access to data in modern computing.\nIt provides advanced data protection for your testing credentials.`}</p>\n    <p>{`The Functional Testing Framework works with both `}<inlineCode parentName=\"p\">{`vault enterprise`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`vault open source`}</inlineCode>{` that use `}<inlineCode parentName=\"p\">{`KV Version 2`}</inlineCode>{` secret engine.`}</p>\n    <h3 {...{\n      \"id\": \"install-vault-cli\"\n    }}>{`Install vault CLI`}</h3>\n    <p>{`Download and install vault CLI tool if you want to run or develop tests locally. `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.hashicorp.com/products/vault/\"\n      }}>{`Download Vault`}</a></p>\n    <h3 {...{\n      \"id\": \"authenticate-to-vault-via-vault-cli\"\n    }}>{`Authenticate to vault via vault CLI`}</h3>\n    <p>{`Authenticate to vault server via the vault CLI tool: `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.vaultproject.io/docs/commands/login.html\"\n      }}>{`Login Vault`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vault login -method -path\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Do not`}</strong>{` use `}<inlineCode parentName=\"p\">{`-no-store`}</inlineCode>{` command option, as the Functional Testing Framework will rely on the persisted token in the token helper (usually the local filesystem) for future API requests.`}</p>\n    <h3 {...{\n      \"id\": \"store-secrets-in-vault\"\n    }}>{`Store secrets in vault`}</h3>\n    <p>{`The Functional Testing Framework uses the `}<inlineCode parentName=\"p\">{`KV Version 2`}</inlineCode>{` secret engine for secret storage.\nMore information for working with `}<inlineCode parentName=\"p\">{`KV Version 2`}</inlineCode>{` can be found in `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.vaultproject.io/docs/secrets/kv/kv-v2.html\"\n      }}>{`Vault KV2`}</a>{`.`}</p>\n    <h4 {...{\n      \"id\": \"secrets-path-and-key-convention\"\n    }}>{`Secrets path and key convention`}</h4>\n    <p>{`The path and key for secret data must follow the format:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`<SECRETS_BASE_PATH>/mftf/<VENDOR>/<SECRET_KEY>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`# Secret path and key for carriers_usps_userid\nsecret/mftf/magento/carriers_usps_userid\n\n# Secret path and key for carriers_usps_password\nsecret/mftf/magento/carriers_usps_password\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"write-secrets-to-vault\"\n    }}>{`Write secrets to vault`}</h4>\n    <p>{`You can use vault CLI or API to write secret data (credentials, etc) to vault. Here is a CLI example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vault kv put secret/mftf/magento/carriers_usps_userid carriers_usps_userid=usps_test_user\nvault kv put secret/mftf/magento/carriers_usps_password carriers_usps_password=Lmgxvrq89uPwECeV\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"setup-the-framework-to-use-vault\"\n    }}>{`Setup the framework to use vault`}</h3>\n    <p>{`Add vault configuration environment variables `}<a parentName=\"p\" {...{\n        \"href\": \"configuration.md#credential_vault_address\"\n      }}><inlineCode parentName=\"a\">{`CREDENTIAL_VAULT_ADDRESS`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"configuration.md#credential_vault_secret_base_path\"\n      }}><inlineCode parentName=\"a\">{`CREDENTIAL_VAULT_SECRET_BASE_PATH`}</inlineCode></a>{`\nfrom `}<inlineCode parentName=\"p\">{`etc/config/.env.example`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{`.\nSet values according to your vault server configuration.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`# Default vault dev server\nCREDENTIAL_VAULT_ADDRESS=http://127.0.0.1:8200\nCREDENTIAL_VAULT_SECRET_BASE_PATH=secret\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"configure-aws-secrets-manager\"\n    }}>{`Configure AWS Secrets Manager`}</h2>\n    <p>{`AWS Secrets Manager offers secret management that supports:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Secret rotation with built-in integration for Amazon RDS, Amazon Redshift, and Amazon DocumentDB`}</li>\n      <li parentName=\"ul\">{`Fine-grained policies and permissions`}</li>\n      <li parentName=\"ul\">{`Audit secret rotation centrally for resources in the AWS Cloud, third-party services, and on-premises`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h3>\n    <h4 {...{\n      \"id\": \"use-aws-secrets-manager-from-your-own-aws-account\"\n    }}>{`Use AWS Secrets Manager from your own AWS account`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`An AWS account with Secrets Manager service`}</li>\n      <li parentName=\"ul\">{`An IAM user with AWS Secrets Manager access permission`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"use-aws-secrets-manager-in-cicd\"\n    }}>{`Use AWS Secrets Manager in CI/CD`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`AWS account ID where the AWS Secrets Manager service is hosted`}</li>\n      <li parentName=\"ul\">{`Authorized CI/CD EC2 instances with AWS Secrets Manager service access IAM role attached`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"store-secrets-in-aws-secrets-manager\"\n    }}>{`Store secrets in AWS Secrets Manager`}</h3>\n    <h4 {...{\n      \"id\": \"secrets-format\"\n    }}>{`Secrets format`}</h4>\n    <p><inlineCode parentName=\"p\">{`Secret Name`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Secret Value`}</inlineCode>{` are two key pieces of information for creating a secret.`}</p>\n    <p><inlineCode parentName=\"p\">{`Secret Value`}</inlineCode>{` can be either plaintext or key/value pairs in JSON format.  `}</p>\n    <p><inlineCode parentName=\"p\">{`Secret Name`}</inlineCode>{` must use the following format:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`mftf/<VENDOR>/<YOUR/SECRET/KEY>\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Secret Value`}</inlineCode>{` can be stored in two different formats: plaintext or key/value pairs.`}</p>\n    <p>{`For plaintext format, `}<inlineCode parentName=\"p\">{`Secret Value`}</inlineCode>{` can be any string you want to secure.`}</p>\n    <p>{`For key/value pairs format, `}<inlineCode parentName=\"p\">{`Secret Value`}</inlineCode>{` is a key/value pair with `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` the same as `}<inlineCode parentName=\"p\">{`Secret Name`}</inlineCode>{` without `}<inlineCode parentName=\"p\">{`mftf/<VENDOR>/`}</inlineCode>{` prefix,  which is `}<inlineCode parentName=\"p\">{`<YOUR/SECRET/KEY>`}</inlineCode>{`, and value can be any string you want to secure.`}</p>\n    <h5 {...{\n      \"id\": \"create-secrets-using-aws-cli\"\n    }}>{`Create Secrets using AWS CLI`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`aws secretsmanager create-secret --name \"mftf/magento/shipping/carriers_usps_userid\" --description \"Carriers USPS user id\" --secret-string \"1234567\"\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"create-secrets-using-aws-console\"\n    }}>{`Create Secrets using AWS Console`}</h5>\n    <ul>\n      <li parentName=\"ul\">{`Sign in to the AWS Secrets Manager console`}</li>\n      <li parentName=\"ul\">{`Choose Store a new secret`}</li>\n      <li parentName=\"ul\">{`In the Select secret type section, specify \"Other type of secret\"`}</li>\n      <li parentName=\"ul\">{`For `}<inlineCode parentName=\"li\">{`Secret Name`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Secret Key`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`Secret Value`}</inlineCode>{` field, for example, to save the same secret in key/value JSON format, you should use`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`# Secret Name\nmftf/magento/shipping/carriers_usps_userid\n\n# Secret Key\nshipping/carriers_usps_userid\n\n# Secret Value\n1234567\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"setup-the-framework-to-use-aws-secrets-manager\"\n    }}>{`Setup the framework to use AWS Secrets Manager`}</h3>\n    <p>{`To use AWS Secrets Manager, the AWS region to connect to is required. You can set it through environment variable `}<a parentName=\"p\" {...{\n        \"href\": \"configuration.md#credential_aws_secrets_manager_region\"\n      }}><inlineCode parentName=\"a\">{`CREDENTIAL_AWS_SECRETS_MANAGER_REGION`}</inlineCode></a>{` in `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{`.`}</p>\n    <p>{`The Functional Testing Framework uses the recommended `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.aws.amazon.com/sdk-for-php/v3/developer-guide/guide_credentials.html\"\n      }}>{`Default Credential Provider Chain`}</a>{` to establish connection to AWS Secrets Manager service.\nYou can setup credentials according to `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.aws.amazon.com/sdk-for-php/v3/developer-guide/guide_credentials.html\"\n      }}>{`Default Credential Provider Chain`}</a>{` and there is no Functional Testing Framework-specific setup required.\nOptionally, however, you can explicitly set AWS profile through environment variable `}<a parentName=\"p\" {...{\n        \"href\": \"configuration.md#credential_aws_secrets_manager_profile\"\n      }}><inlineCode parentName=\"a\">{`CREDENTIAL_AWS_SECRETS_MANAGER_PROFILE`}</inlineCode></a>{` in `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`# Sample AWS Secrets Manager configuration\nCREDENTIAL_AWS_SECRETS_MANAGER_REGION=us-east-1\nCREDENTIAL_AWS_SECRETS_MANAGER_PROFILE=default\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"optionally-set-credential_aws_account_id-environment-variable\"\n    }}>{`Optionally set CREDENTIAL_AWS_ACCOUNT_ID environment variable`}</h3>\n    <p>{`In case AWS credentials cannot resolve to a valid AWS account, full AWS KMS (`}<a parentName=\"p\" {...{\n        \"href\": \"https://aws.amazon.com/kms/\"\n      }}>{`Key Management Service`}</a>{`) key ARN (`}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\"\n      }}>{`Amazon Resource Name`}</a>{`) is required.\nYou will also need to set `}<inlineCode parentName=\"p\">{`CREDENTIAL_AWS_ACCOUNT_ID`}</inlineCode>{` environment variable so that the Functional Testing Framework can construct the full ARN. This is mostly used for CI/CD.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export CREDENTIAL_AWS_ACCOUNT_ID=<Your_12_Digits_AWS_Account_ID>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"configure-multiple-credential-storage\"\n    }}>{`Configure multiple credential storage`}</h2>\n    <p>{`It is possible and sometimes useful to setup and use multiple credential storage at the same time.\nIn this case, the test are able to read secret data at runtime from all storage options. The Functional Testing Framework will use the following precedence:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`.credentials File > HashiCorp Vault > AWS Secrets Manager\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"use-credentials-in-a-test\"\n    }}>{`Use credentials in a test`}</h2>\n    <p>{`Credentials can be used in actions: `}<a parentName=\"p\" {...{\n        \"href\": \"test/actions.md#fillfield\"\n      }}><inlineCode parentName=\"a\">{`fillField`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"test/actions.md#magentocli\"\n      }}><inlineCode parentName=\"a\">{`magentoCLI`}</inlineCode></a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"test/actions.md#createdata\"\n      }}><inlineCode parentName=\"a\">{`createData`}</inlineCode></a>{`.`}</p>\n    <p>{`Define the value as a reference to the corresponding key in the credentials file or vault such as `}<inlineCode parentName=\"p\">{`{{_CREDS.my_data_key}}`}</inlineCode>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`_CREDS`}</inlineCode>{` is an environment constant pointing to the `}<inlineCode parentName=\"li\">{`.credentials`}</inlineCode>{` file`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`my_data_key`}</inlineCode>{` is a key in the the `}<inlineCode parentName=\"li\">{`.credentials`}</inlineCode>{` file or vault that contains the value to be used in a test step`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`for File Storage, ensure your key contains the vendor prefix, which is `}<inlineCode parentName=\"li\">{`vendor/my_data_key`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`For example, to reference secret data in the `}<a parentName=\"p\" {...{\n        \"href\": \"test/actions.md#fillfield\"\n      }}><inlineCode parentName=\"a\">{`fillField`}</inlineCode></a>{` action, use the `}<inlineCode parentName=\"p\">{`userInput`}</inlineCode>{` attribute using a typical File Storage:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<fillField stepKey=\"FillApiToken\" selector=\".api-token\" userInput=\"{{_CREDS.vendor/my_data_key}}\" />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"implementation-details\"\n    }}>{`Implementation details`}</h2>\n    <p>{`The generated tests do not contain credentials values.\nThe Functional Testing Framework dynamically retrieves, encrypts, and decrypts the sensitive data during test execution.\nDecrypted credentials do not appear in the console, error logs, or `}<a parentName=\"p\" {...{\n        \"href\": \"reporting.md\"\n      }}>{`test reports`}</a>{`.\nThe decrypted values are only available in the `}<inlineCode parentName=\"p\">{`.credentials`}</inlineCode>{` file or within vault.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The test delivered with the Adobe Commerce and Magento Open Source application do not use credentials and do not cover external services, because of sensitivity of the data.`}</p>\n    {\n      /* Link definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}