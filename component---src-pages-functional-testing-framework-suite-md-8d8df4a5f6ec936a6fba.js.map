{"version":3,"file":"component---src-pages-functional-testing-framework-suite-md-8d8df4a5f6ec936a6fba.js","mappings":"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","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/suite.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"suites\"\n    }}>{`Suites`}</h1>\n    <p>{`Suites are essentially groups of tests that run in specific conditions (preconditions and postconditions).\nThey enable including, excluding, and grouping tests for a customized test run.\nYou can form suites using separate tests, groups, and modules.`}</p>\n    <p>{`Each suite must be defined in the `}<inlineCode parentName=\"p\">{`<VendorName>/<ModuleName>/Test/Mftf/Suite`}</inlineCode>{` directory.`}</p>\n    <p>{`The tests for each suite are generated in a separate directory under `}<inlineCode parentName=\"p\">{`<magento 2 root>/dev/tests/acceptance/tests/functional/Magento/_generated/`}</inlineCode>{`.\nAll tests that are not within a suite are generated in the `}<em parentName=\"p\">{`default`}</em>{` suite at `}<inlineCode parentName=\"p\">{`<magento 2 root>/dev/tests/acceptance/tests/functional/Magento/_generated/default`}</inlineCode>{`.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If a test is generated into at least one custom suite, it will not appear in the `}<em parentName=\"p\">{`default`}</em>{` suite.`}</p>\n    <h2 {...{\n      \"id\": \"format\"\n    }}>{`Format`}</h2>\n    <p>{`The format of a suite:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<suites xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"../../dev/tests/acceptance/vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Suite/etc/suiteSchema.xsd\">\n    <suite name=\"\">\n        <before>\n        </before>\n        <after>\n        </after>\n        <include>\n            <test name=\"\"/>\n            <group name=\"\"/>\n            <module name=\"\" file=\"\"/>\n        </include>\n        <exclude>\n            <test name=\"\"/>\n            <group name=\"\"/>\n            <module name=\"\" file=\"\"/>\n        </exclude>\n    </suite>\n</suites>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A suite name:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`must not match any existing group value.\nFor example, the suite `}<inlineCode parentName=\"li\">{`<suite name=\"ExampleTest\">`}</inlineCode>{` will fail during test run if any test contains in annotations `}<inlineCode parentName=\"li\">{`<group value=\"ExampleTest\">`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\">{`must not be `}<inlineCode parentName=\"li\">{`default`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`skip`}</inlineCode>{`. Tests that are not in any suite are generated under the `}<inlineCode parentName=\"li\">{`default`}</inlineCode>{` suite.\nThe suite name `}<inlineCode parentName=\"li\">{`skip`}</inlineCode>{` is synonymous to including a test in the `}<inlineCode parentName=\"li\">{`<group value=\"skip\"/>`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\">{`can contain letters, numbers, and underscores.`}</li>\n          <li parentName=\"ul\">{`should be upper camel case.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A suite must contain at least one `}<inlineCode parentName=\"p\">{`<include>`}</inlineCode>{`, or one `}<inlineCode parentName=\"p\">{`<exclude>`}</inlineCode>{`, or both.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Using `}<inlineCode parentName=\"p\">{`<before>`}</inlineCode>{` in a suite, you must add the corresponding `}<inlineCode parentName=\"p\">{`<after>`}</inlineCode>{` to restore the initial state of your testing instance.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`One `}<inlineCode parentName=\"p\">{`<suite>`}</inlineCode>{` tag is allowed per suite XML file.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"conditions\"\n    }}>{`Conditions`}</h2>\n    <p>{`Using suites enables test writers to consolidate conditions that are shared between tests.\nThe code lives in one place and executes once per suite.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Set up preconditions and postconditions using `}<a parentName=\"li\" {...{\n          \"href\": \"test/actions.md\"\n        }}>{`actions`}</a>{` in `}<a parentName=\"li\" {...{\n          \"href\": \"#before\"\n        }}><inlineCode parentName=\"a\">{`<before>`}</inlineCode></a>{` and `}<a parentName=\"li\" {...{\n          \"href\": \"#after\"\n        }}><inlineCode parentName=\"a\">{`<after>`}</inlineCode></a>{` correspondingly, just similar to use in a `}<a parentName=\"li\" {...{\n          \"href\": \"test/index.md\"\n        }}>{`test`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Clean up after suites just like after tests.\nThe Functional Testing Framework enforces the presence of both `}<inlineCode parentName=\"li\">{`<before>`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`<after>`}</inlineCode>{` if either is present.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"test-writing\"\n    }}>{`Test writing`}</h2>\n    <p>{`Since suites enable precondition consolidation, a common workflow for test writing is adding a new test to an existing suite.\nSuch test is generated in context of the suite that contains it.\nYou cannot isolate this test from preconditions of the suite; it cannot be used outside of the suite at the same time.`}</p>\n    <p>{`There are several ways to generate and execute your new test in the context of a suite:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Edit the appropriate `}<inlineCode parentName=\"p\">{`suite.xml`}</inlineCode>{` to include your test only and run:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`vendor/bin/mftf run:group <suiteName>\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Temporarily add a group to your test like `}<inlineCode parentName=\"p\">{`<group value=\"foo\">`}</inlineCode>{` and run:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`vendor/bin/mftf run:group foo\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To limit generation to your suite/test combination, run in conjunction with the above:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`vendor/bin/mftf generate:suite <suite>\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To generate any combination of suites and tests, use `}<a parentName=\"p\" {...{\n            \"href\": \"commands/mftf.md#generatetests\"\n          }}><inlineCode parentName=\"a\">{`generate:tests`}</inlineCode></a>{` with the `}<inlineCode parentName=\"p\">{`--tests`}</inlineCode>{` flag.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"enablingdisabling-wysiwyg-in-suite-conditions\"\n    }}>{`Enabling/disabling WYSIWYG in suite conditions`}</h3>\n    {\n      /* {% raw %} */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<suites xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"../../dev/tests/acceptance/vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Suite/etc/suiteSchema.xsd\">\n    <suite name=\"WYSIWYG\">\n        <before>\n            <actionGroup ref=\"LoginAsAdmin\" stepKey=\"login\"/>\n            <amOnPage url=\"admin/admin/system_config/edit/section/cms/\" stepKey=\"navigateToConfigurationPage\" />\n            <waitForPageLoad stepKey=\"wait1\"/>\n            <conditionalClick stepKey=\"expandWYSIWYGOptions\" selector=\"{{ContentManagementSection.WYSIWYGOptions}}\" dependentSelector=\"{{ContentManagementSection.CheckIfTabExpand}}\" visible=\"true\" />\n            <waitForElementVisible selector=\"{{ContentManagementSection.EnableWYSIWYG}}\" stepKey=\"waitForEnableWYSIWYGDropdown1\" />\n            <waitForElementVisible  selector=\"{{ContentManagementSection.EnableSystemValue}}\" stepKey=\"waitForUseSystemValueVisible\"/>\n            <uncheckOption selector=\"{{ContentManagementSection.EnableSystemValue}}\" stepKey=\"uncheckUseSystemValue\"/>\n            <selectOption selector=\"{{ContentManagementSection.EnableWYSIWYG}}\" userInput=\"Enabled by Default\" stepKey=\"selectOption1\"/>\n            <click selector=\"{{ContentManagementSection.WYSIWYGOptions}}\" stepKey=\"collapseWYSIWYGOptions\" />\n            <click selector=\"{{ContentManagementSection.Save}}\" stepKey=\"saveConfig\" />\n        </before>\n        <after>\n            <actionGroup ref=\"LoginAsAdmin\" stepKey=\"login\"/>\n            <actionGroup ref=\"DisabledWYSIWYG\" stepKey=\"disable\"/>\n        </after>\n        <include>\n            <group name=\"WYSIWYG\"/>\n        </include>\n    </suite>\n</suites>\n`}</code></pre>\n    {\n      /* {% endraw %} */\n    }\n    <p>{`This example declares a suite with the name `}<inlineCode parentName=\"p\">{`WYSIWYG`}</inlineCode>{`.\nThe suite enables WYSIWYG `}<em parentName=\"p\">{`before`}</em>{` running tests.\nIt performs the following steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Log in to the backend.`}</li>\n      <li parentName=\"ol\">{`Navigate to the `}<strong parentName=\"li\">{`Configuration`}</strong>{` page.`}</li>\n      <li parentName=\"ol\">{`Enable `}<strong parentName=\"li\">{`WYSIWYG`}</strong>{` in the Adobe Commerce or Magento Open Source instance.`}</li>\n    </ol>\n    <p><em parentName=\"p\">{`After`}</em>{` the testing, the suite returns the Adobe Commerce or Magento Open Source instance to the initial state disabling WYSIWYG:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Log back in.`}</li>\n      <li parentName=\"ol\">{`Disable `}<strong parentName=\"li\">{`WYSIWYG`}</strong>{` in the Adobe Commerce or Magento Open Source instance.`}</li>\n    </ol>\n    <p>{`This suite includes all tests that contain the `}<inlineCode parentName=\"p\">{`<group value=\"WYSIWYG\"/>`}</inlineCode>{` annotation.`}</p>\n    <h3 {...{\n      \"id\": \"execute-cli-commands-in-suite-conditions\"\n    }}>{`Execute CLI commands in suite conditions`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<suites xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:Suite/etc/suiteSchema.xsd\">\n    <suite name=\"Cache\">\n        <before>\n            <magentoCLI stepKey=\"disableCache\" command=\"cache:disable\"/>\n        </before>\n        <after>\n            <magentoCLI stepKey=\"enableCache\" command=\"cache:enable\"/>\n        </after>\n        <include>\n            <test name=\"SomeCacheRelatedTest\"/>\n            <group name=\"CacheRelated\"/>\n        </include>\n    </suite>\n</suites>\n`}</code></pre>\n    <p>{`This example declares a suite with the name `}<inlineCode parentName=\"p\">{`Cache`}</inlineCode>{`.`}</p>\n    <p>{`Preconditions:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`It disables the Adobe Commerce or Magento Open Source instance cache entirely before running the included tests.`}</li>\n      <li parentName=\"ol\">{`After the testing, it re-enables the cache.`}</li>\n    </ol>\n    <p>{`The suite includes a specific test `}<inlineCode parentName=\"p\">{`SomeCacheRelatedTest`}</inlineCode>{` and every `}<inlineCode parentName=\"p\">{`<test>`}</inlineCode>{` that includes the `}<inlineCode parentName=\"p\">{`<group value=\"CacheRelated\"/>`}</inlineCode>{` annotation.`}</p>\n    <h3 {...{\n      \"id\": \"change-configurations-in-suite-conditions\"\n    }}>{`Change configurations in suite conditions`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<suites xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:Suite/etc/suiteSchema.xsd\">\n    <suite name=\"PaypalConfiguration\">\n        <before>\n            <createData entity=\"SamplePaypalConfig\" stepKey=\"createSamplePaypalConfig\"/>\n        </before>\n        <after>\n            <createData entity=\"DefaultPayPalConfig\" stepKey=\"restoreDefaultPaypalConfig\"/>\n        </after>\n        <include>\n            <module name=\"Catalog\"/>\n        </include>\n        <exclude>\n            <test name=\"PaypalIncompatibleTest\"/>\n        </exclude>\n    </suite>\n</suites>\n`}</code></pre>\n    <p>{`This example declares a suite with the name `}<inlineCode parentName=\"p\">{`PaypalConfiguration`}</inlineCode>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<before>`}</inlineCode>{` block persists a Paypal Configuration enabling all tests in this suite to run under the newly reconfigured Adobe Commerce or Magento Open Source instance.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<after>`}</inlineCode>{` block deletes the persisted configuration, returning Adobe Commerce or Magento Open Source to its initial state.`}</li>\n      <li parentName=\"ul\">{`The suite includes all tests from the `}<inlineCode parentName=\"li\">{`Catalog`}</inlineCode>{` module, except the `}<inlineCode parentName=\"li\">{`PaypalIncompatibleTest`}</inlineCode>{` test.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"elements-reference\"\n    }}>{`Elements reference`}</h2>\n    <h3 {...{\n      \"id\": \"suites-1\"\n    }}>{`suites`}</h3>\n    <p>{`The root element for suites.`}</p>\n    <h3 {...{\n      \"id\": \"suite\"\n    }}>{`suite`}</h3>\n    <p>{`A set of \"before\" and \"after\" preconditions, and test filters to include and exclude tests in the scope of suite.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Unique suite name identifier.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`remove`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Removing the suite during merging.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`It can contain `}<inlineCode parentName=\"p\">{`<before>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<after>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<include>`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`<exclude>`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"before\"\n    }}>{`before`}</h3>\n    <p>{`A suite hook with preconditions that executes once before the suite tests.`}</p>\n    <p>{`It may contain test steps with any `}<a parentName=\"p\" {...{\n        \"href\": \"test/actions.md\"\n      }}>{`actions`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"test/action-groups.md\"\n      }}>{`action groups`}</a>{`.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Tests in the suite are not run and screenshots are not saved in case of a failure in the before hook.\nTo troubleshoot the failure, run the suite locally.`}</p>\n    <h3 {...{\n      \"id\": \"after\"\n    }}>{`after`}</h3>\n    <p>{`A suite hook with postconditions executed once after the suite tests.`}</p>\n    <p>{`It may contain test steps with any `}<a parentName=\"p\" {...{\n        \"href\": \"test/actions.md\"\n      }}>{`actions`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"test/action-groups.md\"\n      }}>{`action groups`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"include\"\n    }}>{`include`}</h3>\n    <p>{`A set of filters that you can use to specify which tests to include in the test suite.`}</p>\n    <p>{`It may contain filters by:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`test which names a specific `}<inlineCode parentName=\"li\">{`<test>`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`group which refers to a declared `}<inlineCode parentName=\"li\">{`group`}</inlineCode>{` annotation.`}</li>\n      <li parentName=\"ul\">{`module which refers to `}<inlineCode parentName=\"li\">{`test`}</inlineCode>{` files under a specific module.`}</li>\n    </ul>\n    <p>{`The element can contain `}<a parentName=\"p\" {...{\n        \"href\": \"#test\"\n      }}><inlineCode parentName=\"a\">{`<test>`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"#group\"\n      }}><inlineCode parentName=\"a\">{`<group>`}</inlineCode></a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"#module\"\n      }}><inlineCode parentName=\"a\">{`<module>`}</inlineCode></a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"exclude\"\n    }}>{`exclude`}</h3>\n    <p>{`A set of filters that you can use to specify which tests to exclude in the test suite.`}</p>\n    <p>{`There are two types of behavior:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Applying filters to the included tests when the suite contains `}<a parentName=\"li\" {...{\n          \"href\": \"#include\"\n        }}><inlineCode parentName=\"a\">{`<include>`}</inlineCode></a>{` filters.\nThe Functional Testing Framework will exclude tests from the previously included set and generate the remaining tests in the suite.`}</li>\n      <li parentName=\"ol\">{`Applying filters to all tests when the suite does not contain `}<a parentName=\"li\" {...{\n          \"href\": \"#include\"\n        }}><inlineCode parentName=\"a\">{`<include>`}</inlineCode></a>{` filters.\nThe Functional Testing Framework will generate all existing tests except the excluded.\nIn this case, the custom suite will contain all generated tests except excluded, and the `}<em parentName=\"li\">{`default`}</em>{` suite will contain the excluded tests only.`}</li>\n    </ol>\n    <p>{`It may contain filters by:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`test which names a specific `}<inlineCode parentName=\"li\">{`<test>`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`group which refers to a declared `}<inlineCode parentName=\"li\">{`group`}</inlineCode>{` annotation.`}</li>\n      <li parentName=\"ul\">{`module which refers to `}<inlineCode parentName=\"li\">{`test`}</inlineCode>{` files under a specific module.`}</li>\n    </ul>\n    <p>{`The element may contain `}<a parentName=\"p\" {...{\n        \"href\": \"#test\"\n      }}><inlineCode parentName=\"a\">{`<test>`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"#group\"\n      }}><inlineCode parentName=\"a\">{`<group>`}</inlineCode></a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"#module\"\n      }}><inlineCode parentName=\"a\">{`<module>`}</inlineCode></a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"test\"\n    }}>{`test`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Filtering a test by its name.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`remove`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Removing the filter during merging.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"group\"\n    }}>{`group`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Filtering tests by the `}<inlineCode parentName=\"td\">{`<group>`}</inlineCode>{` annotation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`remove`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Removing the filter during merging.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"module\"\n    }}>{`module`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Filtering tests by their location in the corresponding module.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`file`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Filtering a specific test file in the module.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`remove`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Removing the filter during merging.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}