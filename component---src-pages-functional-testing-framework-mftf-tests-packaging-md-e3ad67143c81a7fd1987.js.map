{"version":3,"file":"component---src-pages-functional-testing-framework-mftf-tests-packaging-md-e3ad67143c81a7fd1987.js","mappings":"2RAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,yCACH,0CACL,eACE,GAAM,gCACH,iCACL,kBAAK,qHACL,qBAAK,iBAAMC,WAAW,MAClB,UAAa,qBACV,2KAKP,kBAAK,wDAAsD,uBAAYA,WAAW,KAAM,+DAA4E,UACtK,uBAAYA,WAAW,KAAM,gCAA6C,oCAAkC,uBAAYA,WAAW,KAAM,mCAAgD,YAAU,uBAAYA,WAAW,KAAM,iBAA8B,eAC3P,uBAAYA,WAAW,KAAM,iBAA8B,mCAAiC,uBAAYA,WAAW,KAAM,wCAAqD,SAAO,uBAAYA,WAAW,KAAM,sCAAmD,8EAEtQ,kBAAK,6GACL,eACE,GAAM,mCACH,qCACL,kBAAK,gBAAc,uBAAYA,WAAW,KAAM,iBAA8B,0BAAwB,uBAAYA,WAAW,KAAM,mCAAgD,MACnL,kBAAK,gBAAc,uBAAYA,WAAW,KAAM,iBAA8B,4KAC4B,uBAAYA,WAAW,KAAM,QAAqB,WAAS,uBAAYA,WAAW,KAAM,mBAAgC,SAAO,uBAAYA,WAAW,KAAM,QAAqB,iDAE3R,kBAAK,uBAAqB,uBAAYA,WAAW,KAAM,iBAA8B,8BAA4B,uBAAYA,WAAW,KAAM,kFAA+F,MAC7O,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,4rBAsBV,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/mftf-tests-packaging.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"functional-test-modules-and-packaging\"\n    }}>{`Functional test modules and packaging`}</h1>\n    <h2 {...{\n      \"id\": \"predefined-test-module-paths\"\n    }}>{`Predefined test module paths`}</h2>\n    <p>{`The Functional Testing Framework can run tests from predefined paths and custom paths. The predefined paths are:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`app/code/<Vendor>/<Module>/Test/Mftf\ndev/tests/acceptance/tests/functional/<Vendor>/<TestModule>\nvendor/<Vendor>/<Module>/Test/Mftf\nvendor/<Vendor>/<TestModule>\n`}</code></pre>\n    <p>{`To support future service isolation, Test module in `}<inlineCode parentName=\"p\">{`dev/tests/acceptance/tests/functional/<Vendor>/<TestModule>`}</inlineCode>{` and\n`}<inlineCode parentName=\"p\">{`vendor/<Vendor>/<TestModule>`}</inlineCode>{` must define the module type as `}<inlineCode parentName=\"p\">{`magento2-functional-test-module`}</inlineCode>{` in its `}<inlineCode parentName=\"p\">{`composer.json`}</inlineCode>{` file.\nNo `}<inlineCode parentName=\"p\">{`composer.json`}</inlineCode>{` file is required for tests in `}<inlineCode parentName=\"p\">{`app/code/<Vendor>/<Module>/Test/Mftf`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`vendor/<Vendor>/<Module>/Test/Mftf`}</inlineCode>{`\nas they are part of the Adobe Commerce and Magento Open Source modules.`}</p>\n    <p>{`Test module for a specific Adobe Commerce or Magento Open Source module can only be in one of the paths.`}</p>\n    <h2 {...{\n      \"id\": \"test-module-composerjson-format\"\n    }}>{`Test module composer.json format`}</h2>\n    <p>{`Test module `}<inlineCode parentName=\"p\">{`composer.json`}</inlineCode>{` file should use type `}<inlineCode parentName=\"p\">{`magento2-functional-test-module`}</inlineCode>{`.`}</p>\n    <p>{`Test module `}<inlineCode parentName=\"p\">{`composer.json`}</inlineCode>{` file should define module dependencies in suggests block.\nThe Functional Testing Framework will recognize the dependency if the suggest message of a module specifies `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` using `}<inlineCode parentName=\"p\">{`magento2-module`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{`\nusing module name registered with Magento.`}</p>\n    <p>{`Here is an example `}<inlineCode parentName=\"p\">{`composer.json`}</inlineCode>{` file for the test module `}<inlineCode parentName=\"p\">{`dev/tests/acceptance/tests/functional/Magento/ConfigurableProductCatalogSearch`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"name\": \"magento/module-configurable-product-catalog-search-functional-test\",\n    \"description\": \"test module for Magento_ConfigurableProduct and Magento_CatalogSearch\",\n    \"type\": \"magento2-functional-test-module\",\n    \"config\": {\n        \"sort-packages\": true\n    },\n    \"require\": {\n        \"magento/magento2-functional-testing-framework\": \">=2.5\"\n    },\n    \"suggest\": {\n        \"magento/module-configurable-product\": \"type: magento2-module, name: Magento_ConfigurableProduct, version: *\",\n        \"magento/module-catalog-search\": \"type: magento2-module, name: Magento_CatalogSearch, version: *\"\n    },\n    \"license\": [\n        \"OSL-3.0\",\n        \"AFL-3.0\"\n    ]\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}