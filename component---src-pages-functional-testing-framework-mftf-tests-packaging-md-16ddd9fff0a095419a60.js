"use strict";(self.webpackChunkcommerce_testing=self.webpackChunkcommerce_testing||[]).push([[5016],{34458:function(e,n,o){o.r(n),o.d(n,{_frontmatter:function(){return r},default:function(){return u}});var t=o(58168),a=o(80045),d=(o(88763),o(15680)),m=o(83407);const s=["components"],r={},l={_frontmatter:r},i=m.A;function u(e){let{components:n}=e,o=(0,a.A)(e,s);return(0,d.mdx)(i,(0,t.A)({},l,o,{components:n,mdxType:"MDXLayout"}),(0,d.mdx)("h1",{id:"functional-test-modules-and-packaging"},"Functional test modules and packaging"),(0,d.mdx)("h2",{id:"predefined-test-module-paths"},"Predefined test module paths"),(0,d.mdx)("p",null,"The Functional Testing Framework can run tests from predefined paths and custom paths. The predefined paths are:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-terminal"},"app/code/<Vendor>/<Module>/Test/Mftf\ndev/tests/acceptance/tests/functional/<Vendor>/<TestModule>\nvendor/<Vendor>/<Module>/Test/Mftf\nvendor/<Vendor>/<TestModule>\n")),(0,d.mdx)("p",null,"To support future service isolation, Test module in ",(0,d.mdx)("inlineCode",{parentName:"p"},"dev/tests/acceptance/tests/functional/<Vendor>/<TestModule>")," and\n",(0,d.mdx)("inlineCode",{parentName:"p"},"vendor/<Vendor>/<TestModule>")," must define the module type as ",(0,d.mdx)("inlineCode",{parentName:"p"},"magento2-functional-test-module")," in its ",(0,d.mdx)("inlineCode",{parentName:"p"},"composer.json")," file.\nNo ",(0,d.mdx)("inlineCode",{parentName:"p"},"composer.json")," file is required for tests in ",(0,d.mdx)("inlineCode",{parentName:"p"},"app/code/<Vendor>/<Module>/Test/Mftf")," and ",(0,d.mdx)("inlineCode",{parentName:"p"},"vendor/<Vendor>/<Module>/Test/Mftf"),"\nas they are part of the Adobe Commerce and Magento Open Source modules."),(0,d.mdx)("p",null,"Test module for a specific Adobe Commerce or Magento Open Source module can only be in one of the paths."),(0,d.mdx)("h2",{id:"test-module-composerjson-format"},"Test module composer.json format"),(0,d.mdx)("p",null,"Test module ",(0,d.mdx)("inlineCode",{parentName:"p"},"composer.json")," file should use type ",(0,d.mdx)("inlineCode",{parentName:"p"},"magento2-functional-test-module"),"."),(0,d.mdx)("p",null,"Test module ",(0,d.mdx)("inlineCode",{parentName:"p"},"composer.json")," file should define module dependencies in suggests block.\nThe Functional Testing Framework will recognize the dependency if the suggest message of a module specifies ",(0,d.mdx)("inlineCode",{parentName:"p"},"type")," using ",(0,d.mdx)("inlineCode",{parentName:"p"},"magento2-module")," and ",(0,d.mdx)("inlineCode",{parentName:"p"},"name"),"\nusing module name registered with Magento."),(0,d.mdx)("p",null,"Here is an example ",(0,d.mdx)("inlineCode",{parentName:"p"},"composer.json")," file for the test module ",(0,d.mdx)("inlineCode",{parentName:"p"},"dev/tests/acceptance/tests/functional/Magento/ConfigurableProductCatalogSearch"),":"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "magento/module-configurable-product-catalog-search-functional-test",\n    "description": "test module for Magento_ConfigurableProduct and Magento_CatalogSearch",\n    "type": "magento2-functional-test-module",\n    "config": {\n        "sort-packages": true\n    },\n    "require": {\n        "magento/magento2-functional-testing-framework": ">=2.5"\n    },\n    "suggest": {\n        "magento/module-configurable-product": "type: magento2-module, name: Magento_ConfigurableProduct, version: *",\n        "magento/module-catalog-search": "type: magento2-module, name: Magento_CatalogSearch, version: *"\n    },\n    "license": [\n        "OSL-3.0",\n        "AFL-3.0"\n    ]\n}\n')))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-functional-testing-framework-mftf-tests-packaging-md-16ddd9fff0a095419a60.js.map