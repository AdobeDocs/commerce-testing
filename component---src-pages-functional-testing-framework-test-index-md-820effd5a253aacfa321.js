"use strict";(self.webpackChunkcommerce_testing=self.webpackChunkcommerce_testing||[]).push([[7151],{56638:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return l},default:function(){return u}});var a=n(87462),r=n(45987),m=(n(35776),n(3905)),d=n(91515);const i=["components"],l={},o=(p="InlineAlert",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,m.mdx)("div",e)});var p;const s={_frontmatter:l},x=d.Z;function u(e){let{components:t}=e,n=(0,r.Z)(e,i);return(0,m.mdx)(x,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,m.mdx)("h1",{id:"test-cases"},"Test cases"),(0,m.mdx)("p",null,"Test cases in the Functional Testing Framework are defined in XML as ",(0,m.mdx)("a",{parentName:"p",href:"#tests"},(0,m.mdx)("inlineCode",{parentName:"a"},"<tests>")),".\n",(0,m.mdx)("inlineCode",{parentName:"p"},"<tests>")," is a ",(0,m.mdx)("a",{parentName:"p",href:"https://codeception.com/docs/07-AdvancedUsage"},"Codeception test container")," that contains individual test ",(0,m.mdx)("a",{parentName:"p",href:"#test"},(0,m.mdx)("inlineCode",{parentName:"a"},"<test>"))," with its metadata (",(0,m.mdx)("a",{parentName:"p",href:"#annotations"},(0,m.mdx)("inlineCode",{parentName:"a"},"<annotations>")),"), before (",(0,m.mdx)("a",{parentName:"p",href:"#before"},(0,m.mdx)("inlineCode",{parentName:"a"},"<before>")),") and after (",(0,m.mdx)("a",{parentName:"p",href:"#after"},(0,m.mdx)("inlineCode",{parentName:"a"},"<after>")),") section."),(0,m.mdx)("p",null,"The Functional Testing Framework ",(0,m.mdx)("inlineCode",{parentName:"p"},"<test>")," is considered a sequence of actions with associated parameters.\nAny failed ",(0,m.mdx)("a",{parentName:"p",href:"assertions.md"},"assertion")," within a test constitutes a failed test."),(0,m.mdx)(o,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"<before>")," and ",(0,m.mdx)("inlineCode",{parentName:"p"},"<after>")," hooks are not global within ",(0,m.mdx)("inlineCode",{parentName:"p"},"<tests>"),".\nThey only apply to the ",(0,m.mdx)("inlineCode",{parentName:"p"},"<test>")," in which they are declared.\nThe steps in ",(0,m.mdx)("inlineCode",{parentName:"p"},"<after>")," are run in both successful ",(0,m.mdx)("strong",{parentName:"p"},"and")," failed test runs."),(0,m.mdx)("p",null,"The following diagram shows the structure of an test case:"),(0,m.mdx)("p",null,(0,m.mdx)("img",{parentName:"p",src:"/commerce-testing/assets/c70d1cd5347e900bcc7d185f80d7a818/test-dia.svg",alt:"Structure of test case"})),(0,m.mdx)("h2",{id:"format"},"Format"),(0,m.mdx)("p",null,"The format of a test XML file is:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n\n<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">\n    <test name="" insertBefore="" insertAfter="">\n        <annotations>\n            \x3c!-- TEST ANNOTATIONS --\x3e\n        </annotations>\n        <before>\n            \x3c!-- ACTIONS AND ACTION GROUPS PERFORMED BEFORE THE TEST --\x3e\n        </before>\n        <after>\n            \x3c!-- ACTIONS AND ACTION GROUPS PERFORMED AFTER THE TEST --\x3e\n        </after>\n        \x3c!-- TEST ACTIONS, ACTION GROUPS, AND ASSERTIONS--\x3e\n    </test>\n</tests>\n')),(0,m.mdx)("h2",{id:"principles"},"Principles"),(0,m.mdx)("p",null,"The following conventions apply to test:"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},"One ",(0,m.mdx)("inlineCode",{parentName:"li"},"<test>")," tag is allowed per test XML file."),(0,m.mdx)("li",{parentName:"ul"},"All names within the framework are in the ",(0,m.mdx)("strong",{parentName:"li"},"PascalCase")," format and must be alphanumeric."),(0,m.mdx)("li",{parentName:"ul"},"Each action and action group call should have its own identifier ",(0,m.mdx)("inlineCode",{parentName:"li"},"<stepKey>"),"."),(0,m.mdx)("li",{parentName:"ul"},"A test may have any number of ",(0,m.mdx)("a",{parentName:"li",href:"assertions.md"},"assertions")," at any point within the ",(0,m.mdx)("inlineCode",{parentName:"li"},"<test>"),"."),(0,m.mdx)("li",{parentName:"ul"},"If ",(0,m.mdx)("inlineCode",{parentName:"li"},"<test>")," is included in ",(0,m.mdx)("a",{parentName:"li",href:"../suite.md"},(0,m.mdx)("inlineCode",{parentName:"a"},"<suite>")),", it ",(0,m.mdx)("strong",{parentName:"li"},"cannot be generated in isolation")," from ",(0,m.mdx)("inlineCode",{parentName:"li"},"<before>")," and ",(0,m.mdx)("inlineCode",{parentName:"li"},"<after>")," section of the suite (see ",(0,m.mdx)("a",{parentName:"li",href:"../suite.md"},"suites")," for details).")),(0,m.mdx)("h2",{id:"elements-reference"},"Elements reference"),(0,m.mdx)("p",null,"There are several XML elements that are used within ",(0,m.mdx)("inlineCode",{parentName:"p"},"<test>")," in the MFTF."),(0,m.mdx)("h3",{id:"tests"},"tests"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"<tests>")," is a container for test and must contain exactly one ",(0,m.mdx)("a",{parentName:"p",href:"#test"},(0,m.mdx)("inlineCode",{parentName:"a"},"<test>")),"."),(0,m.mdx)("h3",{id:"test"},"test"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"<test>")," is a set of steps, including ",(0,m.mdx)("a",{parentName:"p",href:"actions.md"},"actions"),", ",(0,m.mdx)("a",{parentName:"p",href:"assertions.md"},"assertions")," and Action Group calls. It is a sequence of test steps that define test flow within a test method."),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Attribute"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Use"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"name")),(0,m.mdx)("td",{parentName:"tr",align:null},"string"),(0,m.mdx)("td",{parentName:"tr",align:null},"optional"),(0,m.mdx)("td",{parentName:"tr",align:null},"The test identifier.")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"remove")),(0,m.mdx)("td",{parentName:"tr",align:null},"boolean"),(0,m.mdx)("td",{parentName:"tr",align:null},"optional"),(0,m.mdx)("td",{parentName:"tr",align:null},"Set ",(0,m.mdx)("inlineCode",{parentName:"td"},"true")," to remove the test when merging.")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"insertBefore")),(0,m.mdx)("td",{parentName:"tr",align:null},"string"),(0,m.mdx)("td",{parentName:"tr",align:null},"optional"),(0,m.mdx)("td",{parentName:"tr",align:null},"This option is used for ",(0,m.mdx)("a",{parentName:"td",href:"../merging.md#add-several-test-steps"},"merging"),". It enables you to add all test actions contained in the original test into a test with the same name BEFORE the test step with ",(0,m.mdx)("inlineCode",{parentName:"td"},"stepKey")," that you assigned in ",(0,m.mdx)("inlineCode",{parentName:"td"},"insertBefore"),".")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"insertAfter")),(0,m.mdx)("td",{parentName:"tr",align:null},"string"),(0,m.mdx)("td",{parentName:"tr",align:null},"optional"),(0,m.mdx)("td",{parentName:"tr",align:null},"Set ",(0,m.mdx)("inlineCode",{parentName:"td"},"stepKey")," of the test step after which you want to insert the test when ",(0,m.mdx)("a",{parentName:"td",href:"../merging.md#add-several-test-steps"},"merging"),".")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"deprecated")),(0,m.mdx)("td",{parentName:"tr",align:null},"string"),(0,m.mdx)("td",{parentName:"tr",align:null},"optional"),(0,m.mdx)("td",{parentName:"tr",align:null},"Used to warn about the future deprecation of the test. String will appear in Allure reports and console output at runtime.")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"extends")),(0,m.mdx)("td",{parentName:"tr",align:null},"string"),(0,m.mdx)("td",{parentName:"tr",align:null},"optional"),(0,m.mdx)("td",{parentName:"tr",align:null},"A name of the parent test to ",(0,m.mdx)("a",{parentName:"td",href:"../extending.md"},"extend"),".")))),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"<test>")," may also contain ",(0,m.mdx)("a",{parentName:"p",href:"#annotations"},(0,m.mdx)("inlineCode",{parentName:"a"},"<annotations>")),", ",(0,m.mdx)("a",{parentName:"p",href:"#before"},(0,m.mdx)("inlineCode",{parentName:"a"},"<before>")),", ",(0,m.mdx)("a",{parentName:"p",href:"#after"},(0,m.mdx)("inlineCode",{parentName:"a"},"<after>")),", any ",(0,m.mdx)("a",{parentName:"p",href:"actions.md"},"action"),", or ",(0,m.mdx)("a",{parentName:"p",href:"#actiongroup"},(0,m.mdx)("inlineCode",{parentName:"a"},"<actionGroup>")),"."),(0,m.mdx)("h3",{id:"annotations"},"annotations"),(0,m.mdx)("p",null,(0,m.mdx)("a",{parentName:"p",href:"annotations.md"},"Annotations")," are supported by both ",(0,m.mdx)("a",{parentName:"p",href:"https://codeception.com/docs/07-AdvancedUsage"},"Codeception")," and ",(0,m.mdx)("a",{parentName:"p",href:"https://github.com/allure-framework/"},"Allure"),"."),(0,m.mdx)("p",null,"Codeception annotations typically provide metadata and are able to influence test selection.\nAllure annotations provide metadata for reporting."),(0,m.mdx)("h3",{id:"before"},"before"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"<before>")," wraps the steps that are preconditions for the ",(0,m.mdx)("a",{parentName:"p",href:"#test"},(0,m.mdx)("inlineCode",{parentName:"a"},"<test>")),". For example: Change configuration, create Customer Account, Create Category and Product."),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"<before>")," may contain these child elements:"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},"Any ",(0,m.mdx)("a",{parentName:"li",href:"actions.md"},"Action")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#actiongroup"},(0,m.mdx)("inlineCode",{parentName:"a"},"<actionGroup>")))),(0,m.mdx)("h3",{id:"after"},"after"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"<after>")," wraps the steps to perform after the ",(0,m.mdx)("a",{parentName:"p",href:"#test"},(0,m.mdx)("inlineCode",{parentName:"a"},"<test>")),". The steps are run in both successful ",(0,m.mdx)("strong",{parentName:"p"},"and")," failed test runs. The goal of this section is to perform cleanup (revert the environment to the pre-test state)."),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"<after>")," may contain:"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},"Any ",(0,m.mdx)("a",{parentName:"li",href:"actions.md"},"Action")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"#actiongroup"},(0,m.mdx)("inlineCode",{parentName:"a"},"<actionGroup>")))),(0,m.mdx)("h3",{id:"actiongroup"},"actionGroup"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"<actionGroup>")," calls a corresponding ",(0,m.mdx)("a",{parentName:"p",href:"action-groups.md"},"action group"),"."),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Attribute"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Use"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"ref")),(0,m.mdx)("td",{parentName:"tr",align:null},"string"),(0,m.mdx)("td",{parentName:"tr",align:null},"required"),(0,m.mdx)("td",{parentName:"tr",align:null},"References the required action group by its ",(0,m.mdx)("inlineCode",{parentName:"td"},"name"),".")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"stepKey")),(0,m.mdx)("td",{parentName:"tr",align:null},"string"),(0,m.mdx)("td",{parentName:"tr",align:null},"required"),(0,m.mdx)("td",{parentName:"tr",align:null},"Identifies the element within ",(0,m.mdx)("inlineCode",{parentName:"td"},"<test>"),".")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"before")),(0,m.mdx)("td",{parentName:"tr",align:null},"string"),(0,m.mdx)("td",{parentName:"tr",align:null},"optional"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"<stepKey>")," of an action or action group that must be executed next while merging.")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"after")),(0,m.mdx)("td",{parentName:"tr",align:null},"string"),(0,m.mdx)("td",{parentName:"tr",align:null},"optional"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"<stepKey>")," of an action or action group that must be executed one step before the current one while merging.")))),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"<actionGroup>")," may contain ",(0,m.mdx)("a",{parentName:"p",href:"#argument"},(0,m.mdx)("inlineCode",{parentName:"a"},"<argument>")),"."),(0,m.mdx)("h3",{id:"argument"},"argument"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"<argument>")," sets an argument that is used in the parent ",(0,m.mdx)("a",{parentName:"p",href:"#actiongroup"},(0,m.mdx)("inlineCode",{parentName:"a"},"<actionGroup>")),"."),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Attribute"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Use"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"name")),(0,m.mdx)("td",{parentName:"tr",align:null},"string"),(0,m.mdx)("td",{parentName:"tr",align:null},"optional")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"value")),(0,m.mdx)("td",{parentName:"tr",align:null},"string"),(0,m.mdx)("td",{parentName:"tr",align:null},"optional")))),(0,m.mdx)("p",null,"See ",(0,m.mdx)("a",{parentName:"p",href:"action-groups.md"},"Action groups")," for more information."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-functional-testing-framework-test-index-md-820effd5a253aacfa321.js.map