{"version":3,"file":"component---src-pages-functional-testing-framework-section-index-md-1508aa32bde23bca049e.js","mappings":"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","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/section/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"section-structure\"\n    }}>{`Section structure`}</h1>\n    <p>{`A `}<inlineCode parentName=\"p\">{`<section>`}</inlineCode>{` is a reusable part of a `}<a parentName=\"p\" {...{\n        \"href\": \"../page.md\"\n      }}><inlineCode parentName=\"a\">{`<page>`}</inlineCode></a>{` and is the standard file for defining UI elements on a page used in a test.`}</p>\n    <p>{`A `}<inlineCode parentName=\"p\">{`<section>`}</inlineCode>{` can define:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`An explicit element that has a selector equal to the constant string. Example: `}<inlineCode parentName=\"li\">{`selector=\"#add_root_category_button\"`}</inlineCode></li>\n      <li parentName=\"ul\">{`A parameterized element that contains substitutable values in the selector. Example: `}<inlineCode parentName=\"li\">{`selector=\"#element .{{var1}} .{{var2}}\"`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"substitutable-values\"\n    }}>{`Substitutable values`}</h2>\n    <p>{`Substitutable values in the test can be of the following formats:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`String literals (`}<inlineCode parentName=\"li\">{`stringLiteral`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\">{`References to a `}<a parentName=\"li\" {...{\n          \"href\": \"../data.md\"\n        }}>{`data entity`}</a>{` (XML data from the corresponding `}<inlineCode parentName=\"li\">{`.../Data/*.xml`}</inlineCode>{`) such as `}<inlineCode parentName=\"li\">{`entityName.Field`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Persisted data:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`$persistedCreateDataKey.field$`}</inlineCode>{` for data created in the scope of a `}<a parentName=\"li\" {...{\n              \"href\": \"../test/index.md#test\"\n            }}>{`test`}</a>{` using the `}<a parentName=\"li\" {...{\n              \"href\": \"../test/actions.md#createdata\"\n            }}><inlineCode parentName=\"a\">{`<createData>`}</inlineCode></a>{` action with `}<inlineCode parentName=\"li\">{`stepKey=\"persistedCreateDataKey\"`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`$$persistedCreateDataKey.field$$`}</inlineCode>{` for data created in `}<a parentName=\"li\" {...{\n              \"href\": \"../test/index.md#before\"\n            }}>{`before`}</a>{` and `}<a parentName=\"li\" {...{\n              \"href\": \"../test/index.md#after\"\n            }}>{`after`}</a>{` hooks. Even though `}<inlineCode parentName=\"li\">{`<before>`}</inlineCode>{`and `}<inlineCode parentName=\"li\">{`<after>`}</inlineCode>{` are nested inside a `}<a parentName=\"li\" {...{\n              \"href\": \"../test/index.md#test\"\n            }}>{`test`}</a>{`, persisted data is stored differently when it is done in a test hook. Therefore it must be accessed with a different notation.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`The following diagram shows the XML structure of a Functional Testing Framework section:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/commerce-testing/assets/687029bbe41c892231997834b289ef73/section-dia.svg\",\n        \"alt\": \"XML Structure of Functional Testing Framework section\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"format\"\n    }}>{`Format`}</h2>\n    <p>{`The format of a `}<inlineCode parentName=\"p\">{`<section>`}</inlineCode>{` is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<sections xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:Page/etc/SectionObject.xsd\">\n   <section name=\"\">\n      <element name=\"\" type=\"\" selector=\"\" />\n      <element name=\"\" type=\"\" selector=\"\" parameterized=\"true\"/>\n      <element name=\"\" type=\"\" selector=\"\" timeout=\"\"/>\n   </section>\n</sections>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <p>{`The following conventions apply to Functional Testing Framework sections:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<section>`}</inlineCode>{` name must be alphanumeric.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`*Section.xml`}</inlineCode>{` is stored in the `}<em parentName=\"li\">{`Section`}</em>{` directory of a module.`}</li>\n      <li parentName=\"ul\">{`The name format is `}<inlineCode parentName=\"li\">{`{Admin|Storefront}{SectionDescription}Section.xml`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Camel case is used for `}<inlineCode parentName=\"li\">{`<section>`}</inlineCode>{` elements.`}</li>\n      <li parentName=\"ul\">{`One `}<inlineCode parentName=\"li\">{`<section>`}</inlineCode>{` tag is allowed per section XML file.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Example (`}<inlineCode parentName=\"p\">{`.../Catalog/Section/AdminCategorySidebarActionSection.xml`}</inlineCode>{` file):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<sections xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:Page/etc/SectionObject.xsd\">\n    <section name=\"AdminCategorySidebarActionSection\">\n        <element name=\"AddRootCategoryButton\" type=\"button\" selector=\"#add_root_category_button\" timeout=\"30\"/>\n        <element name=\"AddSubcategoryButton\" type=\"button\" selector=\"#add_subcategory_button\" timeout=\"30\"/>\n    </section>\n</sections>\n`}</code></pre>\n    <p>{`This example uses a `}<inlineCode parentName=\"p\">{`AdminCategorySidebarActionSection`}</inlineCode>{` section. All sections with same name will be merged during test generation.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdminCategorySidebarActionSection`}</inlineCode>{` section declares two buttons:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`AddRootCategoryButton`}</inlineCode>{` - button with a `}<inlineCode parentName=\"li\">{`#add_root_category_button`}</inlineCode>{` locator on the parent web page`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`AddSubcategoryButton`}</inlineCode>{` - button with a `}<inlineCode parentName=\"li\">{`#add_subcategory_button`}</inlineCode>{` locator on the parent web page`}</li>\n    </ul>\n    <p>{`The following is an example of a call in test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<!-- Click on the button with locator \"#add_subcategory_button\" on the web page-->\n<click selector=\"{{AdminCategorySidebarActionSection.AddSubcategoryButton}}\" stepKey=\"clickOnAddSubCategory\"/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"elements-reference\"\n    }}>{`Elements reference`}</h2>\n    <h3 {...{\n      \"id\": \"section\"\n    }}>{`section`}</h3>\n    <p><inlineCode parentName=\"p\">{`<section>`}</inlineCode>{` contains the sequence of UI elements in a section of a `}<a parentName=\"p\" {...{\n        \"href\": \"../page.md\"\n      }}>{`page`}</a>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Unique section name identifier.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`deprecated`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Used to warn about the future deprecation of the section. String will appear in Allure reports and console output at runtime.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`remove`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The default is `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{`. Set to `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{` to remove this element during parsing.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"element\"\n    }}>{`element`}</h3>\n    <p><inlineCode parentName=\"p\">{`<element>`}</inlineCode>{`is a UI element used in an `}<a parentName=\"p\" {...{\n        \"href\": \"../test/actions.md\"\n      }}>{`action`}</a>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The element name; Must be alphanumeric.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The type of the element. Possible values: `}<inlineCode parentName=\"td\">{`text`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`textarea`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`input`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`button`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`checkbox`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`radio`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`checkboxset`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`radioset`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`date`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`file`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`select`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`multiselect`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`wysiwyg`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`iframe`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`block`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`selector`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://www.w3schools.com/xml/xpath_nodes.asp\"\n            }}>{`XPath`}</a>{` or `}<a parentName=\"td\" {...{\n              \"href\": \"https://www.w3schools.com/cssref/css_selectors.asp\"\n            }}>{`CSS`}</a>{` selector of the element.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`locatorFunction`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"locator-functions.md\"\n            }}>{`Locator function`}</a>{` declaration to be used in lieu of a selector.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`timeout`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The timeout after interaction with the element (in seconds). The default is `}<em parentName=\"td\">{`none`}</em>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`parameterized`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Include and set to `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{` if the `}<inlineCode parentName=\"td\">{`selector`}</inlineCode>{` for this element has parameters that need to be replaced for proper use. Learn more in `}<a parentName=\"td\" {...{\n              \"href\": \"parameterized-selectors.md\"\n            }}>{`Parameterized selectors`}</a>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`deprecated`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Used to warn about the future deprecation of the element. String will appear in Allure reports and console output at runtime.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`remove`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The default is `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{`. Set to `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{` to remove this element during parsing.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"timeout-attribute\"\n    }}><inlineCode parentName=\"h4\">{`timeout`}</inlineCode>{` attribute`}</h4>\n    <p>{`The attribute adds the `}<a parentName=\"p\" {...{\n        \"href\": \"../test/actions.md#waitforpageload\"\n      }}>{`waitForPageLoad`}</a>{` action after a reference to the element in test.\nThe most usual use case is a test step with a button click action.`}</p>\n    <p><strong parentName=\"p\">{`Use case`}</strong>{`: Set a timeout of 30 seconds after clicking the `}<inlineCode parentName=\"p\">{`signIn`}</inlineCode>{` button.`}</p>\n    <p>{`The section element code declaration containing the timeout attribute:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`StorefrontCustomerSignInPopupFormSection.xml`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`...\n<element name=\"signIn\" type=\"button\" selector=\"#send2\" timeout=\"30\"/>\n...\n`}</code></pre>\n    <p>{`The test step that covers the use case:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`CaptchaWithDisabledGuestCheckoutTest.xml`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`...\n<click selector=\"{{StorefrontCustomerSignInPopupFormSection.signIn}}\" stepKey=\"clickSignIn\"/>\n...\n`}</code></pre>\n    <p>{`Whenever the `}<inlineCode parentName=\"p\">{`signIn`}</inlineCode>{` button is used in a test, the Functional Testing Framework will add a 30 second `}<inlineCode parentName=\"p\">{`waitForPageLoad`}</inlineCode>{` action immediately after the `}<inlineCode parentName=\"p\">{`click`}</inlineCode>{`.`}</p>\n    {\n      /* Link definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}