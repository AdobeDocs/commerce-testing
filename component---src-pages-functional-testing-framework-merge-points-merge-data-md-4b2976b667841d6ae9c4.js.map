{"version":3,"file":"component---src-pages-functional-testing-framework-merge-points-merge-data-md-4b2976b667841d6ae9c4.js","mappings":"2RAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,cACH,eACL,kBAAK,qEACL,kBAAK,kCAAgC,uBAAYC,WAAW,KAAM,YAAyB,QAAM,uBAAYA,WAAW,KAAM,QAAqB,iHACnJ,eACE,GAAM,mBACH,oBACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,0qBAeP,eACE,GAAM,iBACH,kBACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,oQAMP,eACE,GAAM,oBACH,qBACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,myBAoBV,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/merge-points/merge-data.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"merge-data\"\n    }}>{`Merge data`}</h1>\n    <p>{`Data objects can be merged to cover the needs of your extension.`}</p>\n    <p>{`In this example we update the `}<inlineCode parentName=\"p\">{`quantity`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`1001`}</inlineCode>{` and add a new piece of data relevant to our extension. This will affect all other tests that use this data.`}</p>\n    <h2 {...{\n      \"id\": \"starting-entity\"\n    }}>{`Starting entity`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"SimpleProduct\" type=\"product\">\n    <data key=\"sku\" unique=\"suffix\">SimpleProduct</data>\n    <data key=\"type_id\">simple</data>\n    <data key=\"attribute_set_id\">4</data>\n    <data key=\"name\" unique=\"suffix\">SimpleProduct</data>\n    <data key=\"price\">123.00</data>\n    <data key=\"visibility\">4</data>\n    <data key=\"status\">1</data>\n    <data key=\"quantity\">1000</data>\n    <data key=\"urlKey\" unique=\"suffix\">simpleproduct</data>\n    <data key=\"weight\">1</data>\n    <requiredEntity type=\"product_extension_attribute\">EavStockItem</requiredEntity>\n    <requiredEntity type=\"custom_attribute_array\">CustomAttributeCategoryIds</requiredEntity>\n</entity>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"file-to-merge\"\n    }}>{`File to merge`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"SimpleProduct\" type=\"product\">\n    <!-- myExtensionData will simply be added to the product and quantity will be changed to 1001. -->\n    <data key=\"quantity\">1001</data>\n    <data key=\"myExtensionData\">dataHere</data>\n</entity>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"resultant-entity\"\n    }}>{`Resultant entity`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"SimpleProduct\" type=\"product\">\n    <data key=\"sku\" unique=\"suffix\">SimpleProduct</data>\n    <data key=\"type_id\">simple</data>\n    <data key=\"attribute_set_id\">4</data>\n    <data key=\"name\" unique=\"suffix\">SimpleProduct</data>\n    <data key=\"price\">123.00</data>\n    <data key=\"visibility\">4</data>\n    <data key=\"status\">1</data>\n    <!-- Quantity updated -->\n    <data key=\"quantity\">1001</data>\n    <data key=\"urlKey\" unique=\"suffix\">simpleproduct</data>\n    <data key=\"weight\">1</data>\n    <requiredEntity type=\"product_extension_attribute\">EavStockItem</requiredEntity>\n    <requiredEntity type=\"custom_attribute_array\">CustomAttributeCategoryIds</requiredEntity>\n    <!-- Data key merged -->\n    <data key=\"myExtensionData\">dataHere</data>\n</entity>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}