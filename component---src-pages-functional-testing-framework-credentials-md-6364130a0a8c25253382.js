"use strict";(self.webpackChunkcommerce_testing=self.webpackChunkcommerce_testing||[]).push([[6347],{47507:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return d},default:function(){return u}});var t,r=n(87462),i=n(63366),s=(n(15007),n(64983)),l=n(91515),o=["components"],d={},m=(t="InlineAlert",function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.mdx)("div",e)}),p={_frontmatter:d},c=l.Z;function u(e){var a=e.components,n=(0,i.Z)(e,o);return(0,s.mdx)(c,(0,r.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,s.mdx)("h1",{id:"credentials"},"Credentials"),(0,s.mdx)("p",null,"When you test functionality that involves external services such as UPS, FedEx, PayPal, or SignifyD,\nuse the Functional Testing Framework credentials feature to hide sensitive ",(0,s.mdx)("a",{parentName:"p",href:"data.md"},"data")," like integration tokens and API keys."),(0,s.mdx)("p",null,"Currently, the Functional Testing Framework supports three types of credential storage:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},".credentials file")),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"HashiCorp Vault")),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"AWS Secrets Manager"))),(0,s.mdx)("h2",{id:"configure-file-storage"},"Configure File Storage"),(0,s.mdx)("p",null,"The Functional Testing Framework creates a sample file for credentials during ",(0,s.mdx)("a",{parentName:"p",href:"getting-started.md"},"initial setup"),": ",(0,s.mdx)("inlineCode",{parentName:"p"},"magento2/dev/tests/acceptance/.credentials.example"),".\nThe file contains an example list of keys for fields that can require credentials."),(0,s.mdx)("h3",{id:"create-credentials"},"Create ",(0,s.mdx)("inlineCode",{parentName:"h3"},".credentials")),(0,s.mdx)("p",null,"To make the Functional Testing Framework process the file with credentials, in the command line, navigate to ",(0,s.mdx)("inlineCode",{parentName:"p"},"magento2/dev/tests/acceptance/")," and rename ",(0,s.mdx)("inlineCode",{parentName:"p"},".credentials.example")," to ",(0,s.mdx)("inlineCode",{parentName:"p"},".credentials"),"."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"cd dev/tests/acceptance/\n")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"cp .credentials.example .credentials\n")),(0,s.mdx)("h3",{id:"add-credentials-to-gitignore"},"Add ",(0,s.mdx)("inlineCode",{parentName:"h3"},".credentials")," to ",(0,s.mdx)("inlineCode",{parentName:"h3"},".gitignore")),(0,s.mdx)("p",null,"Verify that the file is excluded from tracking by ",(0,s.mdx)("inlineCode",{parentName:"p"},".gitignore")," (unless you need this behavior):"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"git check-ignore .credentials\n")),(0,s.mdx)("p",null,"The command outputs the path if the file is excluded:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-terminal"},".credentials\n")),(0,s.mdx)("h3",{id:"define-sensitive-data-in-the-credentials-file"},"Define sensitive data in the ",(0,s.mdx)("inlineCode",{parentName:"h3"},".credentials")," file"),(0,s.mdx)("p",null,"Open the ",(0,s.mdx)("inlineCode",{parentName:"p"},".credentials")," file and, for Adobe Commerce or Magento Open Source core credentials, uncomment the fields you want to use and add your values:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-conf"},"...\n# Credentials for the USPS service\nmagento/carriers_usps_userid=usps_test_user\nmagento/carriers_usps_password=Lmgxvrq89uPwECeV\n\n# Credentials for the DHL service\n#magento/carriers_dhl_id_us=dhl_test_user\n#magento/carriers_dhl_password_us=Mlgxv3dsagVeG\n....\n")),(0,s.mdx)("h3",{id:"add-key-and-value-pair-for-admin-password"},"Add key and value pair for admin password"),(0,s.mdx)("p",null,"magento/MAGENTO_ADMIN_PASSWORD  must contain the user password required for authorization in the Admin area. Example: magento/MAGENTO_ADMIN_PASSWORD=mycustompassword"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-conf"},"...\n# Admin password\nmagento/MAGENTO_ADMIN_PASSWORD =123123q\n\n....\n")),(0,s.mdx)("p",null,"Or add new key/value pairs for your own credentials. The keys use the following format:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-conf"},"<vendor>/<key_name>=<key_value>\n")),(0,s.mdx)(m,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,s.mdx)("p",null,"The ",(0,s.mdx)("inlineCode",{parentName:"p"},"/")," symbol is not supported in a ",(0,s.mdx)("inlineCode",{parentName:"p"},"key_name")," other than the one after your vendor or extension name."),(0,s.mdx)("p",null,"Otherwise you are free to use any other ",(0,s.mdx)("inlineCode",{parentName:"p"},"key_name")," you like, as they are merely the keys to reference from your tests."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-conf"},"# Credentials for the MyAwesome service\nvendor/my_awesome_service_token=rRVSVnh3cbDsVG39oTMz4A\n")),(0,s.mdx)("h2",{id:"configure-vault-storage"},"Configure Vault Storage"),(0,s.mdx)("p",null,"Hashicorp vault secures, stores, and tightly controls access to data in modern computing.\nIt provides advanced data protection for your testing credentials."),(0,s.mdx)("p",null,"The Functional Testing Framework works with both ",(0,s.mdx)("inlineCode",{parentName:"p"},"vault enterprise")," and ",(0,s.mdx)("inlineCode",{parentName:"p"},"vault open source")," that use ",(0,s.mdx)("inlineCode",{parentName:"p"},"KV Version 2")," secret engine."),(0,s.mdx)("h3",{id:"install-vault-cli"},"Install vault CLI"),(0,s.mdx)("p",null,"Download and install vault CLI tool if you want to run or develop tests locally. ",(0,s.mdx)("a",{parentName:"p",href:"https://www.hashicorp.com/products/vault/"},"Download Vault")),(0,s.mdx)("h3",{id:"authenticate-to-vault-via-vault-cli"},"Authenticate to vault via vault CLI"),(0,s.mdx)("p",null,"Authenticate to vault server via the vault CLI tool: ",(0,s.mdx)("a",{parentName:"p",href:"https://www.vaultproject.io/docs/commands/login.html"},"Login Vault"),"."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"vault login -method -path\n")),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},"Do not")," use ",(0,s.mdx)("inlineCode",{parentName:"p"},"-no-store")," command option, as the Functional Testing Framework will rely on the persisted token in the token helper (usually the local filesystem) for future API requests."),(0,s.mdx)("h3",{id:"store-secrets-in-vault"},"Store secrets in vault"),(0,s.mdx)("p",null,"The Functional Testing Framework uses the ",(0,s.mdx)("inlineCode",{parentName:"p"},"KV Version 2")," secret engine for secret storage.\nMore information for working with ",(0,s.mdx)("inlineCode",{parentName:"p"},"KV Version 2")," can be found in ",(0,s.mdx)("a",{parentName:"p",href:"https://www.vaultproject.io/docs/secrets/kv/kv-v2.html"},"Vault KV2"),"."),(0,s.mdx)("h4",{id:"secrets-path-and-key-convention"},"Secrets path and key convention"),(0,s.mdx)("p",null,"The path and key for secret data must follow the format:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-conf"},"<SECRETS_BASE_PATH>/mftf/<VENDOR>/<SECRET_KEY>\n")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-conf"},"# Secret path and key for carriers_usps_userid\nsecret/mftf/magento/carriers_usps_userid\n\n# Secret path and key for carriers_usps_password\nsecret/mftf/magento/carriers_usps_password\n")),(0,s.mdx)("h4",{id:"write-secrets-to-vault"},"Write secrets to vault"),(0,s.mdx)("p",null,"You can use vault CLI or API to write secret data (credentials, etc) to vault. Here is a CLI example:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"vault kv put secret/mftf/magento/carriers_usps_userid carriers_usps_userid=usps_test_user\nvault kv put secret/mftf/magento/carriers_usps_password carriers_usps_password=Lmgxvrq89uPwECeV\n")),(0,s.mdx)("h3",{id:"setup-the-framework-to-use-vault"},"Setup the framework to use vault"),(0,s.mdx)("p",null,"Add vault configuration environment variables ",(0,s.mdx)("a",{parentName:"p",href:"configuration.md#credential_vault_address"},(0,s.mdx)("inlineCode",{parentName:"a"},"CREDENTIAL_VAULT_ADDRESS"))," and ",(0,s.mdx)("a",{parentName:"p",href:"configuration.md#credential_vault_secret_base_path"},(0,s.mdx)("inlineCode",{parentName:"a"},"CREDENTIAL_VAULT_SECRET_BASE_PATH")),"\nfrom ",(0,s.mdx)("inlineCode",{parentName:"p"},"etc/config/.env.example")," in ",(0,s.mdx)("inlineCode",{parentName:"p"},".env"),".\nSet values according to your vault server configuration."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-conf"},"# Default vault dev server\nCREDENTIAL_VAULT_ADDRESS=http://127.0.0.1:8200\nCREDENTIAL_VAULT_SECRET_BASE_PATH=secret\n")),(0,s.mdx)("h2",{id:"configure-aws-secrets-manager"},"Configure AWS Secrets Manager"),(0,s.mdx)("p",null,"AWS Secrets Manager offers secret management that supports:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},"Secret rotation with built-in integration for Amazon RDS, Amazon Redshift, and Amazon DocumentDB"),(0,s.mdx)("li",{parentName:"ul"},"Fine-grained policies and permissions"),(0,s.mdx)("li",{parentName:"ul"},"Audit secret rotation centrally for resources in the AWS Cloud, third-party services, and on-premises")),(0,s.mdx)("h3",{id:"prerequisites"},"Prerequisites"),(0,s.mdx)("h4",{id:"use-aws-secrets-manager-from-your-own-aws-account"},"Use AWS Secrets Manager from your own AWS account"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},"An AWS account with Secrets Manager service"),(0,s.mdx)("li",{parentName:"ul"},"An IAM user with AWS Secrets Manager access permission")),(0,s.mdx)("h4",{id:"use-aws-secrets-manager-in-cicd"},"Use AWS Secrets Manager in CI/CD"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},"AWS account ID where the AWS Secrets Manager service is hosted"),(0,s.mdx)("li",{parentName:"ul"},"Authorized CI/CD EC2 instances with AWS Secrets Manager service access IAM role attached")),(0,s.mdx)("h3",{id:"store-secrets-in-aws-secrets-manager"},"Store secrets in AWS Secrets Manager"),(0,s.mdx)("h4",{id:"secrets-format"},"Secrets format"),(0,s.mdx)("p",null,(0,s.mdx)("inlineCode",{parentName:"p"},"Secret Name")," and ",(0,s.mdx)("inlineCode",{parentName:"p"},"Secret Value")," are two key pieces of information for creating a secret."),(0,s.mdx)("p",null,(0,s.mdx)("inlineCode",{parentName:"p"},"Secret Value")," can be either plaintext or key/value pairs in JSON format.  "),(0,s.mdx)("p",null,(0,s.mdx)("inlineCode",{parentName:"p"},"Secret Name")," must use the following format:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-conf"},"mftf/<VENDOR>/<YOUR/SECRET/KEY>\n")),(0,s.mdx)("p",null,(0,s.mdx)("inlineCode",{parentName:"p"},"Secret Value")," can be stored in two different formats: plaintext or key/value pairs."),(0,s.mdx)("p",null,"For plaintext format, ",(0,s.mdx)("inlineCode",{parentName:"p"},"Secret Value")," can be any string you want to secure."),(0,s.mdx)("p",null,"For key/value pairs format, ",(0,s.mdx)("inlineCode",{parentName:"p"},"Secret Value")," is a key/value pair with ",(0,s.mdx)("inlineCode",{parentName:"p"},"key")," the same as ",(0,s.mdx)("inlineCode",{parentName:"p"},"Secret Name")," without ",(0,s.mdx)("inlineCode",{parentName:"p"},"mftf/<VENDOR>/")," prefix,  which is ",(0,s.mdx)("inlineCode",{parentName:"p"},"<YOUR/SECRET/KEY>"),", and value can be any string you want to secure."),(0,s.mdx)("h5",{id:"create-secrets-using-aws-cli"},"Create Secrets using AWS CLI"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},'aws secretsmanager create-secret --name "mftf/magento/shipping/carriers_usps_userid" --description "Carriers USPS user id" --secret-string "1234567"\n')),(0,s.mdx)("h5",{id:"create-secrets-using-aws-console"},"Create Secrets using AWS Console"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},"Sign in to the AWS Secrets Manager console"),(0,s.mdx)("li",{parentName:"ul"},"Choose Store a new secret"),(0,s.mdx)("li",{parentName:"ul"},'In the Select secret type section, specify "Other type of secret"'),(0,s.mdx)("li",{parentName:"ul"},"For ",(0,s.mdx)("inlineCode",{parentName:"li"},"Secret Name"),", ",(0,s.mdx)("inlineCode",{parentName:"li"},"Secret Key")," and ",(0,s.mdx)("inlineCode",{parentName:"li"},"Secret Value")," field, for example, to save the same secret in key/value JSON format, you should use")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-conf"},"# Secret Name\nmftf/magento/shipping/carriers_usps_userid\n\n# Secret Key\nshipping/carriers_usps_userid\n\n# Secret Value\n1234567\n")),(0,s.mdx)("h3",{id:"setup-the-framework-to-use-aws-secrets-manager"},"Setup the framework to use AWS Secrets Manager"),(0,s.mdx)("p",null,"To use AWS Secrets Manager, the AWS region to connect to is required. You can set it through environment variable ",(0,s.mdx)("a",{parentName:"p",href:"configuration.md#credential_aws_secrets_manager_region"},(0,s.mdx)("inlineCode",{parentName:"a"},"CREDENTIAL_AWS_SECRETS_MANAGER_REGION"))," in ",(0,s.mdx)("inlineCode",{parentName:"p"},".env"),"."),(0,s.mdx)("p",null,"The Functional Testing Framework uses the recommended ",(0,s.mdx)("a",{parentName:"p",href:"https://docs.aws.amazon.com/sdk-for-php/v3/developer-guide/guide_credentials.html"},"Default Credential Provider Chain")," to establish connection to AWS Secrets Manager service.\nYou can setup credentials according to ",(0,s.mdx)("a",{parentName:"p",href:"https://docs.aws.amazon.com/sdk-for-php/v3/developer-guide/guide_credentials.html"},"Default Credential Provider Chain")," and there is no Functional Testing Framework-specific setup required.\nOptionally, however, you can explicitly set AWS profile through environment variable ",(0,s.mdx)("a",{parentName:"p",href:"configuration.md#credential_aws_secrets_manager_profile"},(0,s.mdx)("inlineCode",{parentName:"a"},"CREDENTIAL_AWS_SECRETS_MANAGER_PROFILE"))," in ",(0,s.mdx)("inlineCode",{parentName:"p"},".env"),"."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-conf"},"# Sample AWS Secrets Manager configuration\nCREDENTIAL_AWS_SECRETS_MANAGER_REGION=us-east-1\nCREDENTIAL_AWS_SECRETS_MANAGER_PROFILE=default\n")),(0,s.mdx)("h3",{id:"optionally-set-credential_aws_account_id-environment-variable"},"Optionally set CREDENTIAL_AWS_ACCOUNT_ID environment variable"),(0,s.mdx)("p",null,"In case AWS credentials cannot resolve to a valid AWS account, full AWS KMS (",(0,s.mdx)("a",{parentName:"p",href:"https://aws.amazon.com/kms/"},"Key Management Service"),") key ARN (",(0,s.mdx)("a",{parentName:"p",href:"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"},"Amazon Resource Name"),") is required.\nYou will also need to set ",(0,s.mdx)("inlineCode",{parentName:"p"},"CREDENTIAL_AWS_ACCOUNT_ID")," environment variable so that the Functional Testing Framework can construct the full ARN. This is mostly used for CI/CD."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-bash"},"export CREDENTIAL_AWS_ACCOUNT_ID=<Your_12_Digits_AWS_Account_ID>\n")),(0,s.mdx)("h2",{id:"configure-multiple-credential-storage"},"Configure multiple credential storage"),(0,s.mdx)("p",null,"It is possible and sometimes useful to setup and use multiple credential storage at the same time.\nIn this case, the test are able to read secret data at runtime from all storage options. The Functional Testing Framework will use the following precedence:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-text"},".credentials File > HashiCorp Vault > AWS Secrets Manager\n")),(0,s.mdx)("h2",{id:"use-credentials-in-a-test"},"Use credentials in a test"),(0,s.mdx)("p",null,"Credentials can be used in actions: ",(0,s.mdx)("a",{parentName:"p",href:"test/actions.md#fillfield"},(0,s.mdx)("inlineCode",{parentName:"a"},"fillField")),", ",(0,s.mdx)("a",{parentName:"p",href:"test/actions.md#magentocli"},(0,s.mdx)("inlineCode",{parentName:"a"},"magentoCLI")),", and ",(0,s.mdx)("a",{parentName:"p",href:"test/actions.md#createdata"},(0,s.mdx)("inlineCode",{parentName:"a"},"createData")),"."),(0,s.mdx)("p",null,"Define the value as a reference to the corresponding key in the credentials file or vault such as ",(0,s.mdx)("inlineCode",{parentName:"p"},"{{_CREDS.my_data_key}}"),":"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("inlineCode",{parentName:"li"},"_CREDS")," is an environment constant pointing to the ",(0,s.mdx)("inlineCode",{parentName:"li"},".credentials")," file"),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("inlineCode",{parentName:"li"},"my_data_key")," is a key in the the ",(0,s.mdx)("inlineCode",{parentName:"li"},".credentials")," file or vault that contains the value to be used in a test step",(0,s.mdx)("ul",{parentName:"li"},(0,s.mdx)("li",{parentName:"ul"},"for File Storage, ensure your key contains the vendor prefix, which is ",(0,s.mdx)("inlineCode",{parentName:"li"},"vendor/my_data_key"))))),(0,s.mdx)("p",null,"For example, to reference secret data in the ",(0,s.mdx)("a",{parentName:"p",href:"test/actions.md#fillfield"},(0,s.mdx)("inlineCode",{parentName:"a"},"fillField"))," action, use the ",(0,s.mdx)("inlineCode",{parentName:"p"},"userInput")," attribute using a typical File Storage:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-xml"},'<fillField stepKey="FillApiToken" selector=".api-token" userInput="{{_CREDS.vendor/my_data_key}}" />\n')),(0,s.mdx)("h2",{id:"implementation-details"},"Implementation details"),(0,s.mdx)("p",null,"The generated tests do not contain credentials values.\nThe Functional Testing Framework dynamically retrieves, encrypts, and decrypts the sensitive data during test execution.\nDecrypted credentials do not appear in the console, error logs, or ",(0,s.mdx)("a",{parentName:"p",href:"reporting.md"},"test reports"),".\nThe decrypted values are only available in the ",(0,s.mdx)("inlineCode",{parentName:"p"},".credentials")," file or within vault."),(0,s.mdx)(m,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,s.mdx)("p",null,"The test delivered with the Adobe Commerce and Magento Open Source application do not use credentials and do not cover external services, because of sensitivity of the data."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-functional-testing-framework-credentials-md-6364130a0a8c25253382.js.map