{"version":3,"file":"component---src-pages-functional-testing-framework-data-md-548dd89f65eab921dad8.js","mappings":"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","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/data.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"input-testing-data\"\n    }}>{`Input testing data`}</h1>\n    <p>{`The Functional Testing Framework enables you to specify and use `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entities defined in XML. Default `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entities are provided for use and as templates for entity creation and manipulation.\nThe following diagram shows the XML structure of a data object:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/commerce-testing/assets/15879c742aceb4f63c9b1dc7f655b3d6/data-dia.svg\",\n        \"alt\": \"Data Object\"\n      }}></img></p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entities are stored in `}<inlineCode parentName=\"p\">{`<module_dir>/Test/Mftf/Data/`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"supply-data-to-test-by-reference-to-a-data-entity\"\n    }}>{`Supply data to test by reference to a data entity`}</h2>\n    <p>{`Test steps requiring `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` input in an action, like filling a field with a string, may reference an attribute from a data entity:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`userInput=\"{{SimpleSubCategory.name}}\"\n`}</code></pre>\n    <p>{`In this example:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SimpleSubCategory`}</inlineCode>{` is an entity name.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name`}</inlineCode>{` is a `}<inlineCode parentName=\"li\">{`<data>`}</inlineCode>{` key of the entity. The corresponding value will be assigned to `}<inlineCode parentName=\"li\">{`userInput`}</inlineCode>{` as a result.`}</li>\n    </ul>\n    <p>{`The following is an example of the usage of `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entity in the `}<inlineCode parentName=\"p\">{`Magento/Customer/Test/Mftf/Test/AdminCustomersAllCustomersNavigateMenuTest.xml`}</inlineCode>{` test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<actionGroup ref=\"AdminNavigateMenuActionGroup\" stepKey=\"navigateToAllCustomerPage\">\n    <argument name=\"menuUiId\" value=\"{{AdminMenuCustomers.dataUiId}}\"/>\n    <argument name=\"submenuUiId\" value=\"{{AdminMenuCustomersAllCustomers.dataUiId}}\"/>\n</actionGroup>\n`}</code></pre>\n    <p>{`In the above example:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`AdminMenuCustomers`}</inlineCode>{` is an entity name.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dataUiId`}</inlineCode>{` is a `}<inlineCode parentName=\"li\">{`<data>`}</inlineCode>{` key of the entity.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"environmental-data\"\n    }}>{`Environmental data`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`userInput=\"{{_ENV.MAGENTO_ADMIN_USERNAME}}\"\n`}</code></pre>\n    <p>{`In this example:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`_ENV`}</inlineCode>{` is a reference to the `}<inlineCode parentName=\"li\">{`dev/tests/acceptance/.env`}</inlineCode>{` file, where basic environment variables are set.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MAGENTO_ADMIN_USERNAME`}</inlineCode>{` is a name of an environment variable.\nThe corresponding value will be assigned to `}<inlineCode parentName=\"li\">{`userInput`}</inlineCode>{` as a result.`}</li>\n    </ul>\n    <p>{`The following is an example of the usage of `}<inlineCode parentName=\"p\">{`_ENV`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`Magento/Braintree/Test/Mftf/ActionGroup/AdminDeleteRoleActionGroup.xml`}</inlineCode>{` action group:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<fillField stepKey=\"TypeCurrentPassword\" selector=\"{{AdminDeleteRoleSection.current_pass}}\" userInput=\"{{_ENV.MAGENTO_ADMIN_PASSWORD}}\"/>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"sensitive-data\"\n    }}>{`Sensitive data`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`userInput=\"{{_CREDS.my_secret_token}}\"\n`}</code></pre>\n    <p>{`In this example:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`_CREDS`}</inlineCode>{` is a constant to reference to the `}<inlineCode parentName=\"li\">{`dev/tests/acceptance/.credentials`}</inlineCode>{` file, where sensitive data and secrets are stored for use in a test.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MY_SECRET_TOKEN`}</inlineCode>{` is the name of a key in the credentials variable.\nThe corresponding value of the credential will be assigned to `}<inlineCode parentName=\"li\">{`userInput`}</inlineCode>{` as a result.`}</li>\n      <li parentName=\"ul\">{`The decrypted values are only available in the `}<inlineCode parentName=\"li\">{`.credentials`}</inlineCode>{` file in which they are stored.`}</li>\n    </ul>\n    <p>{`Learn more in `}<a parentName=\"p\" {...{\n        \"href\": \"credentials.md\"\n      }}>{`Credentials`}</a>{`.`}</p>\n    <p>{`The following is an example of the usage of `}<inlineCode parentName=\"p\">{`_CREDS`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`Magento/Braintree/Test/Mftf/Data/BraintreeData.xml`}</inlineCode>{` data entity:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"MerchantId\" type=\"merchant_id\">\n    <data key=\"value\">{{_CREDS.magento/braintree_enabled_fraud_merchant_id}}</data>\n</entity>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"persist-a-data-entity-as-a-prerequisite-of-a-test\"\n    }}>{`Persist a data entity as a prerequisite of a test`}</h2>\n    <p>{`A test can specify an entity to be persisted (created in the database) so that the test actions could operate on the existing known data.`}</p>\n    <p>{`Example of referencing `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` in a test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`userInput=\"$createCustomer.email$\"\n`}</code></pre>\n    <p>{`In this example:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`createCustomer`}</inlineCode>{` is a step key of the corresponding test step that creates an entity.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`email`}</inlineCode>{` is a data key of the entity.\nThe corresponding value will be assigned to `}<inlineCode parentName=\"li\">{`userInput`}</inlineCode>{` as a result.`}</li>\n    </ul>\n    <p>{`The following is an example of the usage of the persistant data in `}<inlineCode parentName=\"p\">{`Magento/Customer/Test/Mftf/Test/AdminCreateCustomerWithCountryUSATest.xml`}</inlineCode>{` test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<actionGroup ref=\"AdminFilterCustomerByEmail\" stepKey=\"filterTheCustomerByEmail\">\n    <argument name=\"email\" value=\"$$createCustomer.email$$\"/>\n</actionGroup>\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`As of Functional Testing Framework 2.3.6, you no longer need to differentiate between scopes (a test, a hook, or a suite) for persisted data when referencing it in tests.`}</p>\n    <p>{`The Functional Testing Framework now stores the persisted data and attempts to retrieve it using the combination of `}<inlineCode parentName=\"p\">{`stepKey`}</inlineCode>{` and the scope of where it has been called.\nThe current scope is preferred, then widening to `}<em parentName=\"p\">{`test > hook > suite`}</em>{` or `}<em parentName=\"p\">{`hook > test > suite`}</em>{`.`}</p>\n    <p>{`This emphasizes the practice for the `}<inlineCode parentName=\"p\">{`stepKey`}</inlineCode>{` of `}<inlineCode parentName=\"p\">{`createData`}</inlineCode>{` to be descriptive and unique, as a duplicated `}<inlineCode parentName=\"p\">{`stepKey`}</inlineCode>{` in both a `}<inlineCode parentName=\"p\">{`<test>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<before>`}</inlineCode>{` prefers the `}<inlineCode parentName=\"p\">{`<test>`}</inlineCode>{` data.`}</p>\n    <h2 {...{\n      \"id\": \"use-data-returned-by-test-actions\"\n    }}>{`Use data returned by test actions`}</h2>\n    <p>{`A test can also reference data that was returned as a result of `}<a parentName=\"p\" {...{\n        \"href\": \"test/actions.md#actions-returning-a-variable\"\n      }}>{`test actions`}</a>{`, like the action `}<inlineCode parentName=\"p\">{`<grabValueFrom selector=\"someSelector\" stepKey=\"grabStepKey>`}</inlineCode>{`.`}</p>\n    <p>{`Further in the test, the data grabbed by the `}<inlineCode parentName=\"p\">{`someSelector`}</inlineCode>{` selector can be referenced using the `}<inlineCode parentName=\"p\">{`stepKey`}</inlineCode>{` value. In this case, it is `}<inlineCode parentName=\"p\">{`grabStepKey`}</inlineCode>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`stepKey`}</inlineCode>{` value can only be referenced within the test scope that it is defined in (`}<inlineCode parentName=\"p\">{`test`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`before/after`}</inlineCode>{`).`}</p>\n    <p>{`The following example shows the usage of `}<inlineCode parentName=\"p\">{`grabValueFrom`}</inlineCode>{` in testing, where the returned value is used by action's `}<inlineCode parentName=\"p\">{`stepKey`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<grabValueFrom selector=\"someSelector\" stepKey=\"grabStepKey\"/>\n<fillField selector=\".functionalTestSelector\" userInput=\"{$grabStepKey}\" stepKey=\"fillFieldKey1\"/>\n`}</code></pre>\n    <p>{`The following is an example of the `}<inlineCode parentName=\"p\">{`Magento/Catalog/Test/Mftf/ActionGroup/AssertDiscountsPercentageOfProductsActionGroup.xml`}</inlineCode>{` test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<grabValueFrom selector=\"{{AdminProductFormAdvancedPricingSection.productTierPricePercentageValuePriceInput('0')}}\" stepKey=\"grabProductTierPriceInput\"/>\n<assertEquals stepKey=\"assertProductTierPriceInput\">\n    <expectedResult type=\"string\">{{amount}}</expectedResult>\n    <actualResult type=\"string\">$grabProductTierPriceInput</actualResult>\n</assertEquals>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"hard-coded-data-input\"\n    }}>{`Hard-coded data input`}</h2>\n    <p>{`The data to operate against can be included as literals in a test. Hard-coded data input can be useful in assertions.`}</p>\n    <p>{`See also `}<a parentName=\"p\" {...{\n        \"href\": \"test/actions.md\"\n      }}>{`Actions`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`userInput=\"We'll email you an order confirmation with details and tracking info.\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"format\"\n    }}>{`Format`}</h2>\n    <p>{`The format of the `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entity is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<entities xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:DataGenerator/etc/dataProfileSchema.xsd\">\n    <entity name=\"\" type=\"\">\n        <data key=\"\"></data>\n    </entity>\n    <entity name=\"\" type=\"\">\n        <data key=\"\" unique=\"\"></data>\n        <var key=\"\" entityType=\"\" entityKey=\"\"/>\n    </entity>\n</entities>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <p>{`The following conventions apply to `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entities:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A `}<inlineCode parentName=\"li\">{`<data>`}</inlineCode>{` file may contain multiple data entities.`}</li>\n      <li parentName=\"ul\">{`Camel case is used for `}<inlineCode parentName=\"li\">{`<data>`}</inlineCode>{` elements. The name represents the `}<inlineCode parentName=\"li\">{`<data>`}</inlineCode>{` type. For example, a file with customer data is `}<inlineCode parentName=\"li\">{`CustomerData.xml`}</inlineCode>{`. A file for simple product would be `}<inlineCode parentName=\"li\">{`SimpleProductData.xml`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Camel case is used for the entity name.`}</li>\n      <li parentName=\"ul\">{`The file name must have the suffix `}<inlineCode parentName=\"li\">{`Data.xml`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Example (`}<inlineCode parentName=\"p\">{`Magento/Catalog/Test/Mftf/Data/CategoryData.xml`}</inlineCode>{` file):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<entities xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:DataGenerator/etc/dataProfileSchema.xsd\">\n    <entity name=\"_defaultCategory\" type=\"category\">\n        <data key=\"name\" unique=\"suffix\">simpleCategory</data>\n        <data key=\"name_lwr\" unique=\"suffix\">simplecategory</data>\n        <data key=\"is_active\">true</data>\n    </entity>\n    <entity name=\"SimpleSubCategory\" type=\"category\">\n        <data key=\"name\" unique=\"suffix\">SimpleSubCategory</data>\n        <data key=\"name_lwr\" unique=\"suffix\">simplesubcategory</data>\n        <data key=\"is_active\">true</data>\n        <data key=\"include_in_menu\">true</data>\n    </entity>\n</entities>\n`}</code></pre>\n    <p>{`This example declares two `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` entities: `}<inlineCode parentName=\"p\">{`_defaultCategory`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`SimpleSubCategory`}</inlineCode>{`. They set the data required for `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.magento.com/user-guide/catalog/category-create.html\"\n      }}>{`category creation`}</a>{`.`}</p>\n    <p>{`All entities that have the same name will be merged during test generation. Both entities are of the `}<inlineCode parentName=\"p\">{`category`}</inlineCode>{` type.`}</p>\n    <p><inlineCode parentName=\"p\">{`_defaultCategory`}</inlineCode>{` sets three data fields:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name`}</inlineCode>{` defines the category name as `}<inlineCode parentName=\"li\">{`simpleCategory`}</inlineCode>{` with a unique suffix. Example: `}<inlineCode parentName=\"li\">{`simpleCategory598742365`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name_lwr`}</inlineCode>{` defines the category name in lowercase format with a unique suffix. Example: `}<inlineCode parentName=\"li\">{`simplecategory697543215`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`is_active`}</inlineCode>{` sets the enable category to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`.`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`SimpleSubCategory`}</inlineCode>{` sets four data fields:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name`}</inlineCode>{` that defines the category name with a unique suffix. Example: `}<inlineCode parentName=\"li\">{`SimpleSubCategory458712365`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`name_lwr`}</inlineCode>{` that defines the category name in lowercase format with a unique suffix. Example: `}<inlineCode parentName=\"li\">{`simplesubcategory753698741`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`is_active`}</inlineCode>{` sets the enable category to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`include_in_menu`}</inlineCode>{` that sets the include in the menu to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`The following is an example of a call in test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<fillField selector=\"{{AdminCategoryBasicFieldSection.categoryNameInput}}\" userInput=\"{{_defaultCategory.name}}\" stepKey=\"enterCategoryName\"/>\n`}</code></pre>\n    <p>{`This action inputs data from the `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` of the `}<inlineCode parentName=\"p\">{`_defaultCategory`}</inlineCode>{` entity (for example, `}<inlineCode parentName=\"p\">{`simpleCategory598742365`}</inlineCode>{`) into the field with the locator defined in the selector of the `}<inlineCode parentName=\"p\">{`categoryNameInput`}</inlineCode>{` element of the `}<inlineCode parentName=\"p\">{`AdminCategoryBasicFieldSection`}</inlineCode>{`.`}</p>\n    <p>{`You can also call data from the xml definition of a `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` tag directly:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"NewAdminUser\" type=\"user\">\n    <data key=\"username\" unique=\"suffix\">admin</data>\n    <data key=\"current_password\">{{AnotherUser.current_password}}</data>  <!-- Data from another entity -->\n    <data key=\"current_password\">{{_ENV.MAGENTO_ADMIN_PASSWORD}}</data>  <!-- ENV file reference -->\n</entity>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"reference\"\n    }}>{`Reference`}</h2>\n    <h3 {...{\n      \"id\": \"entities\"\n    }}>{`entities`}</h3>\n    <p><inlineCode parentName=\"p\">{`<entities>`}</inlineCode>{` is an element that contains all `}<inlineCode parentName=\"p\">{`<entity>`}</inlineCode>{`  elements.`}</p>\n    <h3 {...{\n      \"id\": \"entity\"\n    }}>{`entity`}</h3>\n    <p><inlineCode parentName=\"p\">{`<entity>`}</inlineCode>{` is an element that contains `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` elements.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the `}<inlineCode parentName=\"td\">{`<entity>`}</inlineCode>{`. Use camel case for entity names.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Node containing the exact name of `}<inlineCode parentName=\"td\">{`<entity>`}</inlineCode>{` type. Used later to find specific Persistence Layer Model class. `}<inlineCode parentName=\"td\">{`type`}</inlineCode>{` in `}<inlineCode parentName=\"td\">{`<data>`}</inlineCode>{` can be whatever the user wants; There are no constraints. It is important when persisting data, depending on the `}<inlineCode parentName=\"td\">{`type`}</inlineCode>{` given, as it will try to match a metadata definition with the operation being done. Example: A `}<inlineCode parentName=\"td\">{`myCustomer`}</inlineCode>{` entity with `}<inlineCode parentName=\"td\">{`type=\"customer\"`}</inlineCode>{`, calling `}<inlineCode parentName=\"td\">{`<createData entity=\"myCustomer\"/>`}</inlineCode>{`, will try to find a metadata entry with the following attributes: `}<inlineCode parentName=\"td\">{`<operation dataType=\"customer\" type=\"create\">`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`deprecated`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Used to warn about the future deprecation of the data entity. String will appear in Allure reports and console output at runtime.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><inlineCode parentName=\"p\">{`<entity>`}</inlineCode>{` may contain one or more `}<a parentName=\"p\" {...{\n        \"href\": \"#data\"\n      }}><inlineCode parentName=\"a\">{`<data>`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"#var\"\n      }}><inlineCode parentName=\"a\">{`<var>`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"#requiredentity\"\n      }}><inlineCode parentName=\"a\">{`<required-entities>`}</inlineCode></a>{`, or `}<a parentName=\"p\" {...{\n        \"href\": \"#array\"\n      }}><inlineCode parentName=\"a\">{`<array>`}</inlineCode></a>{` elements in any sequence.`}</p>\n    <h3 {...{\n      \"id\": \"data\"\n    }}>{`data`}</h3>\n    <p><inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` is an element containing a data/value pair.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key attribute of data/value pair.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`unique`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`enum: `}<inlineCode parentName=\"td\">{`\"prefix\"`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`\"suffix\"`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Add suite or test wide unique sequence as \"prefix\" or \"suffix\" to the data value if specified.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<data key=\"name\" unique=\"suffix\">simpleCategory</data>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"var\"\n    }}>{`var`}</h3>\n    <p><inlineCode parentName=\"p\">{`<var>`}</inlineCode>{` is an element that can be used to grab a key value from another entity. For example, when creating a customer with the `}<inlineCode parentName=\"p\">{`<createData>`}</inlineCode>{` action, the server responds with the auto-incremented ID of that customer. Use `}<inlineCode parentName=\"p\">{`<var>`}</inlineCode>{` to access that ID and use it in another data entity.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key attribute of this entity to assign a value to.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`entityType`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type attribute of referenced entity.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`entityKey`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key attribute of the referenced entity from which to get a value.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`unique`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><em parentName=\"td\">{`This attribute hasn't been implemented yet.`}</em></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<var key=\"parent_id\" entityType=\"category\" entityKey=\"id\" />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"requiredentity\"\n    }}>{`requiredEntity`}</h3>\n    <p><inlineCode parentName=\"p\">{`<requiredEntity>`}</inlineCode>{` is an element that specifies the parent/child relationship between complex types.`}</p>\n    <p>{`Example: You have customer address info. To specify that relationship:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"CustomerEntity\" type=\"customer\">\n    ...\n    <requiredEntity type=\"address\">AddressEntity</requiredEntity>\n    ...\n</entity>\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`type`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type attribute of `}<inlineCode parentName=\"td\">{`<requiredEntity>`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"array\"\n    }}>{`array`}</h3>\n    <p><inlineCode parentName=\"p\">{`<array>`}</inlineCode>{` is an element that contains a reference to an array of values.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"AddressEntity\" type=\"address\">\n    ...\n    <array key=\"street\">\n        <item>7700 W Parmer Ln</item>\n        <item>Bld D</item>\n    </array>\n    ...\n</entity>\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`key`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key attribute of this entity in which to assign a value.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><inlineCode parentName=\"p\">{`<array>`}</inlineCode>{` may contain `}<a parentName=\"p\" {...{\n        \"href\": \"#item\"\n      }}><inlineCode parentName=\"a\">{`<item>`}</inlineCode></a>{` elements.`}</p>\n    <h3 {...{\n      \"id\": \"item\"\n    }}>{`item`}</h3>\n    <p><inlineCode parentName=\"p\">{`<item>`}</inlineCode>{` is an individual piece of data to be passed in as part of the parent `}<inlineCode parentName=\"p\">{`<array>`}</inlineCode>{` type.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attributes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key attribute of `}<item />{` entity in which to assign a value. By default numeric key will be generated.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    {\n      /* Link Definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}