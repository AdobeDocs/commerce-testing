{"version":3,"file":"component---src-pages-functional-testing-framework-reporting-md-ec443f77efbd11752ac0.js","mappings":"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","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/reporting.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"reporting\"\n    }}>{`Reporting`}</h1>\n    <p>{`The Functional Testing Framework provides two types of reporting:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Inline reporting that you can view in the terminal as you run `}<a parentName=\"li\" {...{\n          \"href\": \"commands/mftf.md\"\n        }}><inlineCode parentName=\"a\">{`mftf`}</inlineCode></a>{` or `}<a parentName=\"li\" {...{\n          \"href\": \"commands/codeception.md\"\n        }}><inlineCode parentName=\"a\">{`codecept`}</inlineCode></a>{` CLI commands.`}</li>\n      <li parentName=\"ul\">{`HTML reports that you can view using the `}<a parentName=\"li\" {...{\n          \"href\": \"https://docs.qameta.io/allure/\"\n        }}>{`Allure Framework`}</a>{` after a test run completes.`}</li>\n    </ul>\n    <p>{`When you run a test, the Functional Testing Framework copies all reporting artifacts to the `}<inlineCode parentName=\"p\">{`dev/tests/acceptance/tests/_output`}</inlineCode>{` subdirectory in the Adobe Commerce or Magento Open Source root directory.\nThe directory contains:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`allure-results/`}</inlineCode>{` that is a directory generated and served by the Allure Framework.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`failed`}</inlineCode>{` that is a text file containing relative paths to failed tests after the last test run.\nThe paths are relative to `}<inlineCode parentName=\"li\">{`dev/tests/acceptance/`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.html`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`.png`}</inlineCode>{` files that are screenshots of fails in HTML and PNG formats.\nTo cleanup the `}<inlineCode parentName=\"li\">{`_output/`}</inlineCode>{` directory, remove them manually.`}</li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`mftf`}</inlineCode>{` tool logs output continuously to the `}<inlineCode parentName=\"p\">{`dev/tests/acceptance/mftf.log`}</inlineCode>{` file.`}</p>\n    <h2 {...{\n      \"id\": \"command-line\"\n    }}>{`Command line`}</h2>\n    <p>{`The Functional Testing Framework reports about its progress during test run when you run the `}<inlineCode parentName=\"p\">{`mftf`}</inlineCode>{` CLI tool with `}<a parentName=\"p\" {...{\n        \"href\": \"commands/mftf.md#runtest\"\n      }}><inlineCode parentName=\"a\">{`run:test`}</inlineCode></a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"commands/mftf.md#rungroup\"\n      }}><inlineCode parentName=\"a\">{`run:group`}</inlineCode></a>{` commands.`}</p>\n    <p>{`The report can contain three main parts:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Pre-run checks:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Environment check, such as PHP warnings, etc.`}</li>\n          <li parentName=\"ul\">{`XML test validation like deprecation warnings such as missing required components in XML tests.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Codeception report which is the progress report for each test.`}</li>\n      <li parentName=\"ul\">{`Total results of the test run such as number of tests, assertions, and failures.`}</li>\n    </ul>\n    <p>{`To manage the level of verbosity, use `}<inlineCode parentName=\"p\">{`-v`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--verbose`}</inlineCode>{` flag in the `}<inlineCode parentName=\"p\">{`mftf`}</inlineCode>{` commands.\nTo enable verbosity using the `}<inlineCode parentName=\"p\">{`codecept`}</inlineCode>{` commands, refer to the Codeception `}<a parentName=\"p\" {...{\n        \"href\": \"https://codeception.com/docs/reference/Commands\"\n      }}>{`Console Commands`}</a>{`.`}</p>\n    <p>{`The following sections demonstrate an example interpretation of a complete log separated into chunks.`}</p>\n    <h3 {...{\n      \"id\": \"pre-run-check-report\"\n    }}>{`Pre-run check report`}</h3>\n    <p>{`First, the Functional Testing Framework returns `}<inlineCode parentName=\"p\">{`DEPRECATION`}</inlineCode>{` warnings alerting you that required test components are missing in XML test definitions.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`DEPRECATION: Test AdminFilteringCategoryProductsUsingScopeSelectorTest is missing required annotations.{\"testName\":\"AdminFilteringCategoryProductsUsingScopeSelectorTest\",\"missingAnnotations\":\"stories\"}\nDEPRECATION: Test AdminAbleToShipPartiallyInvoicedItemsTest is missing required annotations.{\"testName\":\"AdminAbleToShipPartiallyInvoicedItemsTest\",\"missingAnnotations\":\"stories\"}\nDEPRECATION: Test AdminRemoveProductWeeeAttributeOptionTest is missing required annotations.{\"testName\":\"AdminRemoveProductWeeeAttributeOptionTest\",\"missingAnnotations\":\"stories\"}\nGenerate Tests Command Run\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Generate Tests Command Run`}</inlineCode>{` indicates that test generation is finished and tests are able to be executed.`}</p>\n    <h3 {...{\n      \"id\": \"test-execution-report\"\n    }}>{`Test execution report`}</h3>\n    <p>{`A test execution report is generated by Codeception and includes configuration information, scenario execution steps, and PASSED/FAIL verdict after each test completion.`}</p>\n    <h4 {...{\n      \"id\": \"general-information\"\n    }}>{`General information`}</h4>\n    <p>{`The general information can be useful for Functional Testing Framework contributors, but can be ignored by a test writer.`}</p>\n    <p>{`Let's consider the general part of the following test execution report:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`Generate Tests Command Run\nCodeception PHP Testing Framework v4.1.4\nPowered by PHPUnit 9.1.3 by Sebastian Bergmann and contributors.\nRunning with seed: \n\nMagento\\\\FunctionalTestingFramework.functional Tests (2) ------------------------\nModules: \\\\Magento\\\\FunctionalTestingFramework\\\\Module\\\\MagentoWebDriver, \\\\Magento\\\\FunctionalTestingFramework\\\\Module\\\\MagentoSequence, \\\\Magento\\\\FunctionalTestingFramework\\\\Module\\\\MagentoAssert, \\\\Magento\\\\FunctionalTestingFramework\\\\Module\\\\MagentoActionProxies, Asserts, \\\\Magento\\\\FunctionalTestingFramework\\\\Helper\\\\HelperContainer\n`}</code></pre>\n    <p>{`After the test generation command (mentioned in the previous section), the Functional Testing Framework delegates control to the `}<inlineCode parentName=\"p\">{`vendor/codeception`}</inlineCode>{` tool, which is the `}<inlineCode parentName=\"p\">{`Codeception PHP Testing Framework`}</inlineCode>{` of version `}<inlineCode parentName=\"p\">{`4.1.4`}</inlineCode>{` that uses `}<inlineCode parentName=\"p\">{`PHPUnit`}</inlineCode>{` of version `}<inlineCode parentName=\"p\">{`9.1.3`}</inlineCode>{`.`}</p>\n    <p>{`The tool runs `}<inlineCode parentName=\"p\">{`2 Tests`}</inlineCode>{` using the configuration defined in the `}<inlineCode parentName=\"p\">{`functional`}</inlineCode>{` suite under the `}<inlineCode parentName=\"p\">{`Magento\\\\FunctionalTestingFramework`}</inlineCode>{` namespace.\nThe corresponding configuration file is `}<inlineCode parentName=\"p\">{`acceptance/tests/functional.suite.yml`}</inlineCode>{`.\nIt enables `}<inlineCode parentName=\"p\">{`Modules: \\\\Magento\\\\FunctionalTestingFramework\\\\Module\\\\MagentoWebDriver, \\\\Magento\\\\FunctionalTestingFramework\\\\Module\\\\MagentoSequence, \\\\Magento\\\\FunctionalTestingFramework\\\\Module\\\\MagentoAssert, \\\\Magento\\\\FunctionalTestingFramework\\\\Module\\\\MagentoActionProxies, Asserts, \\\\Magento\\\\FunctionalTestingFramework\\\\Helper\\\\HelperContainer,..`}</inlineCode></p>\n    <h4 {...{\n      \"id\": \"passed-tests\"\n    }}>{`Passed tests`}</h4>\n    <p>{`The next chunk of the log reports about test execution of the first test:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`AdminLoginSuccessfulTestCest: Admin login successful test\nSignature: Magento\\\\AcceptanceTest\\\\_default\\\\Backend\\\\AdminLoginSuccessfulTestCest:AdminLoginSuccessfulTest\nTest: tests/functional/Magento/_generated/default/AdminLoginSuccessfulTestCest.php:AdminLoginSuccessfulTest\nScenario --\n[loginAsAdmin] AdminLoginActionGroup\n  [navigateToAdmin] am on page \"/admin/admin\"\n  [fillUsername] fill field \"#username\",\"admin\"\n  [fillPassword] fill field \"#login\",\"123123q\"\n  [clickLogin] click \".actions .action-primary\"\n  [clickLoginWaitForPageLoad] wait for page load 30\n  [clickDontAllowButtonIfVisible] conditional click \".modal-popup .action-secondary\",\".modal-popup .action-secondary\",true\n  [closeAdminNotification] close admin notification \n[assertLoggedIn] AssertAdminSuccessLoginActionGroup\n  [waitForAdminAccountTextVisible] wait for element visible \".page-header .admin-user-account-text\",60\n  [assertAdminAccountTextElement] see element \".page-header .admin-user-account-text\"\n[logoutFromAdmin] AdminLogoutActionGroup\n  [amOnLogoutPage] am on page \"/admin/admin/auth/logout/\"\n PASSED \n`}</code></pre>\n    <p>{`The running test is `}<inlineCode parentName=\"p\">{`AdminLoginSuccessfulTestCest`}</inlineCode>{`, which is `}<inlineCode parentName=\"p\">{`Admin login successful test`}</inlineCode>{` (this text is generated from the test name but with the `}<inlineCode parentName=\"p\">{`Cest`}</inlineCode>{` part excluded).\nIts test signature is `}<inlineCode parentName=\"p\">{`Magento\\\\AcceptanceTest\\\\_default\\\\Backend\\\\AdminLoginSuccessfulTestCest:AdminLoginSuccessfulTest`}</inlineCode>{` that matches a `}<inlineCode parentName=\"p\">{`className:methodName`}</inlineCode>{` format using namespaces.\nA path to the corresponding `}<inlineCode parentName=\"p\">{`Test`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`tests/functional/Magento/_generated/default/AdminLoginSuccessfulTestCest.php:AdminLoginSuccessfulTest`}</inlineCode>{` (relative to the `}<inlineCode parentName=\"p\">{`acceptance/`}</inlineCode>{` directory).`}</p>\n    <p><inlineCode parentName=\"p\">{`Scenario`}</inlineCode>{` lists the tests steps as they run during test execution, ending with the successful test verdict `}<inlineCode parentName=\"p\">{`PASSED`}</inlineCode>{`.\nIt means that all test steps were processed as expected.`}</p>\n    <h4 {...{\n      \"id\": \"failed-tests\"\n    }}>{`Failed tests`}</h4>\n    <p>{`The second test fails with the following report:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`AdminMenuNavigationWithSecretKeysTestCest: Admin menu navigation with secret keys test\nSignature: Magento\\\\AcceptanceTest\\\\_default\\\\Backend\\\\AdminMenuNavigationWithSecretKeysTestCest:AdminMenuNavigationWithSecretKeysTest\nTest: tests/functional/Magento/_generated/default/AdminMenuNavigationWithSecretKeysTestCest.php:AdminMenuNavigationWithSecretKeysTest\nScenario --\n[enableUrlSecretKeys] magento cli \"config:set admin/security/use_form_key 1\",60\nValue was saved.\n\n[cleanInvalidatedCaches1] magento cli \"cache:clean config full_page\",60\nCleaned cache types:\nconfig\nfull_page\n\n[loginAsAdmin] AdminLoginActionGroup\n  [navigateToAdmin] am on page \"/admin/admin\"\n  [fillUsername] fill field \"#username\",\"admin\"\n  [fillPassword] fill field \"#login\",\"123123q\"\n  [clickLogin] click \".actions .action-primary\"\n  [clickLoginWaitForPageLoad] wait for page load 30\n  [clickDontAllowButtonIfVisible] conditional click \".modal-popup .action-secondary\",\".modal-popup .action-secondary\",true\n  [closeAdminNotification] close admin notification \n[clickStoresMenuOption1] click \"#menu-magento-backend-stores\"\n[waitForStoresMenu1] wait for loading mask to disappear \n[clickStoresConfigurationMenuOption1] click \"#nav li[data-ui-id='menu-magento-config-system-config']\"\n[waitForConfigurationPageLoad1] wait for page load 60\n[seeCurrentUrlMatchesConfigPath1] see current url matches \"~\\\\/admin\\\\/system_config\\\\/~\"\n[clickCatalogMenuOption] click \"#something\"\n[saveScreenshot] save screenshot \n[disableUrlSecretKeys] magento cli \"config:set admin/security/use_form_key 0\",60\nValue was saved.\n\n[cleanInvalidatedCaches2] magento cli \"cache:clean config full_page\",60\nCleaned cache types:\nconfig\nfull_page\n\n[logout] AdminLogoutActionGroup\n  [amOnPage] am on page \"/admin/admin/auth/logout/\"\n FAIL \n--------------------------------------------------------------------------------\n`}</code></pre>\n    <p>{`The general test details and scenario has the same format as in the Passed test.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`[clickCatalogMenuOption] click \"#something\"\n[saveScreenshot] save screenshot \n`}</code></pre>\n    <p>{`When a test step fails, the Functional Testing Framework always saves a screenshot of the web page with the failing state immediately after the failure occurs.\n`}<inlineCode parentName=\"p\">{`[saveScreenshot] save screenshot`}</inlineCode>{` follows the failing test step `}<inlineCode parentName=\"p\">{`[clickCatalogMenuOption] click \"#something\"`}</inlineCode>{` in our case.`}</p>\n    <p>{`A screenshot of the fail goes at the `}<inlineCode parentName=\"p\">{`acceptance/tests/_output`}</inlineCode>{` directory in both PNG and HTML formats:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Magento.AcceptanceTest._default.Backend.AdminMenuNavigationWithSecretKeysTestCest.AdminMenuNavigationWithSecretKeysTest.fail.html`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Magento.AcceptanceTest._default.Backend.AdminMenuNavigationWithSecretKeysTestCest.AdminMenuNavigationWithSecretKeysTest.fail.png`}</inlineCode></li>\n    </ul>\n    <p>{`The file name encodes:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Magento`}</inlineCode>{` namespace`}</li>\n      <li parentName=\"ul\">{`with the `}<inlineCode parentName=\"li\">{`AcceptanceTest`}</inlineCode>{` test type`}</li>\n      <li parentName=\"ul\">{`generated as a part of the `}<inlineCode parentName=\"li\">{`_default`}</inlineCode>{` suite`}</li>\n      <li parentName=\"ul\">{`defined at the `}<inlineCode parentName=\"li\">{`Magento_Backend`}</inlineCode>{` module`}</li>\n      <li parentName=\"ul\">{`implemented in the `}<inlineCode parentName=\"li\">{`AdminMenuNavigationWithSecretKeysTestCest`}</inlineCode>{` PHP class`}</li>\n      <li parentName=\"ul\">{`with the `}<inlineCode parentName=\"li\">{`AdminMenuNavigationWithSecretKeysTest`}</inlineCode>{` test name`}</li>\n      <li parentName=\"ul\">{`and execution status `}<inlineCode parentName=\"li\">{`fail`}</inlineCode></li>\n    </ul>\n    <p>{`Actions after `}<inlineCode parentName=\"p\">{`saveScreenshot`}</inlineCode>{` are run as a part of the `}<a parentName=\"p\" {...{\n        \"href\": \"test/index.md#after\"\n      }}><inlineCode parentName=\"a\">{`after`}</inlineCode></a>{` hook of the test.`}</p>\n    <h3 {...{\n      \"id\": \"test-result-report\"\n    }}>{`Test result report`}</h3>\n    <p>{`After the Functional Testing Framework completes test execution, it generates a general report about test results along with detailed information about each fail.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`Time: 02:07.534, Memory: 150.50 MB\n\nThere was 1 failure:\n---------\n`}</code></pre>\n    <p>{`MFTF reports that the test run took 02:07.534 using 150.50 MB of system RAM.\nAnd, finally, that there was `}<inlineCode parentName=\"p\">{`1 failure`}</inlineCode>{`.`}</p>\n    <p>{`Next, the report provides details about the test failure.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`---------\n1) AdminMenuNavigationWithSecretKeysTestCest: Admin menu navigation with secret keys test\n Test  tests/functional/Magento/_generated/default/AdminMenuNavigationWithSecretKeysTestCest.php:AdminMenuNavigationWithSecretKeysTest\n Step  Click \"#something\"\n Fail  CSS or XPath element with '#something' was not found.\n\nScenario Steps:\n\n 27. // Exiting Action Group [logout] AdminLogoutActionGroup\n 26. $I->amOnPage(\"/admin/admin/auth/logout/\") at tests/functional/Magento/_generated/default/AdminMenuNavigationWithSecretKeysTestCest.php:55\n 25. // Entering Action Group [logout] AdminLogoutActionGroup\n 24. // Cleaned cache types:\nconfig\nfull_page\n\n 23. $I->magentoCLI(\"cache:clean config full_page\",60) at tests/functional/Magento/_generated/default/AdminMenuNavigationWithSecretKeysTestCest.php:52\n 22. // Value was saved.\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`1) AdminMenuNavigationWithSecretKeysTestCest: Admin menu navigation with secret keys test`}</inlineCode>{` - the failed Codeception test is `}<em parentName=\"p\">{`AdminMenuNavigationWithSecretKeysTestCest`}</em>{`. It references to the PHP class that implemented the failed test.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Test  tests/functional/Magento/_generated/default/AdminMenuNavigationWithSecretKeysTestCest.php:AdminMenuNavigationWithSecretKeysTest`}</inlineCode>{` - the test is implemented in the `}<em parentName=\"p\">{`AdminMenuNavigationWithSecretKeysTest`}</em>{` test method of the `}<em parentName=\"p\">{`tests/functional/Magento/FunctionalTest/_generated/default/AdminMenuNavigationWithSecretKeysTestCest.php`}</em>{` file under `}<inlineCode parentName=\"p\">{`<magento root>/dev/tests/acceptance/`}</inlineCode>{`.\nIt matches the corresponding test defined in XML that is `}<em parentName=\"p\">{`AdminMenuNavigationWithSecretKeysTest`}</em>{` defined in `}<inlineCode parentName=\"p\">{`<test name=\"AdminMenuNavigationWithSecretKeysTest\">...</test>`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`Step  Click \"#something\"`}</inlineCode>{` - the failing test step is the `}<em parentName=\"p\">{`click`}</em>{` action with the `}<em parentName=\"p\">{`#something`}</em>{` selector. It would correspond the `}<inlineCode parentName=\"p\">{`<click selector=\"#something\" ... />`}</inlineCode>{` test step in the XML defined tests.`}</p>\n      </li>\n    </ul>\n    <p>{`Finally, the report finishes with fairly self-descriptive lines.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`FAILURES!\nTests: 2, Assertions: 2, Failures: 1.\n`}</code></pre>\n    <p>{`MFTF encountered failures due to the last test run, that included `}<em parentName=\"p\">{`2`}</em>{` tests with `}<em parentName=\"p\">{`2`}</em>{` assertions.\n`}<em parentName=\"p\">{`1`}</em>{` assertion fails.`}</p>\n    <h2 {...{\n      \"id\": \"allure\"\n    }}>{`Allure`}</h2>\n    <p>{`Each time you run tests, the Functional Testing Framework appends an XML file with results at the `}<inlineCode parentName=\"p\">{`tests/_output/allure-results/`}</inlineCode>{` directory.`}</p>\n    <p>{`The official `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/allure-framework\"\n      }}>{`Allure Test Report`}</a>{` documentation is well-covered, so we'll list only the CLI commands that you would need for your day-to-day work.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The following commands are relative to the Adobe Commerce or Magento Open Source installation directory.`}</p>\n    <p>{`To generate the HTML Allure report in a temporary folder and open the report in your default web browser:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`allure serve dev/tests/acceptance/tests/_output/allure-results/\n`}</code></pre>\n    <p>{`To generate a report to the `}<inlineCode parentName=\"p\">{`allure-report/`}</inlineCode>{` at the current directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`allure generate dev/tests/acceptance/tests/_output/allure-result\n`}</code></pre>\n    <p>{`To generate a report to a particular directory, use the `}<inlineCode parentName=\"p\">{`-o`}</inlineCode>{` option:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`allure generate dev/tests/acceptance/tests/_output/allure-result -o dev/tests/acceptance/tests/_output/allure-report\n`}</code></pre>\n    <p>{`To launch the generated report in a web browser:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`allure open dev/tests/acceptance/tests/_output/allure-report\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`By default, Allure generates reports in the `}<inlineCode parentName=\"p\">{`allure-report/`}</inlineCode>{` at the current directory.\nFor example, if you run the command without `}<inlineCode parentName=\"p\">{`-o`}</inlineCode>{` flag while you are in the `}<inlineCode parentName=\"p\">{`magento2/`}</inlineCode>{` directory, Allure will generate a report at the `}<inlineCode parentName=\"p\">{`magento2/allure-report/`}</inlineCode>{` directory.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`allure generate dev/tests/acceptance/tests/_output/allure-result\n`}</code></pre>\n    <p>{`Example of file structure after the command run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`magento2\n├── allure-report\n├── app\n├── bin\n├── dev\n├── ...\n`}</code></pre>\n    <p>{`And if you run the `}<inlineCode parentName=\"p\">{`open`}</inlineCode>{` command with no arguments while you are in the same directory (`}<inlineCode parentName=\"p\">{`magento2/`}</inlineCode>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`allure open\n`}</code></pre>\n    <p>{`Allure would attempt to open a generated report at the `}<inlineCode parentName=\"p\">{`magento2/allure-report/`}</inlineCode>{` directory.`}</p>\n    <p>{`To clean up existing reports before generation (for example after getting new results), use the `}<inlineCode parentName=\"p\">{`--clean`}</inlineCode>{` flag:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`allure generate dev/tests/acceptance/tests/_output/allure-result --clean\n`}</code></pre>\n    <p>{`Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.qameta.io/allure/#_reporting\"\n      }}>{`Reporting section`}</a>{` for more Allure CLI details.`}</p>\n    {\n      /* Link definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}