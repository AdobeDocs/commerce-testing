{"version":3,"file":"component---src-pages-guide-integration-annotations-magento-data-fixture-md-ac1cefc98dbf27b590be.js","mappings":"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","sources":["webpack://commerce-testing/./src/pages/guide/integration/annotations/magento-data-fixture.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"data-fixture-annotation\"\n    }}>{`Data fixture annotation`}</h1>\n    <p>{`A data fixture is a PHP script that sets data you want to reuse in your test. The script can be defined in a separate file or as a local test case method.`}</p>\n    <p>{`Use data fixtures to prepare a database for tests. The Integration Testing Framework (ITF) reverts the database to its initial state automatically. To set up a date fixture, use the `}<inlineCode parentName=\"p\">{`@magentoDataFixture`}</inlineCode>{` annotation.`}</p>\n    <h2 {...{\n      \"id\": \"format\"\n    }}>{`Format`}</h2>\n    <p><inlineCode parentName=\"p\">{`@magentoDataFixture`}</inlineCode>{` takes an argument that points to the data fixture as a filename or local method.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php?start_inline=1\"\n      }}>{`/**\n * @magentoDataFixture <script_filename>|<method_name>\n */\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<script_filename>`}</inlineCode>{` is the filename of the PHP script.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<method_name>`}</inlineCode>{` is the name of the method declared in the current class.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Do not use a direct database connection in fixtures to avoid dependencies on the database structure and vendor.`}</li>\n      <li parentName=\"ol\">{`Use an application API to implement your data fixtures.`}</li>\n      <li parentName=\"ol\">{`A method that implements a data fixture must be declared as `}<inlineCode parentName=\"li\">{`public`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`static`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Fixtures declared at a test level have a higher priority than fixtures declared at a test case level.`}</li>\n      <li parentName=\"ol\">{`Test case fixtures are applied to each test in the test case, unless a test has its own fixtures declared.`}</li>\n      <li parentName=\"ol\">{`Annotation declaration at a test case level does not affect tests that have their own annotation declarations.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`As mentioned above, there are two ways to declare fixtures:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`as a PHP script file that is used by other tests and test cases.`}</li>\n      <li parentName=\"ul\">{`as a local method that is used by other tests in the test cases.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"fixture-as-a-separate-file\"\n    }}>{`Fixture as a separate file`}</h3>\n    <p>{`Define the fixture in a separate file when you want to reuse it in different test cases.\nTo declare the fixture, use one of the following conventions:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Fixture declaration as a path relative to the test suite directory`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Relative to `}<inlineCode parentName=\"li\">{`dev/tests/integration/<test suite directory>`}</inlineCode></li>\n          <li parentName=\"ul\">{`With forward slashes `}<inlineCode parentName=\"li\">{`/`}</inlineCode></li>\n          <li parentName=\"ul\">{`No leading slash`}</li>\n        </ul>\n        <p parentName=\"li\">{`Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-php\"\n          }}>{`/**\n * @magentoDataFixture Magento/Cms/_files/pages.php\n */\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Fixture declaration as a path relative to a module`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Relative to the directory of a module available in the project`}</li>\n          <li parentName=\"ul\">{`With forward slashes `}<inlineCode parentName=\"li\">{`/`}</inlineCode></li>\n          <li parentName=\"ul\">{`No leading slash in the path part of the declaration`}</li>\n        </ul>\n        <p parentName=\"li\">{`Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-php\"\n          }}>{`/**\n * @magentoDataFixture VendorName_ModuleName::Test/Integration/_files/fixture_name.php\n */\n`}</code></pre>\n      </li>\n    </ul>\n    <p>{`The ITF includes the declared PHP script to your test and executes it during the test run.`}</p>\n    <p>{`The following example demonstrates a simple implementation of a Cms module page test from the codebase.`}</p>\n    <p>{`Data fixture to test a Cms module page: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/dev/tests/integration/testsuite/Magento/Cms/_files/pages.php\"\n      }}><inlineCode parentName=\"a\">{`dev/tests/integration/testsuite/Magento/Cms/_files/pages.php`}</inlineCode></a>{`.`}</p>\n    <p>{`Test case that uses the above data fixture: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/dev/tests/integration/testsuite/Magento/Cms/Block/PageTest.php\"\n      }}><inlineCode parentName=\"a\">{`dev/tests/integration/testsuite/Magento/Cms/Block/PageTest.php`}</inlineCode></a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"fixture-as-a-method\"\n    }}>{`Fixture as a method`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/dev/tests/integration/testsuite/Magento/Cms/Controller/PageTest.php\"\n      }}><inlineCode parentName=\"a\">{`dev/tests/integration/testsuite/Magento/Cms/Controller/PageTest.php`}</inlineCode></a>{` demonstrates an example of the `}<inlineCode parentName=\"p\">{`testCreatePageWithSameModuleName()`}</inlineCode>{` test method that uses data from the `}<inlineCode parentName=\"p\">{`cmsPageWithSystemRouteFixture()`}</inlineCode>{` data fixture.`}</p>\n    <h3 {...{\n      \"id\": \"test-case-and-test-method-scopes\"\n    }}>{`Test case and test method scopes`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`@magentoDataFixture`}</inlineCode>{` can be specified for a particular test or for an entire test case.\nThe basic rules for fixture annotation at different levels are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`@magentoDataFixture`}</inlineCode>{` at a test case level, makes the framework to apply the declared fixtures to each test in the test case.\nWhen the final test is complete, all class-level fixtures are reverted.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`@magentoDataFixture`}</inlineCode>{` for a particular test, signals the framework to revert the fixtures declared on a test case level and applies the fixtures declared at a test method level instead.\nWhen the test is complete, the ITF reverts the applied fixtures.`}</li>\n    </ul>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The integration testing framework interacts with a database to revert the applied fixtures.`}</p>\n    <h3 {...{\n      \"id\": \"fixture-rollback\"\n    }}>{`Fixture rollback`}</h3>\n    <p>{`A fixture that contains database transactions only, are reverted automatically.\nOtherwise, when a fixture creates files or performs any actions other than database transaction, provide the corresponding rollback logic.\nRollbacks are run after reverting all the fixtures related to database transactions.`}</p>\n    <p>{`A fixture rollback must be of the same format as the corresponding fixture, a script or a method:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A rollback script must be named according to the corresponding fixture suffixed with `}<inlineCode parentName=\"li\">{`_rollback`}</inlineCode>{` and stored in the same directory.`}</li>\n      <li parentName=\"ul\">{`Rollback methods must be of the same class as the corresponding fixture and suffixed with `}<inlineCode parentName=\"li\">{`Rollback`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`Examples:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fixture/Rollback`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fixture name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Rollback name`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Script`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Magento/Catalog/_files/categories.php`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Magento/Catalog/_files/categories_rollback.php`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Method`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`\\\\Magento\\\\Catalog\\\\Model\\\\ProductTest::prepareProduct`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`\\\\Magento\\\\Catalog\\\\Model\\\\ProductTest::prepareProductRollback`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"restrictions\"\n    }}>{`Restrictions`}</h3>\n    <p>{`Do not rely on and do not modify an application state from within a fixture, because `}<a parentName=\"p\" {...{\n        \"href\": \"../annotations/magento-app-isolation.md\"\n      }}>{`application isolation annotation`}</a>{` can reset the application state at any time.`}</p>\n    {\n      /* Link definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}