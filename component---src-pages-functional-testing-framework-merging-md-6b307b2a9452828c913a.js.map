{"version":3,"file":"component---src-pages-functional-testing-framework-merging-md-6b307b2a9452828c913a.js","mappings":"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","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/merging.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"merging\"\n    }}>{`Merging`}</h1>\n    <p>{`The Functional Testing Framework allows you to merge test components defined in XML files, such as:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"test/index.md\"\n        }}><inlineCode parentName=\"a\">{`<tests>`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"page.md\"\n        }}><inlineCode parentName=\"a\">{`<pages>`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"section/index.md\"\n        }}><inlineCode parentName=\"a\">{`<sections>`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"data.md\"\n        }}><inlineCode parentName=\"a\">{`<data>`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"test/action-groups.md\"\n        }}><inlineCode parentName=\"a\">{`<action groups>`}</inlineCode></a></li>\n    </ul>\n    <p>{`You can create, delete, or update the component.\nIt is useful for supporting rapid test creation for extensions and customizations.`}</p>\n    <p>{`You can specify needed changes to an existing file and merge them to produce a modification of the original that incorporates the specified changes (the \"delta\").`}</p>\n    <p>{`Merging operates at the XML tag level, triggered by our parser when there are two (or more) entities with the same name.\nYour update (XML node with changes) must have the same attribute `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` as its base node (the target object to be changed).`}</p>\n    <p>{`For example:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`All tests with `}<inlineCode parentName=\"li\">{`<test name=\"SampleTest>`}</inlineCode>{` will be merged into one.`}</li>\n      <li parentName=\"ul\">{`All pages with `}<inlineCode parentName=\"li\">{`<page name=\"SamplePage>`}</inlineCode>{` will be merged into one.`}</li>\n      <li parentName=\"ul\">{`All sections with `}<inlineCode parentName=\"li\">{`<section name=\"SampleSection\">`}</inlineCode>{` will be merged into one.`}</li>\n      <li parentName=\"ul\">{`All data entities with `}<inlineCode parentName=\"li\">{`<entity name=\"sampleData\" type=\"sample\">`}</inlineCode>{` will be merged into one.`}</li>\n      <li parentName=\"ul\">{`All action groups with `}<inlineCode parentName=\"li\">{`<actionGroup name=\"SelectNotLoggedInCustomerGroupActionGroup\">`}</inlineCode>{` will be merged into one.`}</li>\n    </ul>\n    <p>{`Although a filename does not influence merging, we recommend using the same filenames in merging updates.\nThis makes it easier to search later on.`}</p>\n    <h2 {...{\n      \"id\": \"merging-precedence\"\n    }}>{`Merging precedence`}</h2>\n    <p><strong parentName=\"p\">{`Functional Testing Framework`}</strong>{` uses Module's `}<inlineCode parentName=\"p\">{`<sequence>`}</inlineCode>{` to merge all XML configurations into Codeception instructions. If there's no Sequence specified, the Functional Testing Framework would use:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Vendor modules (Magento & Vendors) located in `}<inlineCode parentName=\"li\">{`vendor/`}</inlineCode></li>\n      <li parentName=\"ol\">{`Tests located in `}<inlineCode parentName=\"li\">{`app/code/*/*/Test/Mftf`}</inlineCode></li>\n    </ol>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"63.74999999999999%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-testing/static/a7feed0dc246ab3b7a8f2900e2ffb634/5530d/mftf-extending-precedence.webp 320w\", \"/commerce-testing/static/a7feed0dc246ab3b7a8f2900e2ffb634/0c8fb/mftf-extending-precedence.webp 640w\", \"/commerce-testing/static/a7feed0dc246ab3b7a8f2900e2ffb634/94b1e/mftf-extending-precedence.webp 1280w\", \"/commerce-testing/static/a7feed0dc246ab3b7a8f2900e2ffb634/90d1c/mftf-extending-precedence.webp 1728w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-testing/static/a7feed0dc246ab3b7a8f2900e2ffb634/dd4a7/mftf-extending-precedence.png 320w\", \"/commerce-testing/static/a7feed0dc246ab3b7a8f2900e2ffb634/0f09e/mftf-extending-precedence.png 640w\", \"/commerce-testing/static/a7feed0dc246ab3b7a8f2900e2ffb634/bbbf7/mftf-extending-precedence.png 1280w\", \"/commerce-testing/static/a7feed0dc246ab3b7a8f2900e2ffb634/617a2/mftf-extending-precedence.png 1728w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-testing/static/a7feed0dc246ab3b7a8f2900e2ffb634/bbbf7/mftf-extending-precedence.png\",\n            \"alt\": \"Usual precedence for merging tests and resources\",\n            \"title\": \"Usual precedence for merging tests and resources\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"add-a-test\"\n    }}>{`Add a test`}</h2>\n    <p>{`You cannot add another `}{`[`}<inlineCode parentName=\"p\">{`<test>`}</inlineCode>{`][tests]`}{` using merging functionality.\nTo add a `}<inlineCode parentName=\"p\">{`<test>`}</inlineCode>{`, create a new `}<inlineCode parentName=\"p\">{`*Test.xml`}</inlineCode>{` file.`}</p>\n    <h2 {...{\n      \"id\": \"remove-a-test\"\n    }}>{`Remove a test`}</h2>\n    <p>{`Tests cannot be removed while merging.\nIf a `}{`[`}<inlineCode parentName=\"p\">{`<test>`}</inlineCode>{`][tests]`}{` must be skipped due to a module completely invalidating a function, you can use `}<inlineCode parentName=\"p\">{`skip`}</inlineCode>{` annotation to skip the test.`}</p>\n    <p>{`Learn more about running tests with different options using `}<a parentName=\"p\" {...{\n        \"href\": \"commands/mftf.md\"\n      }}><inlineCode parentName=\"a\">{`mftf`}</inlineCode></a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"commands/codeception.md\"\n      }}><inlineCode parentName=\"a\">{`codecept`}</inlineCode></a>{` commands.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <p>{`Skip the `}<inlineCode parentName=\"p\">{`AdminLoginSuccessfulTest`}</inlineCode>{` test in the `}<inlineCode parentName=\"p\">{`.../Backend/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file while merging with the `}<inlineCode parentName=\"p\">{`.../Foo/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file:`}</p>\n    {\n      /* {% raw %} */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<tests ...>\n    <test name=\"AdminLoginSuccessfulTest\">\n        <annotations>\n            <features value=\"Backend\"/>\n            <stories value=\"Login on the Admin Login page\"/>\n            <title value=\"Admin should be able to log into the Admin backend successfully\"/>\n            <description value=\"Admin should be able to log into the Admin backend successfully\"/>\n            <severity value=\"CRITICAL\"/>\n            <testCaseId value=\"MAGETWO-71572\"/>\n            <group value=\"example\"/>\n            <group value=\"login\"/>\n        </annotations>\n        <actionGroup ref=\"AdminLoginActionGroup\" stepKey=\"loginAsAdmin\"/>\n        <actionGroup ref=\"AssertAdminSuccessLoginActionGroup\" stepKey=\"assertLoggedIn\"/>\n        <actionGroup ref=\"AdminLogoutActionGroup\" stepKey=\"logoutFromAdmin\"/>\n    </test>\n</tests>\n`}</code></pre>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`.../Foo/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<tests ...>\n    <test name=\"AdminLoginSuccessfulTest\">\n       <annotations>\n          <skip>\n             <issueId value=\"Issue#\"/>\n          </skip>\n       </annotations>\n    </test>\n</tests>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdminLoginSuccessfulTest`}</inlineCode>{` result corresponds to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<test name=\"AdminLoginSuccessfulTest\">\n    <annotations>\n        <features value=\"Backend\"/>\n        <stories value=\"Login on the Admin Login page\"/>\n        <title value=\"Admin should be able to log into the Admin backend successfully\"/>\n        <description value=\"Admin should be able to log into the Admin backend successfully\"/>\n        <severity value=\"CRITICAL\"/>\n        <testCaseId value=\"MAGETWO-71572\"/>\n        <group value=\"example\"/>\n        <group value=\"login\"/>\n        <skip>\n            <issueId value=\"Issue#\"/>\n        </skip>\n    </annotations>\n    <actionGroup ref=\"AdminLoginActionGroup\" stepKey=\"loginAsAdmin\"/>\n    <actionGroup ref=\"AssertAdminSuccessLoginActionGroup\" stepKey=\"assertLoggedIn\"/>\n    <actionGroup ref=\"AdminLogoutActionGroup\" stepKey=\"logoutFromAdmin\"/>\n</test>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"update-a-test\"\n    }}>{`Update a test`}</h2>\n    <p>{`Any change must include information about where it should be inserted relative to other test steps in the scope of the test.`}</p>\n    <p>{`This is done using the `}<inlineCode parentName=\"p\">{`before`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`after`}</inlineCode>{` element.\nSee the previous examples.`}</p>\n    <h3 {...{\n      \"id\": \"add-a-test-step\"\n    }}>{`Add a test step`}</h3>\n    <p><strong parentName=\"p\">{`Use case`}</strong>{`: Add `}<inlineCode parentName=\"p\">{`AdminCheckOptionSalesActionGroup`}</inlineCode>{` before `}<inlineCode parentName=\"p\">{`AssertAdminSuccessLoginActionGroup`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`stepKey=\"assertLoggedIn\"`}</inlineCode>{`) and add `}<inlineCode parentName=\"p\">{`AdminAssertSalesOnDashboardActionGroup`}</inlineCode>{` after the `}<inlineCode parentName=\"p\">{`AssertAdminSuccessLoginActionGroup`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`AdminLoginSuccessfulTest`}</inlineCode>{` test (in the `}<inlineCode parentName=\"p\">{`.../Backend/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file) while merging with the `}<inlineCode parentName=\"p\">{`.../Foo/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<tests ...>\n    <test name=\"AdminLoginSuccessfulTest\">\n        <actionGroup ref=\"AdminLoginActionGroup\" stepKey=\"loginAsAdmin\"/>\n        <actionGroup ref=\"AssertAdminSuccessLoginActionGroup\" stepKey=\"assertLoggedIn\"/>\n        <actionGroup ref=\"AdminLogoutActionGroup\" stepKey=\"logoutFromAdmin\"/>\n    </test>\n</tests>\n`}</code></pre>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`.../Foo/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<tests ...>\n    <test name=\"AdminLoginSuccessfulTest\">\n        <actionGroup ref=\"AdminCheckOptionSalesActionGroup\" stepKey=\"checkOptionSales\" before=\"assertLoggedIn\"/>\n        <actionGroup ref=\"AdminAssertSalesOnDashboardActionGroup\" stepKey=\"assertSalesOnDashboard\" after=\"assertLoggedIn\"/>\n    </test>\n</tests>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdminLoginSuccessfulTest`}</inlineCode>{` result corresponds to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<test name=\"AdminLoginSuccessfulTest\">\n    <actionGroup ref=\"AdminLoginActionGroup\" stepKey=\"loginAsAdmin\"/>\n    <actionGroup ref=\"AdminCheckOptionSalesActionGroup\" stepKey=\"checkOptionSales\" before=\"assertLoggedIn\"/>\n    <actionGroup ref=\"AssertAdminSuccessLoginActionGroup\" stepKey=\"assertLoggedIn\"/>\n    <actionGroup ref=\"AdminAssertSalesOnDashboardActionGroup\" stepKey=\"assertSalesOnDashboard\" after=\"assertLoggedIn\"/>\n    <actionGroup ref=\"AdminLogoutActionGroup\" stepKey=\"logoutFromAdmin\"/>\n</test>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"remove-a-test-step\"\n    }}>{`Remove a test step`}</h3>\n    <p><strong parentName=\"p\">{`Use case`}</strong>{`: Remove `}<inlineCode parentName=\"p\">{`AdminCheckOptionSalesActionGroup`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`stepKey=\"checkOptionSales\"`}</inlineCode>{`) from the `}<inlineCode parentName=\"p\">{`LogInAsAdminTest`}</inlineCode>{` test (in the `}<inlineCode parentName=\"p\">{`.../Backend/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file) while merging with the `}<inlineCode parentName=\"p\">{`.../Foo/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<tests ...>\n    <test name=\"AdminLoginSuccessfulTest\">\n        <actionGroup ref=\"AdminLoginActionGroup\" stepKey=\"loginAsAdmin\"/>\n        <actionGroup ref=\"AdminCheckOptionSalesActionGroup\" stepKey=\"checkOptionSales\"/>\n        <actionGroup ref=\"AssertAdminSuccessLoginActionGroup\" stepKey=\"assertLoggedIn\"/>\n        <actionGroup ref=\"AdminLogoutActionGroup\" stepKey=\"logoutFromAdmin\"/>\n    </test>\n</tests>\n`}</code></pre>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`.../Foo/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<tests ...>\n    <test name=\"AdminLoginSuccessfulTest\">\n        <remove keyForRemoval=\"checkOptionSales\"/>\n    </test>\n</tests>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdminLoginSuccessfulTest`}</inlineCode>{` result corresponds to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<test name=\"AdminLoginSuccessfulTest\">\n    <actionGroup ref=\"AdminLoginActionGroup\" stepKey=\"loginAsAdmin\"/>\n    <actionGroup ref=\"AssertAdminSuccessLoginActionGroup\" stepKey=\"assertLoggedIn\"/>\n    <actionGroup ref=\"AdminLogoutActionGroup\" stepKey=\"logoutFromAdmin\"/>\n</test>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"update-a-test-step\"\n    }}>{`Update a test step`}</h3>\n    <p><strong parentName=\"p\">{`Use case`}</strong>{`: Change argument in `}<inlineCode parentName=\"p\">{`AdminCheckOptionSalesActionGroup`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`stepKey=\"checkOptionSales\"`}</inlineCode>{`) of the `}<inlineCode parentName=\"p\">{`AdminLoginSuccessfulTest`}</inlineCode>{` test (in the `}<inlineCode parentName=\"p\">{`.../Backend/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file) while merging with the `}<inlineCode parentName=\"p\">{`.../Foo/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<tests ...>\n    <test name=\"AdminLoginSuccessfulTest\">\n        <actionGroup ref=\"AdminLoginActionGroup\" stepKey=\"loginAsAdmin\"/>\n        <actionGroup ref=\"AdminCheckOptionSalesActionGroup\" stepKey=\"checkOptionSales\">\n            <argument name=\"salesOption\" value=\"{{AdminSalesData.lifeTimeSales}}\"/>\n        </actionGroup>\n        <actionGroup ref=\"AssertAdminSuccessLoginActionGroup\" stepKey=\"assertLoggedIn\"/>\n        <actionGroup ref=\"AdminLogoutActionGroup\" stepKey=\"logoutFromAdmin\"/>\n    </test>\n</tests>\n`}</code></pre>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`.../Foo/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<test name=\"AdminLoginSuccessfulTest\">\n    <actionGroup ref=\"AdminLoginActionGroup\" stepKey=\"loginAsAdmin\"/>\n    <actionGroup ref=\"AdminCheckOptionSalesActionGroup\" stepKey=\"checkOptionSales\">\n        <argument name=\"salesOption\" value=\"{{AdminSalesData.annualSales}}\"/>\n    </actionGroup>\n    <actionGroup ref=\"AssertAdminSuccessLoginActionGroup\" stepKey=\"assertLoggedIn\"/>\n    <actionGroup ref=\"AdminLogoutActionGroup\" stepKey=\"logoutFromAdmin\"/>\n</test>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdminLoginSuccessfulTest`}</inlineCode>{` result corresponds to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<test name=\"AdminLoginSuccessfulTest\">\n    <actionGroup ref=\"AdminLoginActionGroup\" stepKey=\"loginAsAdmin\"/>\n    <actionGroup ref=\"AdminCheckOptionSalesActionGroup\" stepKey=\"checkOptionSales\">\n        <argument name=\"salesOption\" value=\"{{AdminSalesData.annualSales}}\"/>\n    </actionGroup>\n    <actionGroup ref=\"AssertAdminSuccessLoginActionGroup\" stepKey=\"assertLoggedIn\"/>\n    <actionGroup ref=\"AdminLogoutActionGroup\" stepKey=\"logoutFromAdmin\"/>\n</test>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"add-several-test-steps\"\n    }}>{`Add several test steps`}</h3>\n    <p><strong parentName=\"p\">{`Use case`}</strong>{`: Add several action groups after the `}<inlineCode parentName=\"p\">{`AdminLoginActionGroup`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`stepKey=\"loginAsAdmin\"`}</inlineCode>{`) in the `}<inlineCode parentName=\"p\">{`AdminLoginSuccessfulTest`}</inlineCode>{` test (in the `}<inlineCode parentName=\"p\">{`.../Backend/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file) while merging with the `}<inlineCode parentName=\"p\">{`.../Foo/Test/LogInAsAdminTest.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<test name=\"AdminLoginSuccessfulTest\">\n    <actionGroup ref=\"AdminLoginActionGroup\" stepKey=\"loginAsAdmin\"/>\n</test>\n`}</code></pre>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`.../Foo/Test/AdminLoginSuccessfulTest.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<tests ...>\n    <test name=\"AdminLoginSuccessfulTest\" insertAfter=\"loginAsAdmin\">\n        <actionGroup ref=\"AdminCheckOptionSalesActionGroup\" stepKey=\"checkOptionSales\"/>\n        <actionGroup ref=\"AssertAdminSuccessLoginActionGroup\" stepKey=\"assertLoggedIn\"/>\n        <actionGroup ref=\"AdminLogoutActionGroup\" stepKey=\"logoutFromAdmin\"/>\n    </test>\n</tests>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdminLoginSuccessfulTest`}</inlineCode>{` result corresponds to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<tests ...>\n    <test name=\"AdminLoginSuccessfulTest\">\n        <actionGroup ref=\"AdminLoginActionGroup\" stepKey=\"loginAsAdmin\"/>\n        <actionGroup ref=\"AdminCheckOptionSalesActionGroup\" stepKey=\"checkOptionSales\"/>\n        <actionGroup ref=\"AssertAdminSuccessLoginActionGroup\" stepKey=\"assertLoggedIn\"/>\n        <actionGroup ref=\"AdminLogoutActionGroup\" stepKey=\"logoutFromAdmin\"/>\n    </test>\n</tests>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"merge-action-groups\"\n    }}>{`Merge action groups`}</h2>\n    <p>{`Merging action groups allows you to extend existing tests by reusing existing action groups, while customizing them for your specific needs.`}</p>\n    <h3 {...{\n      \"id\": \"use-case\"\n    }}>{`Use case`}</h3>\n    <p>{`Here is an action group for selecting `}<inlineCode parentName=\"p\">{`customerGroup`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`Cart Price Rules`}</inlineCode>{` section.\nThe controls change drastically in the B2B version, so it was abstracted to an action group so that it may be easily changed if B2B is enabled.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Action group for selecting `}<inlineCode parentName=\"p\">{`customerGroup`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`Cart Price Rules`}</inlineCode>{` section:`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<actionGroup name=\"SelectNotLoggedInCustomerGroupActionGroup\">\n    <selectOption selector=\"{{AdminCartPriceRulesFormSection.customerGroups}}\" userInput=\"NOT LOGGED IN\" stepKey=\"selectCustomerGroup\"/>\n</actionGroup>\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`B2B Merge file`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<!-- name matches -->\n<actionGroup name=\"SelectNotLoggedInCustomerGroupActionGroup\">\n    <!-- removes the original action -->\n    <remove keyForRemoval=\"selectCustomerGroup\"/>\n    <!-- adds in sequence of actions to be performed instead-->\n    <click selector=\"{{AdminCartPriceRulesFormSection.customerGroups}}\" stepKey=\"expandCustomerGroups\"/>\n    <fillField selector=\"{{AdminCartPriceRulesFormSection.customerGroupsInput}}\" userInput=\"NOT LOGGED IN\" stepKey=\"fillCustomerGroups\"/>\n    <click selector=\"{{AdminCartPriceRulesFormSection.customerGroupsFirstResult}}\" stepKey=\"selectNotLoggedInGroup\"/>\n    <click selector=\"{{AdminCartPriceRulesFormSection.customerGroupsDoneBtn}}\" stepKey=\"closeMultiSelect\"/>\n</actionGroup>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"merge-pages\"\n    }}>{`Merge pages`}</h2>\n    <p>{`Use `}{`[page]`}{` merging to add or remove `}{`[sections]`}{` in your module.`}</p>\n    <p>{`To merge `}{`[pages][page]`}{`, the `}<inlineCode parentName=\"p\">{`page name`}</inlineCode>{` must be the same as in the base module.\n`}<inlineCode parentName=\"p\">{`page name`}</inlineCode>{` is set in the `}<inlineCode parentName=\"p\">{`module`}</inlineCode>{` attribute.`}</p>\n    <h3 {...{\n      \"id\": \"add-a-section\"\n    }}>{`Add a section`}</h3>\n    <p><strong parentName=\"p\">{`Use case`}</strong>{`: The `}<inlineCode parentName=\"p\">{`FooBackend`}</inlineCode>{` module extends the `}<inlineCode parentName=\"p\">{`Backend`}</inlineCode>{` module and requires use of two new sections that must be covered with tests.\nAdd `}<inlineCode parentName=\"p\">{`AdminBaseBackendSection`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`AdminAnotherBackendSection`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`AdminBaseBackendPage`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`.../Backend/Page/AdminBaseBackendPage.xml`}</inlineCode>{` file):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<pages ...>\n    <page name=\"AdminBaseBackendPage\" url=\"admin\" area=\"admin\" module=\"Magento_Backend\">\n        <section name=\"AdminBaseBackendSection\"/>\n        <section name=\"AdminAnotherBackendSection\"/>\n    </page>\n</pages>\n`}</code></pre>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`.../FooBackend/Page/AdminBaseBackendPage.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<pages ...>\n   <page name=\"AdminBaseBackendPage\" url=\"admin\" area=\"admin\" module=\"Magento_Backend\">\n      <section name=\"AdminNewExtensionSection\"/>\n   </page>\n</pages>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdminBaseBackendPage`}</inlineCode>{` result corresponds to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<page name=\"AdminBaseBackendPage\" url=\"admin\" area=\"admin\" module=\"Magento_Backend\">\n\n    <section name=\"AdminBaseBackendSection\"/>\n    <section name=\"AdminAnotherBackendSection\"/>\n    <section name=\"AdminNewExtensionSection\"/>\n</page>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"remove-a-section\"\n    }}>{`Remove a section`}</h3>\n    <p><strong parentName=\"p\">{`Use case`}</strong>{`: The `}<inlineCode parentName=\"p\">{`FooBackend`}</inlineCode>{` module extends the `}<inlineCode parentName=\"p\">{`Backend`}</inlineCode>{` module and requires deletion of the `}<inlineCode parentName=\"p\">{`AdminAnotherBackendSection`}</inlineCode>{` section (the `}<inlineCode parentName=\"p\">{`.../Backend/Page/AdminBaseBackendPage.xml`}</inlineCode>{` file):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<page name=\"AdminBaseBackendPage\" url=\"admin\" area=\"admin\" module=\"Magento_Backend\">\n    <section name=\"AdminBaseBackendSection\"/>\n    <section name=\"AdminAnotherBackendSection\"/>\n</page>\n`}</code></pre>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`.../FooBackend/Page/AdminBaseBackendPage.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<page name=\"AdminBaseBackendPage\" url=\"admin\" area=\"admin\" module=\"Magento_Backend\">\n   <section name=\"AdminAnotherBackendSection\" remove=\"true\"/>\n</page>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdminBaseBackendPage`}</inlineCode>{` result corresponds to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<page name=\"AdminBaseBackendPage\" url=\"admin\" area=\"admin\" module=\"Magento_Backend\">\n   <section name=\"AdminBaseBackendSection\"/>\n</page>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"merge-sections\"\n    }}>{`Merge sections`}</h2>\n    <p>{`Use merging to add, remove, or update `}<a parentName=\"p\" {...{\n        \"href\": \"section/index.md#element\"\n      }}>{`elements`}</a>{` in sections.`}</p>\n    <p>{`All sections with the same `}<em parentName=\"p\">{`filename`}</em>{`, `}<em parentName=\"p\">{`section name`}</em>{`, and `}<em parentName=\"p\">{`element name`}</em>{` are merged during test generation.`}</p>\n    <h3 {...{\n      \"id\": \"add-an-element\"\n    }}>{`Add an element`}</h3>\n    <p><strong parentName=\"p\">{`Use case`}</strong>{`: The `}<inlineCode parentName=\"p\">{`FooBackend`}</inlineCode>{` module extends the `}<inlineCode parentName=\"p\">{`Backend`}</inlineCode>{` module and requires a new `}<inlineCode parentName=\"p\">{`mergeElement`}</inlineCode>{` element in the `}<inlineCode parentName=\"p\">{`AdminLoginFormSection`}</inlineCode>{`.\nAdd `}<inlineCode parentName=\"p\">{`mergeElement`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`AdminLoginFormSection`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<sections ...>\n   <section name=\"AdminLoginFormSection\">\n      <element name=\"username\" type=\"input\" selector=\"#username\"/>\n      <element name=\"password\" type=\"input\" selector=\"#login\"/>\n      <element name=\"signIn\" type=\"button\" selector=\".actions .action-primary\" timeout=\"30\"/>\n   </section>\n</sections>\n`}</code></pre>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`.../FooBackend/Section/AdminLoginFormSection.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<sections ...>\n   <section name=\"AdminLoginFormSection\">\n      <element name=\"mergeElement\" type=\"input\" selector=\"#selector\"/>\n   </section>\n</sections>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdminLoginFormSection`}</inlineCode>{` result corresponds to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<section name=\"AdminLoginFormSection\">\n   <element name=\"username\" type=\"input\" selector=\"#username\"/>\n   <element name=\"password\" type=\"input\" selector=\"#login\"/>\n   <element name=\"signIn\" type=\"button\" selector=\".actions .action-primary\" timeout=\"30\"/>\n   <element name=\"mergeElement\" type=\"input\" selector=\"#selector\"/>\n</section>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"remove-an-element\"\n    }}>{`Remove an element`}</h3>\n    <p><strong parentName=\"p\">{`Use case`}</strong>{`: The `}<inlineCode parentName=\"p\">{`FooBackend`}</inlineCode>{` module extends the `}<inlineCode parentName=\"p\">{`Backend`}</inlineCode>{` module and requires deletion of `}<inlineCode parentName=\"p\">{`username`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`AdminLoginFormSection`}</inlineCode>{`.\nRemove `}<inlineCode parentName=\"p\">{`username`}</inlineCode>{` from the `}<inlineCode parentName=\"p\">{`AdminLoginFormSection`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<sections ...>\n   <section name=\"AdminLoginFormSection\">\n      <element name=\"username\" type=\"input\" selector=\"#username\"/>\n      <element name=\"password\" type=\"input\" selector=\"#login\"/>\n      <element name=\"signIn\" type=\"button\" selector=\".actions .action-primary\" timeout=\"30\"/>\n   </section>\n</sections>\n`}</code></pre>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`.../FooBackend/Section/AdminLoginFormSection.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<sections ...>\n   <section name=\"AdminLoginFormSection\">\n      <element name=\"username\" type=\"input\" remove=\"true\"/>\n   </section>\n</sections>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdminLoginFormSection`}</inlineCode>{` result corresponds to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<section name=\"AdminLoginFormSection\">\n   <element name=\"password\" type=\"input\" selector=\"#login\"/>\n   <element name=\"signIn\" type=\"button\" selector=\".actions .action-primary\" timeout=\"30\"/>\n</section>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"update-an-element\"\n    }}>{`Update an element`}</h3>\n    <p><strong parentName=\"p\">{`Use case`}</strong>{`: The `}<inlineCode parentName=\"p\">{`FooBackend`}</inlineCode>{` module extends the `}<inlineCode parentName=\"p\">{`Backend`}</inlineCode>{` module and requires change of a selector in `}<inlineCode parentName=\"p\">{`username`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`AdminLoginFormSection`}</inlineCode>{`.\nUpdate `}<inlineCode parentName=\"p\">{`username`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`AdminLoginFormSection`}</inlineCode>{` (the `}<inlineCode parentName=\"p\">{`.../Backend/Section/AdminLoginFormSection.xml`}</inlineCode>{` file):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<sections ...>\n   <section name=\"AdminLoginFormSection\">\n      <element name=\"username\" type=\"input\" selector=\"#username\"/>\n      <element name=\"password\" type=\"input\" selector=\"#login\"/>\n      <element name=\"signIn\" type=\"button\" selector=\".actions .action-primary\" timeout=\"30\"/>\n   </section>\n</sections>\n`}</code></pre>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`.../FooBackend/Section/AdminLoginFormSection.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<sections ...>\n   <section name=\"AdminLoginFormSection\">\n      <element name=\"username\" type=\"input\" selector=\"#newSelector\"/>\n   </section>\n</sections>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AdminLoginFormSection`}</inlineCode>{` result corresponds to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<section name=\"AdminLoginFormSection\">\n   <element name=\"username\" type=\"input\" selector=\"#newSelector\"/>\n   <element name=\"password\" type=\"input\" selector=\"#login\"/>\n   <element name=\"signIn\" type=\"button\" selector=\".actions .action-primary\" timeout=\"30\"/>\n</section>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"merge-data\"\n    }}>{`Merge data`}</h2>\n    <p>{`You can add or update `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` elements within an `}<inlineCode parentName=\"p\">{`<entity>`}</inlineCode>{`.\nRemoval of individual `}<inlineCode parentName=\"p\">{`<data>`}</inlineCode>{` tags is not supported.`}</p>\n    <p>{`Entities and data with the same `}<em parentName=\"p\">{`filename`}</em>{`, `}<em parentName=\"p\">{`entity name and type`}</em>{`, and `}<em parentName=\"p\">{`data key`}</em>{` are merged during test generation.`}</p>\n    <h3 {...{\n      \"id\": \"add-data\"\n    }}>{`Add data`}</h3>\n    <p><strong parentName=\"p\">{`Use case`}</strong>{`: The `}<inlineCode parentName=\"p\">{`FooSample`}</inlineCode>{` module extends the `}<inlineCode parentName=\"p\">{`Sample`}</inlineCode>{` module and requires a new data item `}<inlineCode parentName=\"p\">{`thirdField`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`_defaultSample`}</inlineCode>{` entity.\nAdd `}<inlineCode parentName=\"p\">{`<data key=\"thirdField\">field3</data>`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`_defaultSample`}</inlineCode>{` (the `}<inlineCode parentName=\"p\">{`.../Sample/Data/SampleData.xml`}</inlineCode>{` file):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entities ...>\n   <entity name=\"_defaultSample\" type=\"testData\">\n      <data key=\"firstField\">field1</data>\n      <data key=\"secondField\">field2</data>\n   </entity>\n</entities>\n`}</code></pre>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`.../FooSample/Data/SampleData.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entities ...>\n   <entity name=\"sampleData\" type=\"testData\">\n      <data key=\"thirdField\">field3</data>\n   </entity>\n</entities>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`_defaultSample`}</inlineCode>{` result corresponds to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"_defaultSample\" type=\"testData\">\n   <data key=\"firstField\">field1</data>\n   <data key=\"secondField\">field2</data>\n   <data key=\"thirdField\">field3</data>\n</entity>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"update-data\"\n    }}>{`Update data`}</h3>\n    <p><strong parentName=\"p\">{`Use case`}</strong>{`: The `}<inlineCode parentName=\"p\">{`FooSample`}</inlineCode>{` module extends the `}<inlineCode parentName=\"p\">{`Sample`}</inlineCode>{` module and requires changing the `}<inlineCode parentName=\"p\">{`firstField`}</inlineCode>{` data item in the `}<inlineCode parentName=\"p\">{`_defaultSample`}</inlineCode>{` entity.\nChange `}<inlineCode parentName=\"p\">{`firstField`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`<data key=\"firstField\">overrideField</data>`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`_defaultSample`}</inlineCode>{` (the `}<inlineCode parentName=\"p\">{`.../Sample/Data/SampleData.xml`}</inlineCode>{` file):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entities ...>\n   <entity name=\"_defaultSample\" type=\"testData\">\n      <data key=\"firstField\">field1</data>\n      <data key=\"secondField\">field2</data>\n   </entity>\n</entity>\n`}</code></pre>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`.../FooSample/Data/SampleData.xml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entities ...>\n   <entity name=\"_defaultSample\" type=\"testData\">\n      <data key=\"firstField\">overrideField</data>\n   </entity>\n</entity>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`_defaultSample`}</inlineCode>{` results corresponds to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<entity name=\"_defaultSample\" type=\"testData\">\n   <data key=\"firstField\">overrideField</data>\n   <data key=\"secondField\">field2</data>\n</entity>\n`}</code></pre>\n    {\n      /* {% endraw %} */\n    }\n    {\n      /* Link definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}