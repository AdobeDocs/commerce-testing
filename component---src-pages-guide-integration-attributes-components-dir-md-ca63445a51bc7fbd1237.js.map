{"version":3,"file":"component---src-pages-guide-integration-attributes-components-dir-md-ca63445a51bc7fbd1237.js","mappings":"8MAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,oCADR,qCAGA,8IAA+H,uBAAYC,WAAW,KAAvB,iBAA/H,oGACA,eACE,GAAM,UADR,WAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,+BADZ,6CAML,eACE,GAAM,cADR,eAGA,oBACE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,SAClB,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAf,6FAAiH,uBAAYA,WAAW,MAAvB,oBAAjH,cAIN,eACE,GAAM,wBADR,yBAGA,mBAAG,uBAAYA,WAAW,KAAvB,iBAAH,gFACA,eACE,GAAM,yBADR,0BAGA,mBAAG,uBAAYA,WAAW,KAAvB,iBAAH,iKAA6N,uBAAYA,WAAW,KAAvB,iBAA7N,kCACA,eACE,GAAM,WADR,YAGA,6DAA8C,uBAAYA,WAAW,KAAvB,iBAA9C,oCACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,+BADZ,0rBA0BL,6JAA8I,uBAAYA,WAAW,KAAvB,2BAA9I,kBAAmO,uBAAYA,WAAW,KAAvB,oDAAnO,0BAAyV,uBAAYA,WAAW,KAAvB,6DAAzV,MACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,+BADZ,qPAWL,SAACV,EAAD,CAAaW,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,0IAEM,cAAGC,WAAW,IAChB,KAAQ,2CACP,uBAAYA,WAAW,KAAvB,gBAJL,mDAUH,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://commerce-testing/./src/pages/guide/integration/attributes/components-dir.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"component-registration-attribute\"\n    }}>{`Component registration attribute`}</h1>\n    <p>{`When your test design requires you to register fixture components and unregister them after the test execution, use the `}<inlineCode parentName=\"p\">{`ComponentsDir`}</inlineCode>{` attribute. It enables you to register all the components at a specified directory recursively.`}</p>\n    <h2 {...{\n      \"id\": \"format\"\n    }}>{`Format`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php?start_inline=1\"\n      }}>{`#[\n   ComponentsDir(string $path)\n]\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"parameters\"\n    }}>{`Parameters`}</h3>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`path`}</strong>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`A path to the directory with fixture components. Each component must be registered using `}<inlineCode parentName=\"li\">{`registration.php`}</inlineCode>{` file.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"test-class-attribute\"\n    }}>{`Test class attribute`}</h2>\n    <p><inlineCode parentName=\"p\">{`ComponentsDir`}</inlineCode>{` attribute for a test case is applied to all test methods in the test case.`}</p>\n    <h2 {...{\n      \"id\": \"test-method-attribute\"\n    }}>{`Test method attribute`}</h2>\n    <p><inlineCode parentName=\"p\">{`ComponentsDir`}</inlineCode>{` attribute for a test method configures the test to run with registered components located in a specified directory. If the parent test case also declares a `}<inlineCode parentName=\"p\">{`ComponentsDir`}</inlineCode>{`, both attributes are merged.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`The following example demonstrates the `}<inlineCode parentName=\"p\">{`ComponentsDir`}</inlineCode>{` attribute in different scopes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php?start_inline=1\"\n      }}>{`namespace Magento\\\\Foo;\n\n#[\n   ComponentsDir('Magento/Foo/_files/code/Magento')\n]\nclass BarTest extends \\\\PHPUnit\\\\Framework\\\\TestCase\n{\n    #[\n        ComponentsDir('Magento/Foo/_files/themes')\n    ]\n    public function testOne()\n    {\n       ...   // Here you can use registered components from 'Magento/Foo/_files/code/Magento' and 'Magento/Foo/_files/themes'\n    }\n\n    #[\n        ComponentsDir('Magento/Foo/_files/libs', 'Magento/Baz/_files/languages')\n    ]\n    public function testTwo()\n    {\n       ...   // Here you can use the registered components from 'Magento/Foo/_files/code/Magento', 'Magento/Foo/_files/libs', and 'Magento/Baz/_files/languages'\n    }\n}\n`}</code></pre>\n    <p>{`Each path declared in an attribute must contain a registration file in the specified directory or its subdirectories. For example, the `}<inlineCode parentName=\"p\">{`MagentoFooTest_MyModule`}</inlineCode>{` component at `}<inlineCode parentName=\"p\">{`ComponentsDir('Magento/Foo/_files/code/Magento')`}</inlineCode>{` can be registered in `}<inlineCode parentName=\"p\">{`Magento/Foo/_files/code/Magento/MyModule/registration.php`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php?start_inline=1\"\n      }}>{`\nuse Magento\\\\Framework\\\\Component\\\\ComponentRegistrar;\n\n\\\\Magento\\\\Framework\\\\Component\\\\ComponentRegistrar::register(\n    \\\\Magento\\\\Framework\\\\Component\\\\ComponentRegistrar::MODULE,\n    'MagentoFooTest_MyModule',\n    __DIR__\n);\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`A theme must be registered in the database.\nEach time you register a theme, reset the entire application.\nUse the `}<a parentName=\"p\" {...{\n        \"href\": \"../annotations/magento-db-isolation.md\"\n      }}><inlineCode parentName=\"a\">{`DbIsolation`}</inlineCode></a>{` attribute to keep the database integrity safe.`}</p>\n    {\n      /* Link definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}