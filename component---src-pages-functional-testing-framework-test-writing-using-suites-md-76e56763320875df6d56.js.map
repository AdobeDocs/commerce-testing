{"version":3,"file":"component---src-pages-functional-testing-framework-test-writing-using-suites-md-76e56763320875df6d56.js","mappings":"2RAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,gBACH,iBACL,kBAAK,8HACL,eACE,GAAM,mBACH,qBACL,kBAAK,mVAEL,eACE,GAAM,0BACH,4BACL,kBAAK,oCAAkC,uBAAYC,WAAW,KAAM,qDAAkE,+GAA6G,uBAAYA,WAAW,KAAM,4BAAyC,oFAAkF,uBAAYA,WAAW,KAAM,4FAAyG,MACjhB,eACE,GAAM,iCACH,mCACL,kBAAK,oCACL,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,YAAyB,iDAC3E,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,WAAwB,mDAC1E,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,aAA0B,2DAC5E,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,aAA0B,8DAE9E,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,mkBAqBP,eACE,GAAM,WACH,YACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,+oBAiBP,kBAAK,4CAA0C,uBAAYA,WAAW,KAAM,wBAAqC,MACjH,oBACE,eAAIA,WAAW,MAAO,qGACtB,eAAIA,WAAW,MAAO,4BAA0B,uBAAYA,WAAW,MAAO,WAAwB,oBAAkB,uBAAYA,WAAW,MAAO,6BACtJ,eAAIA,WAAW,MAAO,uIAExB,eACE,GAAM,wBACH,yBACL,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,uCACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,iEAGT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,gCACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,4DAGT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,mDACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,0IAIX,eACE,GAAM,qCACH,sCACL,kBAAK,sFAAoF,uBAAYA,WAAW,KAAM,OAAoB,8DAA4D,uBAAYA,WAAW,KAAM,OAAoB,+DACvP,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,wDAEP,eACE,GAAM,sBACH,wBACL,kBAAK,+TAGR,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/test-writing/using-suites.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"using-suites\"\n    }}>{`Using suites`}</h1>\n    <p>{`With an increasing number of tests, it is important to have a mechanism to organize and consolidate them for ease-of-use.`}</p>\n    <h3 {...{\n      \"id\": \"what-is-a-suite\"\n    }}>{`What is a suite?`}</h3>\n    <p>{`A suite is a collection of tests that are intended to test specific behaviors of Magento. It may contain initialization and clean up steps common to the included test cases. It allows you to include, exclude and/or group tests with preconditions and post conditions.\nYou can create a suite referencing tests, test groups and modules.`}</p>\n    <h3 {...{\n      \"id\": \"how-is-a-suite-defined\"\n    }}>{`How is a suite defined?`}</h3>\n    <p>{`A suite should be created under `}<inlineCode parentName=\"p\">{`<magento2 root>/dev/tests/acceptance/tests/_suite`}</inlineCode>{` if it has cross-module references. If a suite references only a single module, it should be created under `}<inlineCode parentName=\"p\">{`<module>/Test/Mftf/Suite`}</inlineCode>{`. The generated tests for each suite are grouped into their own directory under `}<inlineCode parentName=\"p\">{`<magento2 root>/dev/tests/acceptance/tests/functional/Magento/FunctionalTest/_generated/`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"what-is-the-format-of-a-suite\"\n    }}>{`What is the format of a suite?`}</h3>\n    <p>{`A suite is comprised of blocks:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<before>`}</inlineCode>{` : executes precondition once per suite run.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<after>`}</inlineCode>{`  : executes postcondition once per suite run.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<include>`}</inlineCode>{`: includes specific tests/groups/modules in the suite.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<exclude>`}</inlineCode>{`: excludes specific tests/groups/modules from the suite.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<suites xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:Suite/etc/suiteSchema.xsd\">\n    <suite name=\"\">\n        <before>\n        </before>\n        <after>\n        </after>\n        <include>\n            <test name=\"\"/>\n            <group name=\"\"/>\n            <module name=\"\" file=\"\"/>\n        </include>\n        <exclude>\n            <test name=\"\"/>\n            <group name=\"\"/>\n            <module name=\"\" file=\"\"/>\n        </exclude>\n    </suite>\n</suites>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<suites xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:mftf:Suite/etc/suiteSchema.xsd\">\n    <suite name=\"WYSIWYGDisabledSuite\">\n        <before>\n            <magentoCLI stepKey=\"disableWYSIWYG\" command=\"config:set cms/wysiwyg/enabled disabled\" />\n        </before>\n        <after>\n            <magentoCLI stepKey=\"enableWYSIWYG\" command=\"config:set cms/wysiwyg/enabled enabled\" />\n        </after>\n        <include>\n            <module name=\"Catalog\"/>\n        </include>\n        <exclude>\n            <test name=\"WYSIWYGIncompatibleTest\"/>\n        </exclude>\n    </suite>\n</suites>\n`}</code></pre>\n    <p>{`This example declares a suite with name `}<inlineCode parentName=\"p\">{`WYSIWYGDisabledSuite`}</inlineCode>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Disables WYSIWYG of the Adobe Commerce or Magento Open Source instance before running the tests.`}</li>\n      <li parentName=\"ul\">{`Runs all tests from the `}<inlineCode parentName=\"li\">{`Catalog`}</inlineCode>{` module, except `}<inlineCode parentName=\"li\">{`WYSIWYGIncompatibleTest`}</inlineCode></li>\n      <li parentName=\"ul\">{`Returns the Adobe Commerce or Magento Open Source instance back to its original state, by enabling WYSIWYG at the end of testing.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"using-suite-commands\"\n    }}>{`Using suite commands`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Generate all tests within a suite.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`vendor/bin/mftf generate:suite <suiteName> [<suiteName>]\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Run all tests within suite.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`vendor/bin/mftf run:group <suiteName> [<suiteName>]\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Generates any combination of suites and tests.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`vendor/bin/mftf generate:tests --tests '{\"tests\":[\"testName1\",\"testName2\"],\"suites\":{\"suite1\":[\"suite_test1\"],\"suite2\":null}}'\n`}</code></pre>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"run-specific-tests-within-a-suite\"\n    }}>{`Run specific tests within a suite`}</h3>\n    <p>{`If a test is referenced in a suite, it can be run in the suite's context with the `}<inlineCode parentName=\"p\">{`run`}</inlineCode>{` command. If a test is referenced in multiple suites, the `}<inlineCode parentName=\"p\">{`run`}</inlineCode>{` command will run the test multiple times in all contexts.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vendor/bin/mftf run:test <testName> [<testName>]\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"when-to-use-suites\"\n    }}>{`When to use suites?`}</h3>\n    <p>{`Suites are a great way to organize tests which need the Adobe Commerce or Magento Open Source to be configured in a specific way as a pre-requisite. The conditions are executed once per suite which optimizes test execution time. If you wish to categorize tests solely based on functionality, use group tags instead.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}