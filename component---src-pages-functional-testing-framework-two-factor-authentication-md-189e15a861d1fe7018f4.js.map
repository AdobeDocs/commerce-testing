{"version":3,"file":"component---src-pages-functional-testing-framework-two-factor-authentication-md-189e15a861d1fe7018f4.js","mappings":"2RAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,6CACH,gDACL,kBAAK,gNAEL,eACE,GAAM,qBACH,sBACL,kBAAK,8KACL,kBAAK,kBAAgB,uBAAYC,WAAW,KAAM,wBAAqC,gCACvF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,2EAEP,kBAAK,8BAA4B,uBAAYA,WAAW,KAAM,MAAmB,cACjF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,iEAEP,kBAAK,yBAAuB,uBAAYA,WAAW,KAAM,UAAuB,SAAO,uBAAYA,WAAW,KAAM,wBAAqC,mEAAiE,uBAAYA,WAAW,KAAM,0BAAuC,QAAM,uBAAYA,WAAW,KAAM,QAAqB,MACtV,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,iGAEP,eACE,GAAM,sBACH,uBACL,kBAAK,iCAA+B,uBAAYA,WAAW,KAAM,UAAuB,kEAAgE,uBAAYA,WAAW,KAAM,gBAA6B,WAAS,uBAAYA,WAAW,KAAM,mBAAgC,QAAM,uBAAYA,WAAW,KAAM,uBAAoC,wBAChV,cAAGA,WAAW,IACzB,KAAQ,oBACL,QAAY,MACnB,kBAAK,oBAAkB,uBAAYA,WAAW,KAAM,UAAuB,gBAC3E,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,qCAEP,eACE,GAAM,UACH,WACL,kBAAK,kGACQ,uBAAYA,WAAW,KAAM,UAAuB,KAAG,cAAGA,WAAW,IAC9E,KAAQ,4BACL,aAAiB,6CAA2C,uBAAYA,WAAW,KAAM,sBAAmC,2CACnI,kBAAK,oCACkB,uBAAYA,WAAW,KAAM,UAAuB,yDAAuD,uBAAYA,WAAW,KAAM,UAAuB,mBACtL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,iIAIV,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/two-factor-authentication.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"configuring-two-factor-authentication-2fa\"\n    }}>{`Configuring two-factor authentication (2FA)`}</h1>\n    <p>{`Using two-factor authentication (2FA) with the Functional Testing Framework is possible with some configurations settings in Magento.\nIn this document, we will use Google as the authentication provider.`}</p>\n    <h2 {...{\n      \"id\": \"configure-magento\"\n    }}>{`Configure Magento`}</h2>\n    <p>{`To prepare Adobe Commerce or Magento Open Source for testing when 2FA is enabled, set the following configurations through the Adobe Commerce or Magento Open Source CLI.`}</p>\n    <p>{`First, select `}<inlineCode parentName=\"p\">{`Google Authenticator`}</inlineCode>{` as Magento's 2FA provider:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento config:set twofactorauth/general/force_providers google\n`}</code></pre>\n    <p>{`Now set the OTP window to `}<inlineCode parentName=\"p\">{`60`}</inlineCode>{` seconds:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento config:set twofactorauth/google/otp_window 60\n`}</code></pre>\n    <p>{`Set a base32-encoded `}<inlineCode parentName=\"p\">{`secret`}</inlineCode>{` for `}<inlineCode parentName=\"p\">{`Google Authenticator`}</inlineCode>{` to generate a OTP for the default admin user that you set for `}<inlineCode parentName=\"p\">{`MAGENTO_ADMIN_USERNAME`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento security:tfa:google:set-secret <MAGENTO_ADMIN_USERNAME> <OTP_SHARED_SECRET>  \n`}</code></pre>\n    <h2 {...{\n      \"id\": \"configure-the-mftf\"\n    }}>{`Configure the MFTF`}</h2>\n    <p>{`Save the same base32-encoded `}<inlineCode parentName=\"p\">{`secret`}</inlineCode>{` in the Functional Testing Framework credential storage, e.g. `}<inlineCode parentName=\"p\">{`.credentials`}</inlineCode>{` file, `}<inlineCode parentName=\"p\">{`HashiCorp Vault`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`AWS Secrets Manager`}</inlineCode>{`.\nMore details are `}<a parentName=\"p\" {...{\n        \"href\": \"./credentials.md\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`The path of the `}<inlineCode parentName=\"p\">{`secret`}</inlineCode>{` should be:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`magento/tfa/OTP_SHARED_SECRET\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"getotp\"\n    }}>{`GetOTP`}</h2>\n    <p>{`A one-time password (OTP) is required when an admin user logs into the Admin.\nUse the action `}<inlineCode parentName=\"p\">{`getOTP`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"./test/actions.md#getotp\"\n      }}>{`Reference`}</a>{` to generate the code and use it for the `}<inlineCode parentName=\"p\">{`Authenticator code`}</inlineCode>{` text field in 2FA - Google Auth page.`}</p>\n    <p>{`Note:\nYou will need to set the `}<inlineCode parentName=\"p\">{`secret`}</inlineCode>{` for any non-default admin users first, before using `}<inlineCode parentName=\"p\">{`getOTP`}</inlineCode>{`. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<magentoCLI command=\"security:tfa:google:set-secret admin2 {{_CREDS.magento/tfa/OTP_SHARED_SECRET}}\" stepKey=\"setSecret\"/>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}