"use strict";(self.webpackChunkcommerce_testing=self.webpackChunkcommerce_testing||[]).push([[5930],{28571:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return d},default:function(){return x}});var n=a(87462),l=a(45987),m=(a(35776),a(3905)),r=a(91515);const i=["components"],d={},p=(o="InlineAlert",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,m.mdx)("div",e)});var o;const s={_frontmatter:d},c=r.Z;function x(e){let{components:t}=e,a=(0,l.Z)(e,i);return(0,m.mdx)(c,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,m.mdx)("h1",{id:"parameterized-selectors"},"Parameterized selectors"),(0,m.mdx)("p",null,"Use the following examples to create and use parameterized selectors in the MFTF."),(0,m.mdx)("h2",{id:"set-up-a-selector-in-section"},"Set up a selector in section"),(0,m.mdx)("p",null,"Create a new ",(0,m.mdx)("inlineCode",{parentName:"p"},"<element/>")," in a ",(0,m.mdx)("inlineCode",{parentName:"p"},"<section></section>"),", :"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<section name="SampleSection">\n    <element name="" type="" selector=""/>\n</section>\n')),(0,m.mdx)("p",null,"Add the attribute ",(0,m.mdx)("inlineCode",{parentName:"p"},'parameterized="true"')," to the ",(0,m.mdx)("inlineCode",{parentName:"p"},"<element/>"),":"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<section name="SampleSection">\n    <element name="" type="" selector="" parameterized="true"/>\n</section>\n')),(0,m.mdx)("p",null,"Add your selector in the ",(0,m.mdx)("inlineCode",{parentName:"p"},'selector=""')," attribute:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<section name="SampleSection">\n    <element name="" type="" selector="#element" parameterized="true"/>\n</section>\n')),(0,m.mdx)("h3",{id:"selector-with-single-variable"},"Selector with single variable"),(0,m.mdx)("p",null,"For the parameterized part of the selector, add ",(0,m.mdx)("inlineCode",{parentName:"p"},"{{var1}}")," to represent the first piece of data that you want to replace:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<section name="SampleSection">\n    <element name="" type="" selector="#element .{{var1}}" parameterized="true"/>\n</section>\n')),(0,m.mdx)("p",null,"Add a descriptive name in the ",(0,m.mdx)("inlineCode",{parentName:"p"},'name=""')," attribute:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<section name="SampleSection">\n    <element name="oneParamElement" type="" selector="#element .{{var1}}" parameterized="true"/>\n</section>\n')),(0,m.mdx)("p",null,"Add the type of UI element that the ",(0,m.mdx)("inlineCode",{parentName:"p"},"<element/>")," represents in ",(0,m.mdx)("inlineCode",{parentName:"p"},"type"),":"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<section name="SampleSection">\n    <element name="oneParamElement" type="text" selector="#element .{{var1}}" parameterized="true"/>\n</section>\n')),(0,m.mdx)("h3",{id:"selector-with-multiple-variables"},"Selector with multiple variables"),(0,m.mdx)("p",null,"For the parameterized part of the selector, add ",(0,m.mdx)("inlineCode",{parentName:"p"},"{{var1}}, {{var2}}, ..., {{varN}}")," for each parameter that you need to pass in:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<section name="SampleSection">\n    <element name="threeParamElement" type="text" selector="#element .{{var1}} .{{var2}}" parameterized="true"/>\n</section>\n')),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<section name="SampleSection">\n    <element name="threeParamElement" type="text" selector="#element .{{var1}} .{{var2}}-{{var3}}" parameterized="true"/>\n</section>\n')),(0,m.mdx)(p,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,m.mdx)("p",null,"There is no need to use sequential variables like ",(0,m.mdx)("inlineCode",{parentName:"p"},"{{var1}}"),", ",(0,m.mdx)("inlineCode",{parentName:"p"},"{{var2}}"),". Parameterized replacement reads variables and maps them to the test call of the element sequentially from left to right, meaning you can use a selector like ",(0,m.mdx)("inlineCode",{parentName:"p"},"#element .{{categoryId}} .{{productId}}"),'."'),(0,m.mdx)("h2",{id:"use-a-parameterized-selector-in-a-test"},"Use a parameterized selector in a test"),(0,m.mdx)("p",null,"Create a new ",(0,m.mdx)("a",{parentName:"p",href:"../test/index.md"},"test"),":"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<test name="SampleTest">\n\n</test>\n')),(0,m.mdx)("p",null,"Add an action:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<test name="SampleTest">\n    <click selector="" stepKey="click1"/>\n</test>\n')),(0,m.mdx)("p",null,"Enter ",(0,m.mdx)("inlineCode",{parentName:"p"},'"{{}}"')," in the ",(0,m.mdx)("inlineCode",{parentName:"p"},'selector=""')," attribute:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<test name="SampleTest">\n    <click selector="{{}}" stepKey="click1"/>\n</test>\n')),(0,m.mdx)("p",null,"Make a reference to the section that the element is assigned to inside the ",(0,m.mdx)("inlineCode",{parentName:"p"},"{{}}"),":"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<test name="SampleTest">\n    <click selector="{{SampleSection}}" stepKey="click1"/>\n</test>\n')),(0,m.mdx)("p",null,"Add name of a parameterized element, separated by ",(0,m.mdx)("inlineCode",{parentName:"p"},'"."'),", inside the ",(0,m.mdx)("inlineCode",{parentName:"p"},"{{}}"),":"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<test name="SampleTest">\n    <click selector="{{SampleSection.threeParamElement}}" stepKey="click1"/>\n</test>\n')),(0,m.mdx)("p",null,"Add a set of ",(0,m.mdx)("inlineCode",{parentName:"p"},'"()"')," following the parameterized element inside the ",(0,m.mdx)("inlineCode",{parentName:"p"},"{{}}"),":"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<test name="SampleTest">\n    <click selector="{{SampleSection.threeParamElement()}}" stepKey="click1"/>\n</test>\n')),(0,m.mdx)("p",null,"Add the first parameter, that you would like to pass to the selector, inside of the ",(0,m.mdx)("inlineCode",{parentName:"p"},"()"),":"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<test name="SampleTest">\n    <click selector="{{SampleSection.threeParamElement(_defaultCategory.is_active)}}" stepKey="click1"/>\n</test>\n')),(0,m.mdx)("p",null,"Add the second or third parameters, that you'd like to pass to the selector, separated by ",(0,m.mdx)("inlineCode",{parentName:"p"},","),":"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<test name="SampleTest">\n    <click selector="{{SampleSection.threeParamElement(_defaultCategory.is_active,\'StringLiteral\',$createDataKey.id$)}}" stepKey="click1"/>\n</test>\n')),(0,m.mdx)("p",null,"Any data can be used in parameterized elements, as well as entered in test actions:"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"_defaultCategory.is_active")," is a reference to ",(0,m.mdx)("inlineCode",{parentName:"li"},'<data key="is_active">')," in ",(0,m.mdx)("inlineCode",{parentName:"li"},'<entity name="_defaultCategory" ... ></entity>')," in the corresponding ",(0,m.mdx)("inlineCode",{parentName:"li"},".../Data/*.xml"),"."),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"'StringLiteral'")," is a literal."),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"$createDataKey.id$")," is a reference to persisted data created in the ",(0,m.mdx)("inlineCode",{parentName:"li"},"SampleTest1")," within the ",(0,m.mdx)("inlineCode",{parentName:"li"},'stepKey="createDataKey"')," action."),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"{$variable}")," is a reference to data returned by a test action, like ",(0,m.mdx)("inlineCode",{parentName:"li"},"<grabValueFrom>"),".")))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-functional-testing-framework-section-parameterized-selectors-md-03ed62276e98877557fa.js.map