{"version":3,"file":"component---src-pages-functional-testing-framework-debugging-md-40f244955c426d6fea7e.js","mappings":"2RAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,aACH,cACL,kBAAK,8IACL,oBACE,eAAIC,WAAW,MAAO,sBACtB,eAAIA,WAAW,MAAO,yEAExB,kBAAK,+EACL,eACE,GAAM,iBACH,kBACL,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,mCACL,YACP,eAAIA,WAAW,MAAO,kCAAgC,cAAGA,WAAW,KAChE,KAAQ,uCACL,eAET,eACE,GAAM,8CACH,+CACL,oBACE,eAAIA,WAAW,MAAO,sFAAoF,uBAAYA,WAAW,MAAO,kCAA+C,OACvL,eAAIA,WAAW,MAAO,UAAQ,uBAAYA,WAAW,MAAO,uBAAoC,oCAChG,eAAIA,WAAW,MAAO,UAAQ,uBAAYA,WAAW,MAAO,KAAkB,gBAAc,uBAAYA,WAAW,MAAO,eAA4B,+BACtJ,eAAIA,WAAW,MAAO,WAAS,uBAAYA,WAAW,MAAO,cAA2B,QAAM,uBAAYA,WAAW,MAAO,QAAqB,gBAAc,uBAAYA,WAAW,MAAO,cAA2B,cAAY,uBAAYA,WAAW,MAAO,SAAsB,eACxR,eAAIA,WAAW,MAAO,aAAW,uBAAYA,WAAW,MAAO,4BAAyC,qCAAmC,uBAAYA,WAAW,MAAO,yBAAsC,iBAEjN,kBAAK,yBAAuB,uBAAYA,WAAW,KAAM,4DAAyE,MAClI,oBACE,eAAIA,WAAW,MAAO,UAAQ,uBAAYA,WAAW,MAAO,OAAoB,WAAS,uBAAYA,WAAW,MAAO,KAAkB,iBAAe,uBAAYA,WAAW,MAAO,qBAAkC,MACxN,eAAIA,WAAW,MAAO,UAAQ,uBAAYA,WAAW,MAAO,OAAoB,gBAAc,uBAAYA,WAAW,MAAO,wBAAqC,yEAEnK,kBAAK,yEACL,oBACE,eAAIA,WAAW,MAAO,wCAAsC,uBAAYA,WAAW,MAAO,wBAAqC,aAAW,uBAAYA,WAAW,MAAO,qBAAkC,MAC1M,eAAIA,WAAW,MAAO,iEAA+D,uBAAYA,WAAW,MAAO,8BAA2C,uEAEhK,kBAAK,sIAAoI,uBAAYA,WAAW,KAAM,QAAqB,oBAAkB,uBAAYA,WAAW,KAAM,cAA2B,YAMxQ,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/debugging.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"debugging\"\n    }}>{`Debugging`}</h1>\n    <p>{`Debugging within the Functional Testing Framework is helpful in identifying test bugs by allowing you to pause execution so that you may:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Examine the page.`}</li>\n      <li parentName=\"ul\">{`Check returned data and other variables being used during run-time.`}</li>\n    </ul>\n    <p>{`This is straightforward to do once you create a basic Debug Configuration.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://xdebug.org/docs/install\"\n        }}>{`Xdebug`}</a></li>\n      <li parentName=\"ul\">{`PHPUnit configured for use in `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.jetbrains.com/phpstorm/\"\n        }}>{`PHPStorm`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"creating-debug-configuration-with-phpstorm\"\n    }}>{`Creating Debug Configuration with PHPStorm`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`If not already installed, download the Codeception Framework plugin for PHPStorm (`}<inlineCode parentName=\"li\">{`PhpStorm->Preferences->Plugins`}</inlineCode>{`).`}</li>\n      <li parentName=\"ol\">{`Click `}<inlineCode parentName=\"li\">{`Edit Configurations`}</inlineCode>{` on the configuration dropdown.`}</li>\n      <li parentName=\"ol\">{`Click `}<inlineCode parentName=\"li\">{`+`}</inlineCode>{` and select `}<inlineCode parentName=\"li\">{`Codeception`}</inlineCode>{` from the available types.`}</li>\n      <li parentName=\"ol\">{`Change `}<inlineCode parentName=\"li\">{`Test Scope`}</inlineCode>{` to `}<inlineCode parentName=\"li\">{`Type`}</inlineCode>{` and select `}<inlineCode parentName=\"li\">{`functional`}</inlineCode>{` from the `}<inlineCode parentName=\"li\">{`Type:`}</inlineCode>{` dropdown.`}</li>\n      <li parentName=\"ol\">{`Find the `}<inlineCode parentName=\"li\">{`Custom Working Directory`}</inlineCode>{` option and set the path to your `}<inlineCode parentName=\"li\">{`dev/tests/acceptance/`}</inlineCode>{` directory.`}</li>\n    </ol>\n    <p>{`If you get a warning `}<inlineCode parentName=\"p\">{`Path to Codeception for local machine is not configured.`}</inlineCode>{`:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Click `}<inlineCode parentName=\"li\">{`Fix`}</inlineCode>{`, then `}<inlineCode parentName=\"li\">{`+`}</inlineCode>{`, and select `}<inlineCode parentName=\"li\">{`Codeception Local`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Click `}<inlineCode parentName=\"li\">{`...`}</inlineCode>{` and locate `}<inlineCode parentName=\"li\">{`/vendor/bin/codecept`}</inlineCode>{` in your Adobe Commerce or Magento Open Source installation folder.`}</li>\n    </ol>\n    <p>{`The easiest method of tagging a test for debugging is the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`In your Debug configuration, locate `}<inlineCode parentName=\"li\">{`Test Runner options:`}</inlineCode>{` and set `}<inlineCode parentName=\"li\">{`--group testDebug`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`When you want to debug a test you are working on, simply add `}<inlineCode parentName=\"li\">{`<group value=\"testDebug\"/>`}</inlineCode>{` to the annotations. Be sure to remove this after done debugging.`}</li>\n    </ul>\n    <p>{`Your Debug Configuration should now be able to run your test and pause execution on any breakpoints you have set in the generated `}<inlineCode parentName=\"p\">{`.php`}</inlineCode>{` file under the `}<inlineCode parentName=\"p\">{`_generated`}</inlineCode>{` folder.`}</p>\n    {\n      /* Link definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}