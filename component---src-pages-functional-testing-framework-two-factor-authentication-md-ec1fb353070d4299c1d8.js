"use strict";(self.webpackChunkcommerce_testing=self.webpackChunkcommerce_testing||[]).push([[5186],{27117:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return d},default:function(){return p}});var a=t(87462),o=t(63366),r=(t(15007),t(64983)),i=t(91515),m=["components"],d={},l={_frontmatter:d},s=i.Z;function p(e){var n=e.components,t=(0,o.Z)(e,m);return(0,r.mdx)(s,(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"configuring-two-factor-authentication-2fa"},"Configuring two-factor authentication (2FA)"),(0,r.mdx)("p",null,"Using two-factor authentication (2FA) with the Functional Testing Framework is possible with some configurations settings in Magento.\nIn this document, we will use Google as the authentication provider."),(0,r.mdx)("h2",{id:"configure-magento"},"Configure Magento"),(0,r.mdx)("p",null,"To prepare Adobe Commerce or Magento Open Source for testing when 2FA is enabled, set the following configurations through the Adobe Commerce or Magento Open Source CLI."),(0,r.mdx)("p",null,"First, select ",(0,r.mdx)("inlineCode",{parentName:"p"},"Google Authenticator")," as Magento's 2FA provider:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"bin/magento config:set twofactorauth/general/force_providers google\n")),(0,r.mdx)("p",null,"Now set the OTP window to ",(0,r.mdx)("inlineCode",{parentName:"p"},"60")," seconds:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"bin/magento config:set twofactorauth/google/otp_window 60\n")),(0,r.mdx)("p",null,"Set a base32-encoded ",(0,r.mdx)("inlineCode",{parentName:"p"},"secret")," for ",(0,r.mdx)("inlineCode",{parentName:"p"},"Google Authenticator")," to generate a OTP for the default admin user that you set for ",(0,r.mdx)("inlineCode",{parentName:"p"},"MAGENTO_ADMIN_USERNAME")," in ",(0,r.mdx)("inlineCode",{parentName:"p"},".env"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"bin/magento security:tfa:google:set-secret <MAGENTO_ADMIN_USERNAME> <OTP_SHARED_SECRET>  \n")),(0,r.mdx)("h2",{id:"configure-the-mftf"},"Configure the MFTF"),(0,r.mdx)("p",null,"Save the same base32-encoded ",(0,r.mdx)("inlineCode",{parentName:"p"},"secret")," in the Functional Testing Framework credential storage, e.g. ",(0,r.mdx)("inlineCode",{parentName:"p"},".credentials")," file, ",(0,r.mdx)("inlineCode",{parentName:"p"},"HashiCorp Vault")," or ",(0,r.mdx)("inlineCode",{parentName:"p"},"AWS Secrets Manager"),".\nMore details are ",(0,r.mdx)("a",{parentName:"p",href:"./credentials.md"},"here"),"."),(0,r.mdx)("p",null,"The path of the ",(0,r.mdx)("inlineCode",{parentName:"p"},"secret")," should be:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-conf"},"magento/tfa/OTP_SHARED_SECRET\n")),(0,r.mdx)("h2",{id:"getotp"},"GetOTP"),(0,r.mdx)("p",null,"A one-time password (OTP) is required when an admin user logs into the Admin.\nUse the action ",(0,r.mdx)("inlineCode",{parentName:"p"},"getOTP")," ",(0,r.mdx)("a",{parentName:"p",href:"./test/actions.md#getotp"},"Reference")," to generate the code and use it for the ",(0,r.mdx)("inlineCode",{parentName:"p"},"Authenticator code")," text field in 2FA - Google Auth page."),(0,r.mdx)("p",null,"Note:\nYou will need to set the ",(0,r.mdx)("inlineCode",{parentName:"p"},"secret")," for any non-default admin users first, before using ",(0,r.mdx)("inlineCode",{parentName:"p"},"getOTP"),". For example:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-xml"},'<magentoCLI command="security:tfa:google:set-secret admin2 {{_CREDS.magento/tfa/OTP_SHARED_SECRET}}" stepKey="setSecret"/>\n')))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-functional-testing-framework-two-factor-authentication-md-ec1fb353070d4299c1d8.js.map