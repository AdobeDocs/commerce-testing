{"version":3,"file":"component---src-pages-functional-testing-framework-getting-started-md-c5153f56a8774e646a1d.js","mappings":"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","sources":["webpack://commerce-testing/./src/pages/functional-testing-framework/getting-started.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-testing/commerce-testing/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting started`}</h1>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p><a parentName=\"p\" {...{\n        \"href\": \"index.md#find-your-framework-version\"\n      }}>{`Find your version`}</a>{` of the Functional Testing Framework. The latest Adobe Commerce or Magento Open Source 2.4.x release supports Functional Testing Framework 3.x. The latest Adobe Commerce or Magento Open Source 2.3.x release supports Functional Testing Framework 2.6.x.`}</p>\n    <h2 {...{\n      \"id\": \"prepare-environment\"\n    }}>{`Prepare environment`}</h2>\n    <p>{`Make sure that you have the following software installed and configured on your development environment:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://devdocs.magento.com/guides/v2.4/install-gde/system-requirements.html\"\n        }}>{`PHP version supported by the Adobe Commerce or Magento Open Source instance under test`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://getcomposer.org/download/\"\n        }}>{`Composer 1.3 or later`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.oracle.com/java/technologies/downloads/\"\n        }}>{`Java 1.8 or later`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.seleniumhq.org/download/\"\n        }}>{`Selenium Server Standalone 3.1 or later`}</a>{` and `}<a parentName=\"li\" {...{\n          \"href\": \"https://sites.google.com/a/chromium.org/chromedriver/downloads\"\n        }}>{`ChromeDriver 2.33 or later`}</a>{` or other webdriver in the same directory`}</li>\n    </ul>\n    <InlineAlert variant=\"success\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.jetbrains.com/phpstorm/\"\n      }}>{`PhpStorm`}</a>{` supports `}<a parentName=\"p\" {...{\n        \"href\": \"https://blog.jetbrains.com/phpstorm/2017/03/codeception-support-comes-to-phpstorm-2017-1/\"\n      }}>{`Codeception test execution`}</a>{`, which is helpful when debugging.`}</p>\n    <h2 {...{\n      \"id\": \"install-magento\"\n    }}>{`Install Magento`}</h2>\n    <p>{`Use instructions below to install Magento.`}</p>\n    <h3 {...{\n      \"id\": \"step-1-clone-the-magento2-source-code-repository\"\n    }}>{`Step 1. Clone the `}<inlineCode parentName=\"h3\">{`magento2`}</inlineCode>{` source code repository`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`git clone https://github.com/magento/magento2.git\n`}</code></pre>\n    <p>{`or`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`git clone git@github.com:magento/magento2.git\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"step-2-install-dependencies\"\n    }}>{`Step 2. Install dependencies`}</h3>\n    <p>{`Checkout the Adobe Commerce or Magento Open Source version that you are going to test.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd magento2/\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`git checkout 2.4-develop\n`}</code></pre>\n    <p>{`Install the Adobe Commerce or Magento Open Source application.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`composer install\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"prepare-magento\"\n    }}>{`Prepare Magento`}</h2>\n    <p>{`Configure the following settings in Adobe Commerce or Magento Open Source as described below.`}</p>\n    <h3 {...{\n      \"id\": \"wysiwyg-settings\"\n    }}>{`WYSIWYG settings`}</h3>\n    <p>{`A Selenium web driver cannot enter data to fields with WYSIWYG.`}</p>\n    <p>{`To disable the WYSIWYG and enable the web driver to process these fields as simple text areas:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Log in to the Admin as an administrator.`}</li>\n      <li parentName=\"ol\">{`Navigate to `}<strong parentName=\"li\">{`Stores`}</strong>{` > `}<strong parentName=\"li\">{`Settings`}</strong>{` > `}<strong parentName=\"li\">{`Configuration`}</strong>{` > `}<strong parentName=\"li\">{`General`}</strong>{` > `}<strong parentName=\"li\">{`Content Management`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`In the WYSIWYG Options section set the `}<strong parentName=\"li\">{`Enable WYSIWYG Editor`}</strong>{` option to `}<strong parentName=\"li\">{`Disabled Completely`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Click `}<strong parentName=\"li\">{`Save Config`}</strong>{`.`}</li>\n    </ol>\n    <p>{`or via command line:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento config:set cms/wysiwyg/enabled disabled\n`}</code></pre>\n    <p>{`Clean the cache after changing the configuration values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento cache:clean config full_page\n`}</code></pre>\n    <InlineAlert variant=\"success\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`When you want to test the WYSIWYG functionality, re-enable WYSIWYG in your test suite.`}</p>\n    <h3 {...{\n      \"id\": \"security-settings\"\n    }}>{`Security settings`}</h3>\n    <p>{`To enable the `}<strong parentName=\"p\">{`Admin Account Sharing`}</strong>{` setting, to avoid unpredictable logout during a testing session, and disable the `}<strong parentName=\"p\">{`Add Secret Key in URLs`}</strong>{` setting, to open pages using direct URLs:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Navigate to `}<strong parentName=\"li\">{`Stores`}</strong>{` > `}<strong parentName=\"li\">{`Settings`}</strong>{` > `}<strong parentName=\"li\">{`Configuration`}</strong>{` > `}<strong parentName=\"li\">{`Advanced`}</strong>{` > `}<strong parentName=\"li\">{`Admin`}</strong>{` > `}<strong parentName=\"li\">{`Security`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Set `}<strong parentName=\"li\">{`Admin Account Sharing`}</strong>{` to `}<strong parentName=\"li\">{`Yes`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Set `}<strong parentName=\"li\">{`Add Secret Key to URLs`}</strong>{` to `}<strong parentName=\"li\">{`No`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Click `}<strong parentName=\"li\">{`Save Config`}</strong>{`.`}</li>\n    </ol>\n    <p>{`or via command line:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento config:set admin/security/admin_account_sharing 1\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento config:set admin/security/use_form_key 0\n`}</code></pre>\n    <p>{`Clean the cache after changing the configuration values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento cache:clean config full_page\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"testing-with-the-two-factor-authentication-2fa-extension\"\n    }}>{`Testing with the two-factor authentication (2FA) extension`}</h3>\n    <p>{`If the Adobe Commerce or Magento Open Source instance under test has the `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/security/two-factor-authentication.html\"\n      }}>{`two-factor authentication (2FA) extension`}</a>{` installed and enabled, additional configurations is needed to run test. Learn more in `}<a parentName=\"p\" {...{\n        \"href\": \"two-factor-authentication.md\"\n      }}>{`Configure with two-factor authentication (2FA)`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"webserver-configuration\"\n    }}>{`Webserver configuration`}</h3>\n    <p>{`The Functional Testing Framework does not support executing CLI commands if your web server points to `}<inlineCode parentName=\"p\">{`<MAGE_ROOT_DIR>/pub`}</inlineCode>{` directory as recommended in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/install-gde/tutorials/change-docroot-to-pub.html\"\n      }}>{`Installation Guide`}</a>{`. For the Functional Testing Framework to execute the CLI commands, the web server must point to the Adobe Commerce or Magento Open Source root directory.`}</p>\n    <h3 {...{\n      \"id\": \"nginx-settings\"\n    }}>{`Nginx settings`}</h3>\n    <p>{`If the Nginx Web server is used on your development environment, then `}<strong parentName=\"p\">{`Use Web Server Rewrites`}</strong>{` setting in `}<strong parentName=\"p\">{`Stores`}</strong>{` > Settings > `}<strong parentName=\"p\">{`Configuration`}</strong>{` > `}<strong parentName=\"p\">{`General`}</strong>{` > `}<strong parentName=\"p\">{`Web`}</strong>{` > `}<strong parentName=\"p\">{`Search Engine Optimization`}</strong>{` must be set to `}<strong parentName=\"p\">{`Yes`}</strong>{`.`}</p>\n    <p>{`Or via command line:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento config:set web/seo/use_rewrites 1\n`}</code></pre>\n    <p>{`You must clean the cache after changing the configuration values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento cache:clean config full_page\n`}</code></pre>\n    <p>{`To be able to run Adobe Commerce or Magento Open Source command-line commands in tests, add the following location block to the Nginx configuration file in the Adobe Commerce or Magento Open Source root directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`location ~* ^/dev/tests/acceptance/utils($|/) {\n  root $MAGE_ROOT;\n  location ~ ^/dev/tests/acceptance/utils/command.php {\n      fastcgi_pass   fastcgi_backend;\n      fastcgi_index  index.php;\n      fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n      include        fastcgi_params;\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"set-up-an-embedded-framework\"\n    }}>{`Set up an embedded framework`}</h2>\n    <p>{`This is the default setup of the Functional Testing Framework that you would need to cover your Adobe Commerce or Magento Open Source project with functional tests.\nIt installs the framework using an existing Composer dependency such as `}<inlineCode parentName=\"p\">{`magento/magento2-functional-testing-framework`}</inlineCode>{`.\nIf you want to set up the Functional Testing Framework as a standalone tool, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"#set-up-a-standalone-mftf\"\n      }}>{`Set up a standalone MFTF`}</a>{`.`}</p>\n    <p>{`Install MFTF.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`composer install\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"step-1-build-the-project\"\n    }}>{`Step 1. Build the project`}</h3>\n    <p>{`In the Adobe Commerce or Magento Open Source project root, run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vendor/bin/mftf build:project\n`}</code></pre>\n    <p>{`If you use PhpStorm, generate a URN catalog:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vendor/bin/mftf generate:urn-catalog .idea/misc.xml\n`}</code></pre>\n    <p>{`If the file does not exist, add the `}<inlineCode parentName=\"p\">{`--force`}</inlineCode>{` option to create it:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vendor/bin/mftf generate:urn-catalog --force .idea/misc.xml\n`}</code></pre>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"commands/mftf.md#generateurn-catalog\"\n      }}><inlineCode parentName=\"a\">{`generate:urn-catalog`}</inlineCode></a>{` for more details.`}</p>\n    <InlineAlert variant=\"success\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`You can simplify command entry by adding the  absolute  path to the `}<inlineCode parentName=\"p\">{`vendor/bin`}</inlineCode>{` directory path to your PATH environment variable.\nAfter adding the path, you can run `}<inlineCode parentName=\"p\">{`mftf`}</inlineCode>{` without having to include `}<inlineCode parentName=\"p\">{`vendor/bin`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"step-2-edit-environmental-settings\"\n    }}>{`Step 2. Edit environmental settings`}</h3>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`magento2/dev/tests/acceptance/`}</inlineCode>{` directory, edit the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file to match your system.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vim dev/tests/acceptance/.env\n`}</code></pre>\n    <p>{`Specify the following parameters, which are required to launch tests:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`MAGENTO_BASE_URL`}</inlineCode>{` must contain a domain name of the Adobe Commerce or Magento Open Source instance that will be tested.\nExample: `}<inlineCode parentName=\"p\">{`MAGENTO_BASE_URL=http://magento.test`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`MAGENTO_BACKEND_NAME`}</inlineCode>{` must contain the relative path for the Admin area.\nExample: `}<inlineCode parentName=\"p\">{`MAGENTO_BACKEND_NAME=admin`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`MAGENTO_ADMIN_USERNAME`}</inlineCode>{` must contain the username required for authorization in the Admin area.\nExample: `}<inlineCode parentName=\"p\">{`MAGENTO_ADMIN_USERNAME=admin`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`MAGENTO_ADMIN_PASSWORD`}</inlineCode>{` must now be set up in the credentials file. See `}<a parentName=\"p\" {...{\n            \"href\": \"credentials.md\"\n          }}>{`Credentials Page`}</a>{` for details.`}</p>\n      </li>\n    </ul>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If the `}<inlineCode parentName=\"p\">{`MAGENTO_BASE_URL`}</inlineCode>{` contains a subdirectory like `}<inlineCode parentName=\"p\">{`http://magento.test/magento2ce`}</inlineCode>{`, specify `}<inlineCode parentName=\"p\">{`MAGENTO_CLI_COMMAND_PATH`}</inlineCode>{`.`}</p>\n    <p>{`Learn more about environmental settings in `}<a parentName=\"p\" {...{\n        \"href\": \"configuration.md\"\n      }}>{`Configuration`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"step-3-enable-the-cli-commands\"\n    }}>{`Step 3. Enable the CLI commands`}</h3>\n    <p>{`In the Adobe Commerce or Magento Open Source project root, run the following command to enable the Functional Testing Framework to send Adobe Commerce or Magento Open Source CLI commands to your Adobe Commerce or Magento Open Source instance.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cp dev/tests/acceptance/.htaccess.sample dev/tests/acceptance/.htaccess\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"step-4-generate-and-run-tests\"\n    }}>{`Step 4. Generate and run tests`}</h3>\n    <p>{`To run tests, you need a running Selenium server and `}<a parentName=\"p\" {...{\n        \"href\": \"commands/mftf.md\"\n      }}><inlineCode parentName=\"a\">{`mftf`}</inlineCode></a>{` commands.`}</p>\n    <h4 {...{\n      \"id\": \"run-the-selenium-server\"\n    }}>{`Run the Selenium server`}</h4>\n    <p>{`Run the Selenium server in the terminal.\nFor example, the following commands download and run the Selenium server for Google Chrome:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -O http://selenium-release.storage.googleapis.com/3.14/selenium-server-standalone-3.14.0.jar\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`java -Dwebdriver.chrome.driver=chromedriver -jar selenium-server-standalone-3.14.0.jar\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"generate-and-run-all-tests\"\n    }}>{`Generate and run all tests`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vendor/bin/mftf generate:tests\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vendor/bin/codecept run functional -c dev/tests/acceptance/codeception.yml\n`}</code></pre>\n    <p>{`See more commands in `}<a parentName=\"p\" {...{\n        \"href\": \"commands/codeception.md\"\n      }}><inlineCode parentName=\"a\">{`codecept`}</inlineCode></a>{`.`}</p>\n    <h4 {...{\n      \"id\": \"run-a-simple-test\"\n    }}>{`Run a simple test`}</h4>\n    <p>{`To clean up the previously generated tests, and then generate and run a single test `}<inlineCode parentName=\"p\">{`AdminLoginSuccessfulTest`}</inlineCode>{`, run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`vendor/bin/mftf run:test AdminLoginSuccessfulTest --remove\n`}</code></pre>\n    <p>{`See more commands in `}<a parentName=\"p\" {...{\n        \"href\": \"commands/mftf.md\"\n      }}><inlineCode parentName=\"a\">{`mftf`}</inlineCode></a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"step-5-generate-reports\"\n    }}>{`Step 5. Generate reports`}</h3>\n    <p>{`During testing, the Functional Testing Framework generates test reports in CLI. You can generate visual representations of the report data using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/allure-framework\"\n      }}>{`Allure Framework`}</a>{`. To view the reports in a GUI:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/allure-framework/allure2#download\"\n        }}>{`Install Allure`}</a></li>\n      <li parentName=\"ul\">{`Run the tool to serve the artifacts in `}<inlineCode parentName=\"li\">{`dev/tests/acceptance/tests/_output/allure-results/`}</inlineCode>{`:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`allure serve dev/tests/acceptance/tests/_output/allure-results/\n`}</code></pre>\n    <p>{`Learn more about Allure in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.qameta.io/allure/\"\n      }}>{`official documentation`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"set-up-a-standalone-mftf\"\n    }}>{`Set up a standalone MFTF`}</h2>\n    <p>{`The Functional Testing Framework is a root level Adobe Commerce or Magento Open Source dependency, but it is also available for use as a standalone application. You may want to use a standalone application when you develop for or contribute to MFTF, which facilitates debugging and tracking changes. These guidelines demonstrate how to set up and run Adobe Commerce or Magento Open Source acceptance functional tests using standalone MFTF.`}</p>\n    <h3 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h3>\n    <p>{`This installation requires a local instance of the Adobe Commerce or Magento Open Source application.\nThe Functional Testing Framework uses the `}<a parentName=\"p\" {...{\n        \"href\": \"index.md#tests\"\n      }}>{`tests from modules`}</a>{` as well as the `}<inlineCode parentName=\"p\">{`app/autoload.php`}</inlineCode>{` file.`}</p>\n    <h3 {...{\n      \"id\": \"step-1-clone-the-repository\"\n    }}>{`Step 1. Clone the repository`}</h3>\n    <p>{`If you develop or contribute to MFTF, it makes sense to clone your fork of the Functional Testing Framework repository.\nFor contribution guidelines, refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2-functional-testing-framework/blob/develop/.github/CONTRIBUTING.md\"\n      }}>{`Contribution Guidelines for the Functional Testing Framework`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"step-2-install-the-mftf\"\n    }}>{`Step 2. Install the MFTF`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd magento2-functional-testing-framework\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`composer install\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"step-3-build-the-project\"\n    }}>{`Step 3. Build the project`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/mftf build:project\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"step-4-edit-environment-settings\"\n    }}>{`Step 4. Edit environment settings`}</h3>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`dev/.env`}</inlineCode>{` file, define the `}<a parentName=\"p\" {...{\n        \"href\": \"configuration.md#basic-configuration\"\n      }}>{`basic configuration`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"configuration.md#magento_bp\"\n      }}><inlineCode parentName=\"a\">{`MAGENTO_BP`}</inlineCode></a>{` parameters.`}</p>\n    <h3 {...{\n      \"id\": \"step-5-enable-the-cli-commands\"\n    }}>{`Step 5. Enable the CLI commands`}</h3>\n    <p>{`Copy the `}<inlineCode parentName=\"p\">{`etc/config/command.php`}</inlineCode>{` file into your Adobe Commerce or Magento Open Source installation at `}<inlineCode parentName=\"p\">{`<magento root directory>/dev/tests/acceptance/utils/`}</inlineCode>{`.\nCreate the `}<inlineCode parentName=\"p\">{`utils/`}</inlineCode>{` directory, if you didn't find it.`}</p>\n    <h3 {...{\n      \"id\": \"step-6-remove-the-framework-package-dependency\"\n    }}>{`Step 6. Remove the framework package dependency`}</h3>\n    <p>{`The Functional Testing Framework uses the Adobe Commerce or Magento Open Source `}<inlineCode parentName=\"p\">{`app/autoload.php`}</inlineCode>{` file to read modules.\nThe Functional Testing Framework dependency in Adobe Commerce or Magento Open Source supersedes the standalone registered namespaces unless it is removed at a Composer level.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`composer remove magento/magento2-functional-testing-framework --dev -d <path to the Adobe Commerce or Magento Open Source root directory>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"step-7-run-a-simple-test\"\n    }}>{`Step 7. Run a simple test`}</h3>\n    <p>{`Generate and run a single test that will check your logging to the Admin functionality:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/mftf run:test AdminLoginSuccessfulTest\n`}</code></pre>\n    <p>{`You can find the generated test at `}<inlineCode parentName=\"p\">{`dev/tests/functional/tests/MFTF/_generated/default/`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"step-8-generate-allure-reports\"\n    }}>{`Step 8. Generate Allure reports`}</h3>\n    <p>{`The standalone Functional Testing Framework generates Allure reports at `}<inlineCode parentName=\"p\">{`dev/tests/_output/allure-results/`}</inlineCode>{`.\nRun the Allure server pointing to this directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`allure serve dev/tests/_output/allure-results/\n`}</code></pre>\n    {\n      /* Link definitions */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}