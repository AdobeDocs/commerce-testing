"use strict";(self.webpackChunkcommerce_testing=self.webpackChunkcommerce_testing||[]).push([[1276],{82254:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return l},default:function(){return p}});var a=n(87462),i=n(63366),s=(n(15007),n(64983)),o=n(91515),r=["components"],l={},d={_frontmatter:l},m=o.Z;function p(e){var t=e.components,n=(0,i.Z)(e,r);return(0,s.mdx)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.mdx)("h1",{id:"application-testing-guide-introduction"},"Application Testing Guide introduction"),(0,s.mdx)("p",null,"The Commerce framework actively leverages various testing strategies to ensure product and code quality. Product quality matters to the end-users working with the storefront, admin panel, web APIs and CLI. Product quality tests verify that the user gets expected results while interacting with the system."),(0,s.mdx)("p",null,"Code quality is important to developers working with the codebase including:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},"System integrators"),(0,s.mdx)("li",{parentName:"ul"},"Extension developers"),(0,s.mdx)("li",{parentName:"ul"},"Adobe core team"),(0,s.mdx)("li",{parentName:"ul"},"Community contributors")),(0,s.mdx)("p",null,"Code quality matters for:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},"Extensibility - It should be straightforward to extend or modify existing behavior. Good extensibility allows for:",(0,s.mdx)("ul",{parentName:"li"},(0,s.mdx)("li",{parentName:"ul"},"Customizations and extensions using modularity of the platform."),(0,s.mdx)("li",{parentName:"ul"},"Evolution of the platform with new releases."))),(0,s.mdx)("li",{parentName:"ul"},"Maintainability - It should be straightforward for developers to work within the system. It can be improved with:",(0,s.mdx)("ul",{parentName:"li"},(0,s.mdx)("li",{parentName:"ul"},"Complexity management - Reduce the learning curve and risk of adding new bugs."),(0,s.mdx)("li",{parentName:"ul"},"Automatic bug detection - Reduces total cost of ownership."),(0,s.mdx)("li",{parentName:"ul"},"Coding standards - Ensures consistency and readability.")))),(0,s.mdx)("p",null,"Automated tests are required by ",(0,s.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/commerce/contributor/guides/code-contributions/definition-of-done/"},"definition of done")," for any code changes."),(0,s.mdx)("h2",{id:"product-quality-tests"},"Product Quality Tests"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"https://github.com/magento/mtf"},"Functional Testing Framework")," - Tests the storefront and admin panel UI."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"https://developer.adobe.com/commerce/webapi/get-started/web-api-functional-testing.html"},"Web API Functional")," - Tests the REST, SOAP, and GraphQL areas."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"integration/index.md"},"Integration")," - Ensures that all the parts work together seamlessly."),(0,s.mdx)("li",{parentName:"ul"},"Performance - Tracks changes in CPU, Memory and other metrics. Executed nightly for develop branches. Custom builds can be configured using ",(0,s.mdx)("a",{parentName:"li",href:"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/generate-data.html"},"performance toolkit"),"."),(0,s.mdx)("li",{parentName:"ul"},"Client-side performance - Measures total page load times in the browser."),(0,s.mdx)("li",{parentName:"ul"},"Load - Tracks the trends of system behavior under the load. Executed internally for each release using scenarios defined in the ",(0,s.mdx)("a",{parentName:"li",href:"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/generate-data.html"},"performance toolkit")),(0,s.mdx)("li",{parentName:"ul"},"Upgrade - Ensures that a seamless upgrade is possible from previously released product versions to the new one. Executed internally for each release."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"js/index.md"},"JavaScript")," - Tests JS modules and other JS portions of the UI. These tests are similar to integration tests used for server-side testing.")),(0,s.mdx)("h2",{id:"code-quality-tests"},"Code Quality Tests"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},"Static",(0,s.mdx)("ul",{parentName:"li"},(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"https://developer.adobe.com/commerce/php/coding-standards/php/"},"PhpCs")," - Warns developers about coding standard violations. It can be integrated into an IDE to analyze the code as soon as you write it."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"https://phpmd.org/"},"PhpMd")," - Used for monitoring code complexity and potential bugs. Can be integrated with an IDE for instant feedback."),(0,s.mdx)("li",{parentName:"ul"},"Dependency - Prevents incorrect dependencies between modules."),(0,s.mdx)("li",{parentName:"ul"},"Legacy code - Prevents usage of the legacy functionality."))),(0,s.mdx)("li",{parentName:"ul"},"Unit - Used for testing of isolated algorithms or discreet pieces of code."),(0,s.mdx)("li",{parentName:"ul"},"Extensibility - Ensures the system is extensible as designed. Extensibility tests can be written using ",(0,s.mdx)("a",{parentName:"li",href:"integration/index.md"},"Integration"),", ",(0,s.mdx)("a",{parentName:"li",href:"js/index.md"},"JavaScript")," and ",(0,s.mdx)("a",{parentName:"li",href:"https://developer.adobe.com/commerce/webapi/get-started/web-api-functional-testing.html"},"Web API Functional")," testing frameworks."),(0,s.mdx)("li",{parentName:"ul"},"Backward-compatibility - Enforces ",(0,s.mdx)("a",{parentName:"li",href:"https://developer.adobe.com/commerce/contributor/guides/code-contributions/backward-compatibility-policy/"},"backward compatibility policy")," at all levels including source code, database, message queue,  and web API.")),(0,s.mdx)("h2",{id:"functional"},"Functional"),(0,s.mdx)("p",null,"Functional tests are mainly used for system tests at a very high level by remote controlling a browser. The application is treated as a black box, and tests happen from a user perspective."),(0,s.mdx)("p",null,"The ",(0,s.mdx)("a",{parentName:"p",href:"https://github.com/magento/mtf"},"Functional Testing Framework")," (MFTF) is the main way to do functional testing. It uses XML files to run browser testing."),(0,s.mdx)("p",null,"The ",(0,s.mdx)("a",{parentName:"p",href:"https://github.com/magento/mtf"},"Functional Testing Framework")," (FTF) was the original framework used for testing Magento. It used PHP scripts to run browser testing.\nThis framework is no longer supported and FTF tests were ",(0,s.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento-functional-tests-migration"},"ported over")," to MFTF.\nUntil the porting to MFTF is finished, the FTF can still be run to ensure complete functional testing coverage."),(0,s.mdx)("h2",{id:"api-functional"},"API Functional"),(0,s.mdx)("p",null,"The Web ",(0,s.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/api"},"API")," testing framework enables you to test the ",(0,s.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/web-api"},"Web API")," from the client application point of view."),(0,s.mdx)("p",null,"For more information, see the ",(0,s.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/commerce/webapi/get-started/web-api-functional-testing.html"},"Web API functional testing"),"."),(0,s.mdx)("h2",{id:"integration"},"Integration"),(0,s.mdx)("p",null,"Integration tests run ",(0,s.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/php"},"PHP")," code in varying degrees of isolation. They tend to be a lot more low-level then functional tests. Because they do not utilize a browser to execute the tests, they can be a lot more granular in what they test. They also tend to run a lot quicker then functional tests."),(0,s.mdx)("p",null,"For more information, see ",(0,s.mdx)("a",{parentName:"p",href:"integration/index.md"},"Running Integration Tests"),"."),(0,s.mdx)("h2",{id:"javascript"},"JavaScript"),(0,s.mdx)("p",null,"Much of the functionality is provided with the help of sophisticated ",(0,s.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/javascript"},"JavaScript"),". JavaScript tests ensure the ",(0,s.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/frontend"},"frontend")," portion of functions as expected."),(0,s.mdx)("p",null,"For more information, please see the ",(0,s.mdx)("a",{parentName:"p",href:"js/index.md"},"Extension Developer Guide on JavaScript Tests"),"."),(0,s.mdx)("h2",{id:"static"},"Static"),(0,s.mdx)("p",null,"Static code analysis checks that PHP code follows the Magento 2 coding standards and best practices.\nThey are executed during continuous integration using the ",(0,s.mdx)("inlineCode",{parentName:"p"},"bin/magento")," tool."),(0,s.mdx)("p",null,"See the ",(0,s.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/unit-tests.html"},(0,s.mdx)("inlineCode",{parentName:"a"},"magento dev:tests:run"))," documentation for more information, using the test type ",(0,s.mdx)("inlineCode",{parentName:"p"},"static"),"."),(0,s.mdx)("h3",{id:"phpstan"},"PHPStan"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"https://github.com/phpstan/phpstan"},"PHPStan")," is a static analysis tool for PHP. The application integrates PHPStan by default.\nIt is available for developers to use in their own work, located at ",(0,s.mdx)("inlineCode",{parentName:"p"},"Magento\\Test\\Php\\LiveCodeTest::testPhpStan()"),"."),(0,s.mdx)("p",null,"It is run on changed ",(0,s.mdx)("inlineCode",{parentName:"p"},"*.php")," files using rule strictness ",(0,s.mdx)("a",{parentName:"p",href:"https://phpstan.org/user-guide/rule-levels"},"level 1")," and detects issues such as:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},"Method should return something but return statement is missing."),(0,s.mdx)("li",{parentName:"ul"},"Access to constant on an unknown class"),(0,s.mdx)("li",{parentName:"ul"},"Access to undefined constant"),(0,s.mdx)("li",{parentName:"ul"},"Access to an undefined property"),(0,s.mdx)("li",{parentName:"ul"},"Anonymous function has an unused use"),(0,s.mdx)("li",{parentName:"ul"},"Array has N duplicate keys"),(0,s.mdx)("li",{parentName:"ul"},"Call to an undefined method"),(0,s.mdx)("li",{parentName:"ul"},"Possibly undefined variables"),(0,s.mdx)("li",{parentName:"ul"},"Unknown magic methods and properties on classes with ",(0,s.mdx)("inlineCode",{parentName:"li"},"__call")," and ",(0,s.mdx)("inlineCode",{parentName:"li"},"__get")," (supports DataObject's magic methods: get/set/has/uns)")),(0,s.mdx)("h4",{id:"suppressing-errors"},"Suppressing errors"),(0,s.mdx)("p",null,"To ignore errors in a particular piece of code, use the ",(0,s.mdx)("inlineCode",{parentName:"p"},"phpstan:ignore")," annotation."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-php"},'// phpstan:ignore "Error message"\n')),(0,s.mdx)("p",null,"The error message text is optional.\nIt is possible to use the ",(0,s.mdx)("inlineCode",{parentName:"p"},"*")," wildcard within messages."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-php"},"/**\n * Class ClassWithIgnoreAnnotation\n */\nclass ClassWithIgnoreAnnotation\n{\n    /**\n     * Test method.\n     * phpstan:ignore \"Method level error\"\n     */\n    public function getProductList()\n    {\n        // phpstan:ignore \"Method Magento\\PhpStan\\Formatters\\Fixtures\\ClassWithIgnoreAnnotation::testMethod() invoked with 2 parameters, 1 required.\"\n        $this->testMethod('test1', 'test2');\n        // phpstan:ignore \"Method * invoked with 2 parameters, 1 required.\"\n        $this->testMethod('test1', 'test2');\n        // phpstan:ignore\n        $this->testMethod('test1', 'test2');\n        $this->testMethod('test1', 'test2'); // phpstan:ignore\n    }\n    /**\n     * @param string $arg1\n     * @return string\n     */\n    private function testMethod(string $arg1)\n    {\n        return $arg1;\n    }\n}\n")),(0,s.mdx)("h4",{id:"adding-files-and-directories-to-phpstan-blacklist"},"Adding files and directories to PHPStan blacklist"),(0,s.mdx)("p",null,"If some files are broken on purpose, add them to the blacklist to ignore them."),(0,s.mdx)("p",null,"The blacklist is located at ",(0,s.mdx)("inlineCode",{parentName:"p"},"dev/tests/static/testsuite/Magento/Test/Php/_files/phpstan/blacklist/"),"."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-config"},"lib/internal/Magento/Framework/Interception/Test/Unit/Config/ConfigTest.php\nlib/internal/Magento/Framework/Cache/Backend/Eaccelerator.php\n")),(0,s.mdx)("h4",{id:"exclude-error-messages-from-the-analysis-results"},"Exclude error messages from the analysis results"),(0,s.mdx)("p",null,"If some error messages are not relevant for the current testing scenario, use regular expressions to filter them."),(0,s.mdx)("p",null,"The PHPStan configuration file is ",(0,s.mdx)("inlineCode",{parentName:"p"},"dev/tests/static/testsuite/Magento/Test/Php/_files/phpstan/phpstan.neon"),"."),(0,s.mdx)("p",null,"Example:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-config"},"ignoreErrors:\n    # Ignore PHPStan\\Rules\\Classes\\UnusedConstructorParametersRule\n   - '#Constructor of class [a-zA-Z0-9\\\\_]+ has an unused parameter#'\n")),(0,s.mdx)("h4",{id:"exclude-files-and-directories-from-analysis"},"Exclude files and directories from analysis"),(0,s.mdx)("p",null,"As needed in some cases, you can exclude specific directories and files using the ",(0,s.mdx)("inlineCode",{parentName:"p"},"excludes_analyse")," section in the PHPStan configuration file:\n",(0,s.mdx)("inlineCode",{parentName:"p"},"dev/tests/static/testsuite/Magento/Test/Php/_files/phpstan/phpstan.neon"),"."),(0,s.mdx)("p",null,"Example:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-config"},"excludes_analyse:\n   - %rootDir%/../../../*/_files/*\n   - %rootDir%/../../../dev/tests/*/Fixtures/*\n   - %rootDir%/../../../dev/tests/*/tmp/*\n   - %rootDir%/../../../pub/*\n")),(0,s.mdx)("h2",{id:"unit"},"Unit"),(0,s.mdx)("p",null,"Unit tests are used to check a single unit of PHP code in isolation. They are usually written during development using ",(0,s.mdx)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Test-driven_development"},"test-driven development")," (TDD)."),(0,s.mdx)("p",null,"Because they do not require the full application stack to be initialized, they run an order of magnitude faster then integration tests."),(0,s.mdx)("p",null,"For more information, see ",(0,s.mdx)("a",{parentName:"p",href:"unit/index.md"},"Running Unit Tests"),"."),(0,s.mdx)("p",null,"Please refer to the article ",(0,s.mdx)("a",{parentName:"p",href:"unit/writing-testable-code.md"},"Writing testable code")," for more information on what to keep in mind when starting with TDD."),(0,s.mdx)("p",null,"The ",(0,s.mdx)("inlineCode",{parentName:"p"},"bin/magento")," tool provides a common entry point to execute any of the tests, which can be useful for continuous integration.\nPlease see the ",(0,s.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/unit-tests.html"},"System Administrators Guide on Running Tests")," for more information."),(0,s.mdx)("h2",{id:"where-to-find-the-tests-in-the-file-system"},"Where to find the tests in the file system"),(0,s.mdx)("p",null,"Each test type described above corresponds to a subdirectory in ",(0,s.mdx)("inlineCode",{parentName:"p"},"<magento2 root dir>/dev/tests"),", as shown here:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-tree"},"<repo_root>\n    <dev/tests/>\n        acceptance      (since v2.2.4)\n        api-functional\n        functional\n        integration\n        js/jasmine\n        setup-integration\n        static\n        unit\n")),(0,s.mdx)("p",null,"Each of these test types must satisfy different requirements before the MFTF can execute them."),(0,s.mdx)("p",null,"MFTF tests are kept within its respective Module folder:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-tree"},"<extension_repo_root>\n├── <Module1>\n│   ├── ...\n│   ├── Test\n│   │   ├── Unit\n│   │   ├── Integration\n│   │   └── Mftf\n│   │       ├── TestSuite\n│   │       └── composer.json\n│   └── ...\n├── <Module2>\n├── <Module1SampleData>\n└── <Module2SampleData>\n")))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guide-index-md-d76a265215fcc03b9c03.js.map