"use strict";(self.webpackChunkcommerce_testing=self.webpackChunkcommerce_testing||[]).push([[1661],{66415:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return s},default:function(){return l}});var a=n(87462),r=n(63366),o=(n(15007),n(64983)),u=n(91515),i=["components"],s={},d={_frontmatter:s},c=u.Z;function l(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.mdx)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"merge-tests"},"Merge tests"),(0,o.mdx)("p",null,"Tests can be merged to create a new test that covers new extension capabilities."),(0,o.mdx)("p",null,"In this example we add an action group that modifies the original test to interact with our extension sending in data we created."),(0,o.mdx)("h2",{id:"starting-test"},"Starting test"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-xml"},'<test name="AdminCreateSimpleProductTest">\n    <annotations>\n        <features value="Catalog"/>\n        <stories value="Create a Simple Product via Admin"/>\n        <title value="Admin should be able to create a Simple Product"/>\n        <description value="Admin should be able to create a Simple Product"/>\n        <severity value="CRITICAL"/>\n        <testCaseId value="MAGETWO-23414"/>\n        <group value="product"/>\n    </annotations>\n    <before>\n        <createData entity="_defaultCategory" stepKey="createPreReqCategory"/>\n    </before>\n    <after>\n        <amOnPage url="admin/admin/auth/logout/" stepKey="amOnLogoutPage"/>\n        <deleteData createDataKey="createPreReqCategory" stepKey="deletePreReqCategory"/>\n    </after>\n\n    <actionGroup ref="AdminLoginActionGroup" stepKey="adminLoginActionGroup1"/>\n    <actionGroup ref="AdminFillSimpleProductFormActionGroup" stepKey="fillProductFieldsInAdmin">\n        <argument name="category" value="$$createPreReqCategory$$"/>\n        <argument name="simpleProduct" value="_defaultProduct"/>\n    </actionGroup>\n    <actionGroup ref="AssertProductInStorefrontCategoryPage" stepKey="assertProductInStorefront1">\n        <argument name="category" value="$$createPreReqCategory$$"/>\n        <argument name="product" value="_defaultProduct"/>\n    </actionGroup>\n    <actionGroup ref="AssertProductInStorefrontProductPage" stepKey="assertProductInStorefront2">\n        <argument name="product" value="_defaultProduct"/>\n    </actionGroup>\n</test>\n')),(0,o.mdx)("h2",{id:"file-to-merge"},"File to merge"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-xml"},'<test name="AdminCreateSimpleProductTest">\n    \x3c!-- This will be added after the step "fillProductFieldsInAdmin" in the above test. --\x3e\n    <actionGroup ref="AddMyExtensionData" stepKey="extensionField" after="fillProductFieldsInAdmin">\n        <argument name="extensionData" value="_myData"/>\n    </actionGroup>\n\n    \x3c!-- This will be added after the step "assertProductInStorefront2" in the above test. --\x3e\n    <actionGroup ref="AssertMyExtensionDataExists" stepKey="assertExtensionInformation" after="assertProductInStorefront2">\n        <argument name="extensionData" value="_myData"/>\n    </actionGroup>\n</test>\n')),(0,o.mdx)("h2",{id:"resultant-test"},"Resultant test"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-xml"},'<test name="AdminCreateSimpleProductTest">\n    <annotations>\n        <features value="Catalog"/>\n        <stories value="Create a Simple Product via Admin"/>\n        <title value="Admin should be able to create a Simple Product"/>\n        <description value="Admin should be able to create a Simple Product"/>\n        <severity value="CRITICAL"/>\n        <testCaseId value="MAGETWO-23414"/>\n        <group value="product"/>\n    </annotations>\n    <before>\n        <createData entity="_defaultCategory" stepKey="createPreReqCategory"/>\n    </before>\n    <after>\n        <amOnPage url="admin/admin/auth/logout/" stepKey="amOnLogoutPage"/>\n        <deleteData createDataKey="createPreReqCategory" stepKey="deletePreReqCategory"/>\n    </after>\n\n    <actionGroup ref="AdminLoginActionGroup" stepKey="AdminLoginActionGroup1"/>\n    <actionGroup ref="AdminFillSimpleProductFormActionGroup" stepKey="fillProductFieldsInAdmin">\n        <argument name="category" value="$$createPreReqCategory$$"/>\n        <argument name="simpleProduct" value="_defaultProduct"/>\n    </actionGroup>\n    \x3c!-- First merged action group --\x3e\n    <actionGroup ref="AddMyExtensionData" stepKey="extensionField">\n        <argument name="extensionData" value="_myData"/>\n    </actionGroup>\n\n    <actionGroup ref="AssertProductInStorefrontCategoryPage" stepKey="assertProductInStorefront1">\n        <argument name="category" value="$$createPreReqCategory$$"/>\n        <argument name="product" value="_defaultProduct"/>\n    </actionGroup>\n    <actionGroup ref="AssertProductInStorefrontProductPage" stepKey="assertProductInStorefront2">\n        <argument name="product" value="_defaultProduct"/>\n    </actionGroup>\n    \x3c!-- Second merged action group --\x3e\n    <actionGroup ref="AssertMyExtensionDataExists" stepKey="assertExtensionInformation">\n        <argument name="extensionData" value="_myData"/>\n    </actionGroup>\n</test>\n')))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-functional-testing-framework-merge-points-merge-tests-md-099bbaea6fb689b51fb4.js.map